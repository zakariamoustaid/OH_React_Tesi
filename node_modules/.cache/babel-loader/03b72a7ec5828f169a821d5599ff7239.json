{"ast":null,"code":"import { Configuration, BillControllerApi } from \"../../generated\";\nimport { applyTokenMiddleware } from \"../../libraries/apiUtils/applyTokenMiddleware\";\nimport { CREATE_BILL_FAIL, CREATE_BILL_LOADING, CREATE_BILL_RESET, CREATE_BILL_SUCCESS } from \"./consts\";\nconst billControllerApi = new BillControllerApi(new Configuration({\n  middleware: [applyTokenMiddleware]\n}));\nexport const createBill = newBillDto => dispatch => {\n  dispatch({\n    type: CREATE_BILL_LOADING\n  });\n  billControllerApi.newBillUsingPOST({\n    newBillDto\n  }).subscribe(payload => {\n    dispatch({\n      type: CREATE_BILL_SUCCESS\n    });\n  }, error => {\n    dispatch({\n      type: CREATE_BILL_FAIL,\n      error: error\n    });\n  });\n};\nexport const createBillReset = () => dispatch => {\n  dispatch({\n    type: CREATE_BILL_RESET\n  });\n};\nexport const getBill = () => dispatch => {\n  dispatch({\n    type: GET_BILL_LOADING\n  });\n  billControllerApi.getMedicalsUsingGET({\n    sortBy: GetMedicalsUsingGETSortByEnum.NAME\n  }).subscribe(payload => {\n    if (typeof payload === \"object\" && !isEmpty(payload)) {\n      dispatch({\n        type: GET_MEDICAL_SUCCESS,\n        payload: payload\n      });\n    } else {\n      dispatch({\n        type: GET_MEDICAL_SUCCESS,\n        payload: []\n      });\n    }\n  }, error => {\n    dispatch({\n      type: GET_MEDICAL_FAIL,\n      error\n    });\n  });\n};","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/state/bills/actions.ts"],"names":["Configuration","BillControllerApi","applyTokenMiddleware","CREATE_BILL_FAIL","CREATE_BILL_LOADING","CREATE_BILL_RESET","CREATE_BILL_SUCCESS","billControllerApi","middleware","createBill","newBillDto","dispatch","type","newBillUsingPOST","subscribe","payload","error","createBillReset","getBill","GET_BILL_LOADING","getMedicalsUsingGET","sortBy","GetMedicalsUsingGETSortByEnum","NAME","isEmpty","GET_MEDICAL_SUCCESS","GET_MEDICAL_FAIL"],"mappings":"AACA,SACEA,aADF,EAEEC,iBAFF,QAKO,iBALP;AAMA,SAASC,oBAAT,QAAqC,+CAArC;AAEA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,mBAJF,QAQO,UARP;AAUA,MAAMC,iBAAiB,GAAG,IAAIN,iBAAJ,CACxB,IAAID,aAAJ,CAAkB;AAAEQ,EAAAA,UAAU,EAAE,CAACN,oBAAD;AAAd,CAAlB,CADwB,CAA1B;AAIA,OAAO,MAAMO,UAAU,GACpBC,UAAD,IACGC,QAAD,IAAiD;AAC/CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER;AADC,GAAD,CAAR;AAIAG,EAAAA,iBAAiB,CAACM,gBAAlB,CAAmC;AAAEH,IAAAA;AAAF,GAAnC,EAAmDI,SAAnD,CACGC,OAAD,IAAa;AACXJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGD,GALH,EAMGU,KAAD,IAAW;AACTL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET,gBADC;AAEPa,MAAAA,KAAK,EAAEA;AAFA,KAAD,CAAR;AAID,GAXH;AAaD,CApBE;AAsBP,OAAO,MAAMC,eAAe,GAC1B,MACGN,QAAD,IAAiD;AAC/CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP;AADC,GAAD,CAAR;AAGD,CANE;AAQP,OAAO,MAAMa,OAAO,GAClB,MACGP,QAAD,IAAsD;AACpDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEO;AADC,GAAD,CAAR;AAGAZ,EAAAA,iBAAiB,CACda,mBADH,CACuB;AACnBC,IAAAA,MAAM,EAAEC,6BAA6B,CAACC;AADnB,GADvB,EAIGT,SAJH,CAKKC,OAAD,IAAa;AACX,QAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,CAACS,OAAO,CAACT,OAAD,CAA3C,EAAsD;AACpDJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEa,mBADC;AAEPV,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAID,KALD,MAKO;AACLJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEa,mBADC;AAEPV,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAjBL,EAkBKC,KAAD,IAAW;AACTL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEc,gBADC;AAEPV,MAAAA;AAFO,KAAD,CAAR;AAID,GAvBL;AAyBD,CA/BE","sourcesContent":["import { Dispatch } from \"redux\";\nimport {\n  Configuration,\n  BillControllerApi,\n  BillDTO,\n  FullBillDTO,\n} from \"../../generated\";\nimport { applyTokenMiddleware } from \"../../libraries/apiUtils/applyTokenMiddleware\";\nimport { IAction } from \"../types\";\nimport {\n  CREATE_BILL_FAIL,\n  CREATE_BILL_LOADING,\n  CREATE_BILL_RESET,\n  CREATE_BILL_SUCCESS,\n  SEARCH_BILL_FAIL,\n  SEARCH_BILL_LOADING,\n  SEARCH_BILL_SUCCESS,\n} from \"./consts\";\n\nconst billControllerApi = new BillControllerApi(\n  new Configuration({ middleware: [applyTokenMiddleware] })\n);\n\nexport const createBill =\n  (newBillDto: FullBillDTO) =>\n    (dispatch: Dispatch<IAction<null, {}>>): void => {\n      dispatch({\n        type: CREATE_BILL_LOADING,\n      });\n\n      billControllerApi.newBillUsingPOST({ newBillDto }).subscribe(\n        (payload) => {\n          dispatch({\n            type: CREATE_BILL_SUCCESS,\n          });\n        },\n        (error) => {\n          dispatch({\n            type: CREATE_BILL_FAIL,\n            error: error,\n          });\n        }\n      );\n    };\n\nexport const createBillReset =\n  () =>\n    (dispatch: Dispatch<IAction<null, {}>>): void => {\n      dispatch({\n        type: CREATE_BILL_RESET,\n      });\n    };\n\nexport const getBill =\n  () =>\n    (dispatch: Dispatch<IAction<BillDTO[], {}>>): void => {\n      dispatch({\n        type: GET_BILL_LOADING,\n      });\n      billControllerApi\n        .getMedicalsUsingGET({\n          sortBy: GetMedicalsUsingGETSortByEnum.NAME,\n        })\n        .subscribe(\n          (payload) => {\n            if (typeof payload === \"object\" && !isEmpty(payload)) {\n              dispatch({\n                type: GET_MEDICAL_SUCCESS,\n                payload: payload,\n              });\n            } else {\n              dispatch({\n                type: GET_MEDICAL_SUCCESS,\n                payload: [],\n              });\n            }\n          },\n          (error) => {\n            dispatch({\n              type: GET_MEDICAL_FAIL,\n              error,\n            });\n          }\n        );\n    };"]},"metadata":{},"sourceType":"module"}