{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Alert from '@material-ui/lab/Alert';\nimport \"./styles.scss\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { getPrices } from \"../../../state/prices/actions\";\nimport DrawerActivity from \"./DrawerActivity\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  prices,\n  getPrices\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  }; //get prices/list\n\n  useEffect(() => {\n    getPrices();\n  }, []);\n  const [patient_mod, setPatient_mod] = React.useState();\n  const [items, setItems] = React.useState([]); //  //  //  //  //\n  //  GET TOKEN   //\n  //  //  //  //  //\n\n  const [token_auth, setToken] = useState('');\n  useEffect(() => {\n    const url = \"https://www.open-hospital.org/oh11-api/auth/login?password=admin&username=admin\";\n    const cont_t = 'application/json';\n    const acc = \"*/*\";\n\n    const fetchDataTok = async () => {\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': cont_t,\n            'Accept': acc\n          }\n        });\n        const json = await response.json();\n        setToken(json.token);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchDataTok();\n  }, []); //  //  //  //  //\n  //  GET PATIENT //\n  //  //  //  //  //\n\n  const [pat, setPatient] = useState();\n\n  const getPat = e => {\n    e.preventDefault();\n    const url = \"https://www.open-hospital.org/oh11-api/patients?page=1&size=1\";\n    const auth = \"Bearer \" + token_auth;\n    const acc = \"application/json\";\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Accept: acc,\n            Authorization: auth\n          }\n        });\n        const json = await response.json();\n        setPatient(json[0]);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  };\n\n  useEffect(() => {\n    if (pat !== undefined) {\n      setPatient_mod({\n        \"firstName\": pat.firstName,\n        \"secondName\": pat.secondName,\n        \"birthDate\": pat.birthDate,\n        \"age\": pat.age,\n        \"agetype\": pat.agetype,\n        \"sex\": pat.sex,\n        \"address\": pat.address,\n        \"city\": pat.city,\n        \"telephone\": pat.telephone,\n        \"note\": pat.note,\n        \"mother_name\": pat.mother_name,\n        \"mother\": pat.mother,\n        \"father_name\": pat.father_name,\n        \"father\": pat.father,\n        \"bloodType\": pat.bloodType,\n        \"hasInsurance\": pat.hasInsurance,\n        \"parentTogether\": pat.parentTogether,\n        \"taxCode\": pat.taxCode,\n        \"height\": 100,\n        //doesn't exist in new version OpenApi\n        \"weight\": 50,\n        //doesn't exit in new version OpenApi\n        \"blobPhoto\": pat.blobPhoto\n      });\n    }\n  }, [pat]);\n  const patient_data = (pat === null || pat === void 0 ? void 0 : pat.firstName) + \" \" + (pat === null || pat === void 0 ? void 0 : pat.secondName);\n  const [createBill, setCreateBill] = React.useState(); //GET DATE\n\n  const [date, setDate] = useState('');\n\n  const get_date = e => {\n    e.preventDefault();\n    setDate(e.currentTarget.value);\n  }; //Set patient and date\n\n\n  useEffect(() => {\n    if (date !== undefined && patient_mod !== undefined) setCreateBill({\n      id: 0,\n      list: true,\n      listId: 0,\n      patient: patient_mod,\n      date: date,\n      update: date,\n      listName: \"Basic\",\n      patientTrue: true,\n      patName: (patient_mod === null || patient_mod === void 0 ? void 0 : patient_mod.firstName) + \" \" + (patient_mod === null || patient_mod === void 0 ? void 0 : patient_mod.secondName),\n      status: \"O\",\n      amount: 1000,\n      balance: 1500,\n      user: \"admin\"\n    });\n  }, [date, patient_mod]); //  //  //  //  //\n  // CREATE BILL  //\n  //  //  //  //  //\n\n  const [fullBill, setFullBill] = React.useState();\n  useEffect(() => {\n    if (createBill !== undefined && items !== undefined) {\n      setFullBill({\n        bill: createBill,\n        billItems: items,\n        billPayments: [{\n          id: 0,\n          billId: 0,\n          date: \"2020-03-19T14:58:00.000Z\",\n          amount: 0,\n          user: \"admin\"\n        }]\n      });\n    }\n  }, [createBill, items]);\n  const [openConferm, setOpenConferm] = useState(false);\n\n  const handleClickOpenConferm = () => {\n    setOpenConferm(true);\n  };\n\n  const handleCloseConferm = () => {\n    setOpenConferm(false);\n  }; //  //  //  //  //\n  //  DELETE ITEM //\n  //  //  //  //  //\n\n\n  const delete_item = e => {\n    setItems(items.filter(item => e !== item));\n  };\n\n  const test = e => {\n    e.preventDefault();\n    console.log('hello patient');\n  }; //  //  //  //  //\n  //  SAVE BILL   //\n  //  //  //  //  //\n\n\n  const [messagge_success, setMessage] = useState(true);\n\n  const saveBill = () => {\n    fetch('https://www.open-hospital.org/oh11-api/bills', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': 'Bearer ' + token_auth\n      },\n      body: JSON.stringify(fullBill)\n    }).then(response => response.json()).then(data => {\n      if (data.bill !== undefined) setMessage(true);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }; //display alert\n\n\n  const displayAlert = () => {\n    if (messagge_success === true) {\n      return /*#__PURE__*/React.createElement(Alert, {\n        onClose: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, \"Bill created successfuly \");\n    }\n  };\n\n  useEffect(() => {\n    if (messagge_success === false) {}\n  }, [messagge_success]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, displayAlert), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Date_Pat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"bill_Date\",\n    id: \"date\",\n    label: \"SELECT DATE\",\n    type: \"date\",\n    defaultValue: \"\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => get_date(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"bill_SelectPat\",\n    onClick: e => getPat(e),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 41\n    }\n  }, \"find Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_InputPat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 41\n    }\n  }, \"Patient\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"patient_input\",\n    value: patient_data,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"buttonBillSubmit\",\n    onClick: handleClickOpenConferm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 41\n    }\n  }, \"SAVE\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"tableDrawer\",\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 53\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 53\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 53\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 53\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 45\n    }\n  }, items === null || items === void 0 ? void 0 : items.map((x, y) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 61\n      }\n    }, x.hashCode), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 61\n      }\n    }, x.itemAmount), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 61\n      }\n    }, x.itemQuantity), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => delete_item(x),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 111\n      }\n    }))));\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DrawerActivity, {\n    prices: prices,\n    items: items,\n    setItems: setItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: openConferm,\n    onClose: handleCloseConferm,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }, \"Confirm Message\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: saveBill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    size: \"large\",\n    onClick: handleCloseConferm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 30,\n      width: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  prices: state.prices.getPrices.data\n});\n\nconst mapDispatchToProps = {\n  getPrices\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useState","AppHeader","Footer","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useTranslation","connect","DialogContent","DialogTitle","Dialog","Alert","HighlightOffIcon","getPrices","DrawerActivity","TextField","NewBillActivity","userCredentials","prices","t","breadcrumbMap","patient_mod","setPatient_mod","items","setItems","token_auth","setToken","url","cont_t","acc","fetchDataTok","response","fetch","method","headers","json","token","error","console","log","pat","setPatient","getPat","e","preventDefault","auth","fetchData","Accept","Authorization","undefined","firstName","secondName","birthDate","age","agetype","sex","address","city","telephone","note","mother_name","mother","father_name","father","bloodType","hasInsurance","parentTogether","taxCode","blobPhoto","patient_data","createBill","setCreateBill","date","setDate","get_date","currentTarget","value","id","list","listId","patient","update","listName","patientTrue","patName","status","amount","balance","user","fullBill","setFullBill","bill","billItems","billPayments","billId","openConferm","setOpenConferm","handleClickOpenConferm","handleCloseConferm","delete_item","filter","item","test","messagge_success","setMessage","saveBill","body","JSON","stringify","then","data","catch","displayAlert","shrink","map","x","y","hashCode","itemAmount","itemQuantity","height","width","mapStateToProps","state","main","authentication","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Children, FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { IState } from \"../../../types\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Alert from '@material-ui/lab/Alert';\nimport \"./styles.scss\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport {\n    getPrices,\n} from \"../../../state/prices/actions\"\nimport {\n    IDispatchProps,\n    IStateProps,\n    TProps,\n    PatientMod\n} from \"./types\";\nimport DrawerActivity from \"./DrawerActivity\";\nimport { BillDTO, BillItemsDTO, FullBillDTO, PatientDTO } from \"../../../generated\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    prices,\n    getPrices,\n}) => {\n\n    const { t } = useTranslation();\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n\n    //get prices/list\n    useEffect(() => {\n        getPrices();\n    }, []);\n\n    const [patient_mod, setPatient_mod] = React.useState<PatientMod>();\n    const [items, setItems] = React.useState<BillItemsDTO[]>([]);\n\n    //  //  //  //  //\n    //  GET TOKEN   //\n    //  //  //  //  //\n    const [token_auth, setToken] = useState('');\n    useEffect(() => {\n        const url = \"https://www.open-hospital.org/oh11-api/auth/login?password=admin&username=admin\";\n        const cont_t = 'application/json'\n        const acc = \"*/*\";\n\n        const fetchDataTok = async () => {\n            try {\n                const response = await fetch(url, { method: 'POST', headers: { 'Content-Type': cont_t, 'Accept': acc } });\n                const json = await response.json();\n                setToken(json.token)\n            } catch (error) {\n                console.log(\"error\", error);\n            }\n        };\n        fetchDataTok();\n    }, []);\n\n\n    //  //  //  //  //\n    //  GET PATIENT //\n    //  //  //  //  //\n    const [pat, setPatient] = useState<PatientDTO>();\n    const getPat = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        const url = \"https://www.open-hospital.org/oh11-api/patients?page=1&size=1\";\n        const auth = \"Bearer \" + token_auth;\n        const acc = \"application/json\";\n\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url, { method: 'GET', headers: { Accept: acc, Authorization: auth } });\n                const json = await response.json();\n                setPatient(json[0])\n            } catch (error) {\n                console.log(\"error\", error);\n            }\n        };\n        fetchData();\n    };\n\n    useEffect(() => {\n        if (pat !== undefined) {\n            setPatient_mod({\n                \"firstName\": pat.firstName,\n                \"secondName\": pat.secondName,\n                \"birthDate\": pat.birthDate,\n                \"age\": pat.age,\n                \"agetype\": pat.agetype,\n                \"sex\": pat.sex,\n                \"address\": pat.address,\n                \"city\": pat.city,\n                \"telephone\": pat.telephone,\n                \"note\": pat.note,\n                \"mother_name\": pat.mother_name,\n                \"mother\": pat.mother,\n                \"father_name\": pat.father_name,\n                \"father\": pat.father,\n                \"bloodType\": pat.bloodType,\n                \"hasInsurance\": pat.hasInsurance,\n                \"parentTogether\": pat.parentTogether,\n                \"taxCode\": pat.taxCode,\n                \"height\": 100, //doesn't exist in new version OpenApi\n                \"weight\": 50,  //doesn't exit in new version OpenApi\n                \"blobPhoto\": pat.blobPhoto\n            })\n        }\n    }, [pat])\n    const patient_data = pat?.firstName + \" \" + pat?.secondName;\n\n\n    const [createBill, setCreateBill] = React.useState<BillDTO>();\n\n    //GET DATE\n    const [date, setDate] = useState('');\n    const get_date = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        e.preventDefault();\n        setDate(e.currentTarget.value);\n    }\n\n    //Set patient and date\n    useEffect(() => {\n        if (date !== undefined && patient_mod !== undefined)\n            setCreateBill({\n                id: 0,\n                list: true,\n                listId: 0,\n                patient: patient_mod,\n                date: date,\n                update: date,\n                listName: \"Basic\",\n                patientTrue: true,\n                patName: patient_mod?.firstName + \" \" + patient_mod?.secondName,\n                status: \"O\",\n                amount: 1000,\n                balance: 1500,\n                user: \"admin\",\n            });\n\n    }, [date, patient_mod])\n\n    //  //  //  //  //\n    // CREATE BILL  //\n    //  //  //  //  //\n    const [fullBill, setFullBill] = React.useState<FullBillDTO>();\n    useEffect(() => {\n        if (createBill !== undefined && items !== undefined) {\n            setFullBill({\n                bill: createBill,\n                billItems: items,\n                billPayments: [{\n                    id: 0,\n                    billId: 0,\n                    date: \"2020-03-19T14:58:00.000Z\",\n                    amount: 0,\n                    user: \"admin\"\n                }]\n            });\n        }\n    }, [createBill, items]);\n\n    const [openConferm, setOpenConferm] = useState(false);\n    const handleClickOpenConferm = () => {\n        setOpenConferm(true);\n    };\n    const handleCloseConferm = () => {\n        setOpenConferm(false);\n    };\n\n    //  //  //  //  //\n    //  DELETE ITEM //\n    //  //  //  //  //\n    const delete_item = (e: BillItemsDTO) => {\n        setItems(items.filter(item => e !== item));\n    }\n\n    const test = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        console.log('hello patient')\n    }\n\n    //  //  //  //  //\n    //  SAVE BILL   //\n    //  //  //  //  //\n    const [messagge_success, setMessage] = useState(true);\n    const saveBill = () => {\n        fetch('https://www.open-hospital.org/oh11-api/bills', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + token_auth,\n            },\n            body: JSON.stringify(fullBill),\n        })\n            .then(response => response.json())\n            .then(data => {\n                if (data.bill !== undefined)\n                    setMessage(true)\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n\n    //display alert\n    const displayAlert = () => {\n        if (messagge_success === true) {\n            return (\n                <Alert onClose={() => { }}>Bill created successfuly </Alert>\n            )\n        }\n    }\n\n    useEffect(() => {\n        if(messagge_success === false)\n        {}\n    },[messagge_success])\n\n    return (\n        <div className=\"new_Bill\">\n            <AppHeader\n                userCredentials={userCredentials}\n                breadcrumbMap={breadcrumbMap}\n            />\n            <div className=\"newBill__background\">\n                <div className=\"newBill__content\">\n                    <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                    <div>\n                        {displayAlert}\n                    </div>\n                    <div className=\"newBill__panel\">\n                        <div className=\"billPanel\">\n\n                            <form>\n                                <div className=\"newBill_Head\">\n                                    <div className=\"newBill_Date_Pat\">\n                                        <TextField\n                                            className='bill_Date'\n                                            id=\"date\"\n                                            label=\"SELECT DATE\"\n                                            type=\"date\"\n                                            defaultValue=\"\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            onChange={e => get_date(e)}\n                                        />\n                                        <Button type=\"submit\" className='bill_SelectPat' onClick={e => getPat(e)} variant=\"outlined\">find Patient</Button>\n                                    </div>\n                                    <div className=\"newBill_InputPat\">\n                                        <label>Patient</label><span></span><input className=\"patient_input\" value={patient_data} disabled ></input>\n                                        <Button className=\"buttonBillSubmit\" onClick={handleClickOpenConferm}>SAVE</Button>\n                                    </div>\n\n                                </div>\n                                <div className=\"newBill_Rows\">\n                                    <TableContainer className=\"tableDrawer\" component={Paper}>\n                                        <Table size=\"small\" aria-label=\"a dense table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Description</TableCell>\n                                                    <TableCell>Amount</TableCell>\n                                                    <TableCell>Qty</TableCell>\n                                                    <TableCell>Delete</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {items?.map((x, y) => {\n                                                    return (\n                                                        <TableRow>\n                                                            <TableCell>{x.hashCode}</TableCell>\n                                                            <TableCell>{x.itemAmount}</TableCell>\n                                                            <TableCell>{x.itemQuantity}</TableCell>\n                                                            <TableCell><Button onClick={() => delete_item(x)}><HighlightOffIcon></HighlightOffIcon></Button></TableCell>\n                                                        </TableRow>\n                                                    )\n                                                }\n                                                )}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"bill_Drawer\">\n                            <DrawerActivity prices={prices} items={items} setItems={setItems} />\n                            <Dialog open={openConferm} onClose={handleCloseConferm} aria-labelledby=\"form-dialog-title\">\n                                <DialogTitle id=\"form-dialog-title\">Confirm Message</DialogTitle>\n                                <Button color=\"primary\" size=\"large\" onClick={saveBill} >Confirm</Button>\n                                <Button color=\"secondary\" size=\"large\" onClick={handleCloseConferm} >Cancel</Button>\n                                <DialogContent>\n                                    <div style={{ height: 30, width: 250 }}>\n                                    </div>\n                                </DialogContent>\n                            </Dialog>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    prices: state.prices.getPrices.data,\n});\n\n\nconst mapDispatchToProps: IDispatchProps = {\n    getPrices,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}