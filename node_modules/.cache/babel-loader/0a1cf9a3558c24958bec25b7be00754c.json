{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nexport const RedirectAfterLogin = ({\n  children,\n  successRoute\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const status = useSelector(state => state.main.authentication.status || \"IDLE\");\n  useEffect(() => {\n    if (status === \"SUCCESS\") {\n      var _location$state;\n\n      const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || {\n        pathname: successRoute\n      };\n      history.replace(from);\n    }\n  }, [status, location.state, history, successRoute]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n};","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/activities/loginActivity/RedirectAfterLogin.tsx"],"names":["React","useEffect","useSelector","useHistory","useLocation","RedirectAfterLogin","children","successRoute","history","location","status","state","main","authentication","from","pathname","replace"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AAKA,OAAO,MAAMC,kBAAiD,GAAG,CAAC;AAChEC,EAAAA,QADgE;AAEhEC,EAAAA;AAFgE,CAAD,KAG3D;AACJ,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGR,WAAW,CACvBS,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,cAAX,CAA0BH,MAA1B,IAAoC,MADvB,CAA1B;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAM,KAAK,SAAf,EAA0B;AAAA;;AACxB,YAAMI,IAAI,GAAG,oBAAAL,QAAQ,CAACE,KAAT,oEAAgBG,IAAhB,KAAwB;AAAEC,QAAAA,QAAQ,EAAER;AAAZ,OAArC;AACAC,MAAAA,OAAO,CAACQ,OAAR,CAAgBF,IAAhB;AACD;AACF,GALQ,EAKN,CAACJ,MAAD,EAASD,QAAQ,CAACE,KAAlB,EAAyBH,OAAzB,EAAkCD,YAAlC,CALM,CAAT;AAOA,sBAAO,0CAAGD,QAAH,CAAP;AACD,CAlBM","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { TAPIResponseStatus } from \"../../../state/types\";\nimport { IState } from \"../../../types\";\nimport { IRedirectAfterLogin } from \"./types\";\n\nexport const RedirectAfterLogin: React.FC<IRedirectAfterLogin> = ({\n  children,\n  successRoute,\n}) => {\n  const history = useHistory();\n  const location = useLocation<{ from: Location }>();\n  const status = useSelector<IState, TAPIResponseStatus>(\n    (state) => state.main.authentication.status || \"IDLE\"\n  );\n\n  useEffect(() => {\n    if (status === \"SUCCESS\") {\n      const from = location.state?.from || { pathname: successRoute };\n      history.replace(from);\n    }\n  }, [status, location.state, history, successRoute]);\n\n  return <>{children}</>;\n};\n"]},"metadata":{},"sourceType":"module"}