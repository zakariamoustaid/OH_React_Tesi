{"ast":null,"code":"var _jsxFileName = \"/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/selectField/SelectField.tsx\";\nimport { FormControl, FormHelperText, InputLabel, MenuItem, Select } from \"@material-ui/core\";\nimport React, { memo, useEffect, useState } from \"react\";\nimport \"./styles.scss\";\n\nconst SelectField = ({\n  fieldName,\n  fieldValue,\n  label,\n  isValid,\n  errorText,\n  onBlur,\n  options\n}) => {\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    setValue(fieldValue);\n  }, [fieldValue]);\n\n  const handleOnBlur = e => {\n    onBlur(e, value);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: \"selectField\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: fieldName,\n    error: isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(Select, {\n    labelId: `${fieldName}-label`,\n    id: fieldName,\n    name: fieldName,\n    value: value,\n    onChange: e => setValue(e.target.value),\n    onBlur: handleOnBlur,\n    label: label,\n    error: isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    key: \"nano\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \" \"), options.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    value: option.value,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, option.label))), /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, errorText || \"\"));\n};\n\nexport default memo(SelectField);","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/selectField/SelectField.tsx"],"names":["FormControl","FormHelperText","InputLabel","MenuItem","Select","React","memo","useEffect","useState","SelectField","fieldName","fieldValue","label","isValid","errorText","onBlur","options","value","setValue","handleOnBlur","e","target","map","option","index"],"mappings":";AAAA,SACEA,WADF,EAEEC,cAFF,EAGEC,UAHF,EAIEC,QAJF,EAKEC,MALF,QAMO,mBANP;AAOA,OAAOC,KAAP,IAAmCC,IAAnC,EAAyCC,SAAzC,EAAoDC,QAApD,QAAoE,OAApE;AAEA,OAAO,eAAP;;AAEA,MAAMC,WAAsC,GAAG,CAAC;AAC9CC,EAAAA,SAD8C;AAE9CC,EAAAA,UAF8C;AAG9CC,EAAAA,KAH8C;AAI9CC,EAAAA,OAJ8C;AAK9CC,EAAAA,SAL8C;AAM9CC,EAAAA,MAN8C;AAO9CC,EAAAA;AAP8C,CAAD,KAQzC;AACJ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,UAAD,CAAR;AACD,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMQ,YAAY,GAChBC,CADmB,IAEhB;AACHL,IAAAA,MAAM,CAACK,CAAD,EAAIH,KAAJ,CAAN;AACD,GAJD;;AAMA,sBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,EAAC,aAA1C;AAAwD,IAAA,IAAI,EAAC,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAEP,SAAhB;AAA2B,IAAA,KAAK,EAAEG,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF,eAIE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAG,GAAEF,SAAU,QADxB;AAEE,IAAA,EAAE,EAAEA,SAFN;AAGE,IAAA,IAAI,EAAEA,SAHR;AAIE,IAAA,KAAK,EAAEO,KAJT;AAKE,IAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAL3B;AAME,IAAA,MAAM,EAAEE,YANV;AAOE,IAAA,KAAK,EAAEP,KAPT;AAQE,IAAA,KAAK,EAAEC,OART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,EAAhB;AAAmB,IAAA,GAAG,EAAE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,CAVF,EAaGG,OAAO,CAACM,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,MAAM,CAACN,KAAxB;AAA+B,IAAA,GAAG,EAAEO,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACX,KADV,CADD,CAbH,CAJF,eAuBE,oBAAC,cAAD;AAAgB,IAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBE,SAAS,IAAI,EAApC,CAvBF,CADF;AA2BD,CAhDD;;AAkDA,eAAeR,IAAI,CAACG,WAAD,CAAnB","sourcesContent":["import {\n  FormControl,\n  FormHelperText,\n  InputLabel,\n  MenuItem,\n  Select,\n} from \"@material-ui/core\";\nimport React, { FunctionComponent, memo, useEffect, useState } from \"react\";\nimport { IProps } from \"./types\";\nimport \"./styles.scss\";\n\nconst SelectField: FunctionComponent<IProps> = ({\n  fieldName,\n  fieldValue,\n  label,\n  isValid,\n  errorText,\n  onBlur,\n  options,\n}) => {\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    setValue(fieldValue);\n  }, [fieldValue]);\n\n  const handleOnBlur = (\n    e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    onBlur(e, value);\n  };\n\n  return (\n    <FormControl variant=\"outlined\" className=\"selectField\" size=\"small\">\n      <InputLabel id={fieldName} error={isValid}>\n        {label}\n      </InputLabel>\n      <Select\n        labelId={`${fieldName}-label`}\n        id={fieldName}\n        name={fieldName}\n        value={value}\n        onChange={(e) => setValue(e.target.value as string)}\n        onBlur={handleOnBlur}\n        label={label}\n        error={isValid}\n      >\n        <MenuItem value=\"\" key={\"nano\"}>\n          {\" \"}\n        </MenuItem>\n        {options.map((option, index) => (\n          <MenuItem value={option.value} key={index}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n      <FormHelperText error>{errorText || \"\"}</FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default memo(SelectField);\n"]},"metadata":{},"sourceType":"module"}