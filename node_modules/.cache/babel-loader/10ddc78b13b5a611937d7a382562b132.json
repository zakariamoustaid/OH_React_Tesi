{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class ExamTypeControllerApi extends BaseAPI {\n  /**\n   * deleteExamType\n   */\n  deleteExamTypeUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteExamTypeUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/examtypes/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getExamTypesUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/examtypes',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newExamTypeUsingPOST({\n    newExamType\n  }, opts) {\n    throwIfNullOrUndefined(newExamType, 'newExamType', 'newExamTypeUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/examtypes',\n      method: 'POST',\n      headers,\n      body: newExamType\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateExamTypeUsingPUT({\n    code,\n    updateExamType\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'updateExamTypeUsingPUT');\n    throwIfNullOrUndefined(updateExamType, 'updateExamType', 'updateExamTypeUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/examtypes/{code}'.replace('{code}', encodeURI(code)),\n      method: 'PUT',\n      headers,\n      body: updateExamType\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/generated/apis/ExamTypeControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","ExamTypeControllerApi","deleteExamTypeUsingDELETE","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getExamTypesUsingGET","newExamTypeUsingPOST","newExamType","body","updateExamTypeUsingPUT","updateExamType"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    ExamTypeDTO,\n    ResponseEntity,\n} from '../models';\n\nexport interface DeleteExamTypeUsingDELETERequest {\n    code: string;\n}\n\nexport interface NewExamTypeUsingPOSTRequest {\n    newExamType: ExamTypeDTO;\n}\n\nexport interface UpdateExamTypeUsingPUTRequest {\n    code: string;\n    updateExamType: ExamTypeDTO;\n}\n\n/**\n * no description\n */\nexport class ExamTypeControllerApi extends BaseAPI {\n\n    /**\n     * deleteExamType\n     */\n    deleteExamTypeUsingDELETE({ code }: DeleteExamTypeUsingDELETERequest): Observable<ResponseEntity>\n    deleteExamTypeUsingDELETE({ code }: DeleteExamTypeUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    deleteExamTypeUsingDELETE({ code }: DeleteExamTypeUsingDELETERequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteExamTypeUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/examtypes/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getExamTypes\n     */\n    getExamTypesUsingGET(): Observable<Array<ExamTypeDTO>>\n    getExamTypesUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<ExamTypeDTO>>>\n    getExamTypesUsingGET(opts?: OperationOpts): Observable<Array<ExamTypeDTO> | RawAjaxResponse<Array<ExamTypeDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<ExamTypeDTO>>({\n            url: '/examtypes',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newExamType\n     */\n    newExamTypeUsingPOST({ newExamType }: NewExamTypeUsingPOSTRequest): Observable<ResponseEntity>\n    newExamTypeUsingPOST({ newExamType }: NewExamTypeUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    newExamTypeUsingPOST({ newExamType }: NewExamTypeUsingPOSTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(newExamType, 'newExamType', 'newExamTypeUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/examtypes',\n            method: 'POST',\n            headers,\n            body: newExamType,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateExamType\n     */\n    updateExamTypeUsingPUT({ code, updateExamType }: UpdateExamTypeUsingPUTRequest): Observable<ResponseEntity>\n    updateExamTypeUsingPUT({ code, updateExamType }: UpdateExamTypeUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    updateExamTypeUsingPUT({ code, updateExamType }: UpdateExamTypeUsingPUTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(code, 'code', 'updateExamTypeUsingPUT');\n        throwIfNullOrUndefined(updateExamType, 'updateExamType', 'updateExamTypeUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/examtypes/{code}'.replace('{code}', encodeURI(code)),\n            method: 'PUT',\n            headers,\n            body: updateExamType,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}