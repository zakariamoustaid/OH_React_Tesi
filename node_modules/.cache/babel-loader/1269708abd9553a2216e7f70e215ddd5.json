{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport \"./styles.scss\";\nimport { createBill, createBillReset } from \"../../../state/bills/actions\";\nimport { searchPatient, getPatientSuccess } from \"../../../state/patients/actions\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  getMed,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute,\n  searchStatus,\n  patientSearchResults\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n  const [activityTransitionState, setActivityTransitionState] = useState(\"IDLE\");\n  let p;\n  useEffect(() => {\n    if (activityTransitionState === \"TO_PATIENT_DETAILS\") {\n      getPatientSuccess(p);\n    }\n  }, [activityTransitionState, getPatientSuccess]);\n  const initialValues = {\n    id: \"\",\n    firstName: \"\",\n    secondName: \"\",\n    birthDate: \"\",\n    address: \"\"\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit: values => {\n      searchPatient(values);\n    }\n  });\n  searchStatus = \"SUCCESS\";\n\n  const test = () => {\n    console.log(searchPatient);\n    console.log(getPatientSuccess);\n    console.log(patientSearchResults);\n    console.log(searchStatus);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, \"inserisci qualcosa\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"lastName\",\n    name: \"lastName\",\n    type: \"text\",\n    onChange: event => event.preventDefault(),\n    value: formik.values.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, \"utente\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"utente\"))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\",\n  getMed: state.medicals.medicalsOrderByName.data,\n  patientSearchResults: state.patients.searchResults.data,\n  searchStatus: state.patients.searchResults.status || \"IDLE\"\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset,\n  searchPatient,\n  getPatientSuccess\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useState","AppHeader","Footer","useTranslation","connect","useFormik","createBill","createBillReset","searchPatient","getPatientSuccess","NewBillActivity","userCredentials","isLoading","hasSucceeded","getMed","hasFailed","billHomeRoute","searchStatus","patientSearchResults","t","breadcrumbMap","activityTransitionState","setActivityTransitionState","p","initialValues","id","firstName","secondName","birthDate","address","formik","onSubmit","values","test","console","log","handleSubmit","event","preventDefault","mapStateToProps","state","main","authentication","data","bills","status","medicals","medicalsOrderByName","patients","searchResults","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAqC,aAArC;AAGA,SAASC,SAAT,QAA0B,QAA1B;AAOA,OAAO,eAAP;AAGA,SACIC,UADJ,EAEIC,eAFJ,QAGO,8BAHP;AAKA,SACIC,aADJ,EAEIC,iBAFJ,QAGO,iCAHP;;AAeA,MAAMC,eAA0C,GAAG,CAAC;AAChDC,EAAAA,eADgD;AAEhDC,EAAAA,SAFgD;AAGhDC,EAAAA,YAHgD;AAIhDC,EAAAA,MAJgD;AAKhDR,EAAAA,UALgD;AAMhDC,EAAAA,eANgD;AAOhDQ,EAAAA,SAPgD;AAQhDC,EAAAA,aARgD;AAShDC,EAAAA,YATgD;AAUhDC,EAAAA;AAVgD,CAAD,KAW7C;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AAEA,QAAMiB,aAAa,GAAG;AAClB,KAACD,CAAC,CAAC,eAAD,CAAF,GAAsB,GADJ;AAElB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB,UAFF;AAGlB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB;AAHF,GAAtB;AAMA,QAAM,CAACE,uBAAD,EAA0BC,0BAA1B,IACFtB,QAAQ,CAA2B,MAA3B,CADZ;AAGA,MAAIuB,CAAJ;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIsB,uBAAuB,KAAK,oBAAhC,EAAsD;AAClDZ,MAAAA,iBAAiB,CAACc,CAAD,CAAjB;AACH;AACJ,GAJQ,EAIN,CAACF,uBAAD,EAA0BZ,iBAA1B,CAJM,CAAT;AAMA,QAAMe,aAAsB,GAAG;AAC3BC,IAAAA,EAAE,EAAE,EADuB;AAE3BC,IAAAA,SAAS,EAAE,EAFgB;AAG3BC,IAAAA,UAAU,EAAE,EAHe;AAI3BC,IAAAA,SAAS,EAAE,EAJgB;AAK3BC,IAAAA,OAAO,EAAE;AALkB,GAA/B;AAQA,QAAMC,MAAM,GAAGzB,SAAS,CAAC;AACrBmB,IAAAA,aADqB;AAErBO,IAAAA,QAAQ,EAAGC,MAAD,IAAqB;AAC3BxB,MAAAA,aAAa,CAACwB,MAAD,CAAb;AACH;AAJoB,GAAD,CAAxB;AAMAf,EAAAA,YAAY,GAAG,SAAf;;AAEA,QAAMgB,IAAI,GAAG,MAAM;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY3B,aAAZ;AACA0B,IAAAA,OAAO,CAACC,GAAR,CAAY1B,iBAAZ;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,oBAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,YAAZ;AACH,GALD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAEN,eADrB;AAEI,IAAA,aAAa,EAAES,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,CAAC,CAAC,aAAD,CAAlC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAM,IAAA,QAAQ,EAAEW,MAAM,CAACM,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAEI,IAAA,EAAE,EAAC,UAFP;AAII,IAAA,IAAI,EAAC,UAJT;AAMI,IAAA,IAAI,EAAC,MANT;AAQI,IAAA,QAAQ,EAAEC,KAAK,IAAIA,KAAK,CAACC,cAAN,EARvB;AAUI,IAAA,KAAK,EAAER,MAAM,CAACE,MAAP,CAAcP,EAVzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAcI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,CAFJ,eAkBI;AAAQ,IAAA,OAAO,EAAEQ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,CADJ,CAFJ,CADJ,CALJ,eAgCI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADJ;AAoCH,CA3FD;;AA8FA,MAAMM,eAAe,GAAIC,KAAD,KAAiC;AACrD7B,EAAAA,eAAe,EAAE6B,KAAK,CAACC,IAAN,CAAWC,cAAX,CAA0BC,IADU;AAErD/B,EAAAA,SAAS,EAAE4B,KAAK,CAACI,KAAN,CAAYtC,UAAZ,CAAuBuC,MAAvB,KAAkC,SAFQ;AAGrDhC,EAAAA,YAAY,EAAE2B,KAAK,CAACI,KAAN,CAAYtC,UAAZ,CAAuBuC,MAAvB,KAAkC,SAHK;AAIrD9B,EAAAA,SAAS,EAAEyB,KAAK,CAACI,KAAN,CAAYtC,UAAZ,CAAuBuC,MAAvB,KAAkC,MAJQ;AAKrD/B,EAAAA,MAAM,EAAE0B,KAAK,CAACM,QAAN,CAAeC,mBAAf,CAAmCJ,IALU;AAMrDzB,EAAAA,oBAAoB,EAAEsB,KAAK,CAACQ,QAAN,CAAeC,aAAf,CAA6BN,IANE;AAOrD1B,EAAAA,YAAY,EAAEuB,KAAK,CAACQ,QAAN,CAAeC,aAAf,CAA6BJ,MAA7B,IAAuC;AAPA,CAAjC,CAAxB;;AAaA,MAAMK,kBAAkC,GAAG;AACvC5C,EAAAA,UADuC;AAEvCC,EAAAA,eAFuC;AAGvCC,EAAAA,aAHuC;AAIvCC,EAAAA;AAJuC,CAA3C;AAOA,eAAeL,OAAO,CAACmC,eAAD,EAAkBW,kBAAlB,CAAP,CAA6CxC,eAA7C,CAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { IState } from \"../../../types\";\nimport { useFormik } from \"formik\";\nimport TextField from \"../../accessories/textField/TextField\";\nimport { BillDTO, PatientDTO } from \"../../../generated\";\nimport { FullBillDTO } from \"../../../generated\";\nimport { scrollToElement } from \"../../../libraries/uiUtils/scrollToElement\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport \"./styles.scss\";\nimport SearchIcon from \"../../../assets/SearchIcon\";\n\nimport {\n    createBill,\n    createBillReset,\n} from \"../../../state/bills/actions\";\n\nimport {\n    searchPatient,\n    getPatientSuccess,\n} from \"../../../state/patients/actions\";\n\nimport {\n    IDispatchProps,\n    IStateProps,\n    TActivityTransitionState,\n    TProps,\n    TValues,\n} from \"./types\";\nimport patientDTO from \"../../../mockServer/fixtures/patientDTO\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    getMed,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n    searchStatus,\n    patientSearchResults,\n}) => {\n    const { t } = useTranslation();\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n\n    const [activityTransitionState, setActivityTransitionState] =\n        useState<TActivityTransitionState>(\"IDLE\");\n\n    let p: PatientDTO;\n\n    useEffect(() => {\n        if (activityTransitionState === \"TO_PATIENT_DETAILS\") {\n            getPatientSuccess(p);\n        }\n    }, [activityTransitionState, getPatientSuccess]);\n\n    const initialValues: TValues = {\n        id: \"\",\n        firstName: \"\",\n        secondName: \"\",\n        birthDate: \"\",\n        address: \"\",\n    };\n\n    const formik = useFormik({\n        initialValues,\n        onSubmit: (values: TValues) => {\n            searchPatient(values);\n        },\n    });\n    searchStatus = \"SUCCESS\";\n\n    const test = () => {\n        console.log(searchPatient);\n        console.log(getPatientSuccess);\n        console.log(patientSearchResults);\n        console.log(searchStatus);\n    }\n\n\n    return (\n        <div className=\"new_Bill\">\n            <AppHeader\n                userCredentials={userCredentials}\n                breadcrumbMap={breadcrumbMap}\n            />\n            <div className=\"newBill__background\">\n                <div className=\"newBill__content\">\n                    <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                    <div className=\"newBill__panel\">\n                        <div className=\"table\">\n                            <label>inserisci qualcosa</label>\n                            <form onSubmit={formik.handleSubmit}>\n                                <input\n\n                                    id=\"lastName\"\n\n                                    name=\"lastName\"\n\n                                    type=\"text\"\n\n                                    onChange={event => event.preventDefault()}\n\n                                    value={formik.values.id}\n\n                                />\n                                <button type=\"submit\">utente</button>\n                            </form>\n                            <button onClick={test}>utente</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    isLoading: state.bills.createBill.status === \"LOADING\",\n    hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n    hasFailed: state.bills.createBill.status === \"FAIL\",\n    getMed: state.medicals.medicalsOrderByName.data,\n    patientSearchResults: state.patients.searchResults.data,\n    searchStatus: state.patients.searchResults.status || \"IDLE\",\n});\n\n\n\n\nconst mapDispatchToProps: IDispatchProps = {\n    createBill,\n    createBillReset,\n    searchPatient,\n    getPatientSuccess\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}