{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class WardControllerApi extends BaseAPI {\n  /**\n   * checkWardCode\n   */\n  checkWardCodeUsingGET({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'checkWardCodeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wards/check/{code}'.replace('{code}', encodeURI(code)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  checkWardMaternityCodeUsingGET({\n    createIfNotExist\n  }, opts) {\n    throwIfNullOrUndefined(createIfNotExist, 'createIfNotExist', 'checkWardMaternityCodeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wards/check-or-create/{createIfNotExist}'.replace('{createIfNotExist}', encodeURI(createIfNotExist)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  deleteWardUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteWardUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wards/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getCurrentOccupationUsingGET({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'getCurrentOccupationUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wards/occupation/{code}'.replace('{code}', encodeURI(code)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getWardsNoMaternityUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wardsNoMaternity',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getWardsUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wards',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newWardUsingPOST({\n    newWard\n  }, opts) {\n    throwIfNullOrUndefined(newWard, 'newWard', 'newWardUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wards',\n      method: 'POST',\n      headers,\n      body: newWard\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateWardUsingPUT({\n    updateWard\n  }, opts) {\n    throwIfNullOrUndefined(updateWard, 'updateWard', 'updateWardUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/wards',\n      method: 'PUT',\n      headers,\n      body: updateWard\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/generated/apis/WardControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","WardControllerApi","checkWardCodeUsingGET","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","checkWardMaternityCodeUsingGET","createIfNotExist","deleteWardUsingDELETE","getCurrentOccupationUsingGET","getWardsNoMaternityUsingGET","getWardsUsingGET","newWardUsingPOST","newWard","body","updateWardUsingPUT","updateWard"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    ResponseEntity,\n    WardDTO,\n} from '../models';\n\nexport interface CheckWardCodeUsingGETRequest {\n    code: string;\n}\n\nexport interface CheckWardMaternityCodeUsingGETRequest {\n    createIfNotExist: boolean;\n}\n\nexport interface DeleteWardUsingDELETERequest {\n    code: string;\n}\n\nexport interface GetCurrentOccupationUsingGETRequest {\n    code: string;\n}\n\nexport interface NewWardUsingPOSTRequest {\n    newWard: WardDTO;\n}\n\nexport interface UpdateWardUsingPUTRequest {\n    updateWard: WardDTO;\n}\n\n/**\n * no description\n */\nexport class WardControllerApi extends BaseAPI {\n\n    /**\n     * checkWardCode\n     */\n    checkWardCodeUsingGET({ code }: CheckWardCodeUsingGETRequest): Observable<boolean>\n    checkWardCodeUsingGET({ code }: CheckWardCodeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    checkWardCodeUsingGET({ code }: CheckWardCodeUsingGETRequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(code, 'code', 'checkWardCodeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<boolean>({\n            url: '/wards/check/{code}'.replace('{code}', encodeURI(code)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * checkWardMaternityCode\n     */\n    checkWardMaternityCodeUsingGET({ createIfNotExist }: CheckWardMaternityCodeUsingGETRequest): Observable<boolean>\n    checkWardMaternityCodeUsingGET({ createIfNotExist }: CheckWardMaternityCodeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    checkWardMaternityCodeUsingGET({ createIfNotExist }: CheckWardMaternityCodeUsingGETRequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(createIfNotExist, 'createIfNotExist', 'checkWardMaternityCodeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<boolean>({\n            url: '/wards/check-or-create/{createIfNotExist}'.replace('{createIfNotExist}', encodeURI(createIfNotExist)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * deleteWard\n     */\n    deleteWardUsingDELETE({ code }: DeleteWardUsingDELETERequest): Observable<ResponseEntity>\n    deleteWardUsingDELETE({ code }: DeleteWardUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    deleteWardUsingDELETE({ code }: DeleteWardUsingDELETERequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteWardUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/wards/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getCurrentOccupation\n     */\n    getCurrentOccupationUsingGET({ code }: GetCurrentOccupationUsingGETRequest): Observable<number>\n    getCurrentOccupationUsingGET({ code }: GetCurrentOccupationUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<number>>\n    getCurrentOccupationUsingGET({ code }: GetCurrentOccupationUsingGETRequest, opts?: OperationOpts): Observable<number | RawAjaxResponse<number>> {\n        throwIfNullOrUndefined(code, 'code', 'getCurrentOccupationUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<number>({\n            url: '/wards/occupation/{code}'.replace('{code}', encodeURI(code)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getWardsNoMaternity\n     */\n    getWardsNoMaternityUsingGET(): Observable<Array<WardDTO>>\n    getWardsNoMaternityUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<WardDTO>>>\n    getWardsNoMaternityUsingGET(opts?: OperationOpts): Observable<Array<WardDTO> | RawAjaxResponse<Array<WardDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<WardDTO>>({\n            url: '/wardsNoMaternity',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getWards\n     */\n    getWardsUsingGET(): Observable<Array<WardDTO>>\n    getWardsUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<WardDTO>>>\n    getWardsUsingGET(opts?: OperationOpts): Observable<Array<WardDTO> | RawAjaxResponse<Array<WardDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<WardDTO>>({\n            url: '/wards',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newWard\n     */\n    newWardUsingPOST({ newWard }: NewWardUsingPOSTRequest): Observable<ResponseEntity>\n    newWardUsingPOST({ newWard }: NewWardUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    newWardUsingPOST({ newWard }: NewWardUsingPOSTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(newWard, 'newWard', 'newWardUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/wards',\n            method: 'POST',\n            headers,\n            body: newWard,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateWard\n     */\n    updateWardUsingPUT({ updateWard }: UpdateWardUsingPUTRequest): Observable<ResponseEntity>\n    updateWardUsingPUT({ updateWard }: UpdateWardUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    updateWardUsingPUT({ updateWard }: UpdateWardUsingPUTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(updateWard, 'updateWard', 'updateWardUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/wards',\n            method: 'PUT',\n            headers,\n            body: updateWard,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}