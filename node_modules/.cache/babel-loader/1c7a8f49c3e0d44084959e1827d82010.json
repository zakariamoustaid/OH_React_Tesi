{"ast":null,"code":"/** @license React v16.3.1\n * react.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function () {\n    'use strict';\n\n    var _assign = require('object-assign');\n\n    var emptyObject = require('fbjs/lib/emptyObject');\n\n    var invariant = require('fbjs/lib/invariant');\n\n    var warning = require('fbjs/lib/warning');\n\n    var emptyFunction = require('fbjs/lib/emptyFunction');\n\n    var checkPropTypes = require('prop-types/checkPropTypes'); // TODO: this is special because it gets imported during build.\n\n\n    var ReactVersion = '16.3.1'; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n    // nor polyfill, then a plain number is used for performance.\n\n    var hasSymbol = typeof Symbol === 'function' && Symbol['for'];\n    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;\n    var REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;\n    var REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;\n    var REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;\n    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;\n    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol['for']('react.strict_mode') : 0xeacc;\n    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol['for']('react.provider') : 0xeacd;\n    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol['for']('react.context') : 0xeace;\n    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol['for']('react.async_mode') : 0xeacf;\n    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol['for']('react.forward_ref') : 0xead0;\n    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n    var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n    function getIteratorFn(maybeIterable) {\n      if (maybeIterable === null || typeof maybeIterable === 'undefined') {\n        return null;\n      }\n\n      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n      if (typeof maybeIterator === 'function') {\n        return maybeIterator;\n      }\n\n      return null;\n    }\n    /**\n     * WARNING: DO NOT manually require this module.\n     * This is a replacement for `invariant(...)` used by the error code system\n     * and will _only_ be required by the corresponding babel pass.\n     * It always throws.\n     */\n\n    /**\n     * Forked from fbjs/warning:\n     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n     *\n     * Only change is we use console.warn instead of console.error,\n     * and do nothing when 'console' is not supported.\n     * This really simplifies the code.\n     * ---\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n\n    var lowPriorityWarning = function () {};\n\n    {\n      var printWarning = function (format) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var argIndex = 0;\n        var message = 'Warning: ' + format.replace(/%s/g, function () {\n          return args[argIndex++];\n        });\n\n        if (typeof console !== 'undefined') {\n          console.warn(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n\n      lowPriorityWarning = function (condition, format) {\n        if (format === undefined) {\n          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n        }\n\n        if (!condition) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n\n          printWarning.apply(undefined, [format].concat(args));\n        }\n      };\n    }\n    var lowPriorityWarning$1 = lowPriorityWarning;\n    var didWarnStateUpdateForUnmountedComponent = {};\n\n    function warnNoop(publicInstance, callerName) {\n      {\n        var _constructor = publicInstance.constructor;\n        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n        var warningKey = componentName + '.' + callerName;\n\n        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n          return;\n        }\n\n        warning(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n        didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n      }\n    }\n    /**\n     * This is the abstract API for an update queue.\n     */\n\n\n    var ReactNoopUpdateQueue = {\n      /**\n       * Checks whether or not this composite component is mounted.\n       * @param {ReactClass} publicInstance The instance we want to test.\n       * @return {boolean} True if mounted, false otherwise.\n       * @protected\n       * @final\n       */\n      isMounted: function (publicInstance) {\n        return false;\n      },\n\n      /**\n       * Forces an update. This should only be invoked when it is known with\n       * certainty that we are **not** in a DOM transaction.\n       *\n       * You may want to call this when you know that some deeper aspect of the\n       * component's state has changed but `setState` was not called.\n       *\n       * This will not invoke `shouldComponentUpdate`, but it will invoke\n       * `componentWillUpdate` and `componentDidUpdate`.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueForceUpdate: function (publicInstance, callback, callerName) {\n        warnNoop(publicInstance, 'forceUpdate');\n      },\n\n      /**\n       * Replaces all of the state. Always use this or `setState` to mutate state.\n       * You should treat `this.state` as immutable.\n       *\n       * There is no guarantee that `this.state` will be immediately updated, so\n       * accessing `this.state` after calling this method may return the old value.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} completeState Next state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} callerName name of the calling function in the public API.\n       * @internal\n       */\n      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n        warnNoop(publicInstance, 'replaceState');\n      },\n\n      /**\n       * Sets a subset of the state. This only exists because _pendingState is\n       * internal. This provides a merging strategy that is not available to deep\n       * properties which is confusing. TODO: Expose pendingState or don't use it\n       * during the merge.\n       *\n       * @param {ReactClass} publicInstance The instance that should rerender.\n       * @param {object} partialState Next partial state to be merged with state.\n       * @param {?function} callback Called after component is updated.\n       * @param {?string} Name of the calling function in the public API.\n       * @internal\n       */\n      enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n        warnNoop(publicInstance, 'setState');\n      }\n    };\n    /**\n     * Base class helpers for the updating state of a component.\n     */\n\n    function Component(props, context, updater) {\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n      // renderer.\n\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n\n    Component.prototype.isReactComponent = {};\n    /**\n     * Sets a subset of the state. Always use this to mutate\n     * state. You should treat `this.state` as immutable.\n     *\n     * There is no guarantee that `this.state` will be immediately updated, so\n     * accessing `this.state` after calling this method may return the old value.\n     *\n     * There is no guarantee that calls to `setState` will run synchronously,\n     * as they may eventually be batched together.  You can provide an optional\n     * callback that will be executed when the call to setState is actually\n     * completed.\n     *\n     * When a function is provided to setState, it will be called at some point in\n     * the future (not synchronously). It will be called with the up to date\n     * component arguments (state, props, context). These values can be different\n     * from this.* because your function may be called after receiveProps but before\n     * shouldComponentUpdate, and this new state, props, and context will not yet be\n     * assigned to this.\n     *\n     * @param {object|function} partialState Next partial state or function to\n     *        produce next partial state to be merged with current state.\n     * @param {?function} callback Called after state is updated.\n     * @final\n     * @protected\n     */\n\n    Component.prototype.setState = function (partialState, callback) {\n      !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n      this.updater.enqueueSetState(this, partialState, callback, 'setState');\n    };\n    /**\n     * Forces an update. This should only be invoked when it is known with\n     * certainty that we are **not** in a DOM transaction.\n     *\n     * You may want to call this when you know that some deeper aspect of the\n     * component's state has changed but `setState` was not called.\n     *\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\n     * `componentWillUpdate` and `componentDidUpdate`.\n     *\n     * @param {?function} callback Called after update is complete.\n     * @final\n     * @protected\n     */\n\n\n    Component.prototype.forceUpdate = function (callback) {\n      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n    };\n    /**\n     * Deprecated APIs. These APIs used to exist on classic React classes but since\n     * we would like to deprecate them, we're not going to move them over to this\n     * modern base class. Instead, we define a getter that warns if it's accessed.\n     */\n\n\n    {\n      var deprecatedAPIs = {\n        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n      };\n\n      var defineDeprecationWarning = function (methodName, info) {\n        Object.defineProperty(Component.prototype, methodName, {\n          get: function () {\n            lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n            return undefined;\n          }\n        });\n      };\n\n      for (var fnName in deprecatedAPIs) {\n        if (deprecatedAPIs.hasOwnProperty(fnName)) {\n          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n        }\n      }\n    }\n\n    function ComponentDummy() {}\n\n    ComponentDummy.prototype = Component.prototype;\n    /**\n     * Convenience component with default shallow equality check for sCU.\n     */\n\n    function PureComponent(props, context, updater) {\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n    }\n\n    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\n    _assign(pureComponentPrototype, Component.prototype);\n\n    pureComponentPrototype.isPureReactComponent = true; // an immutable object with a single mutable value\n\n    function createRef() {\n      var refObject = {\n        current: null\n      };\n      {\n        Object.seal(refObject);\n      }\n      return refObject;\n    }\n    /**\n     * Keeps track of the current owner.\n     *\n     * The current owner is the component who should own any components that are\n     * currently being constructed.\n     */\n\n\n    var ReactCurrentOwner = {\n      /**\n       * @internal\n       * @type {ReactComponent}\n       */\n      current: null\n    };\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var RESERVED_PROPS = {\n      key: true,\n      ref: true,\n      __self: true,\n      __source: true\n    };\n    var specialPropKeyWarningShown = void 0;\n    var specialPropRefWarningShown = void 0;\n\n    function hasValidRef(config) {\n      {\n        if (hasOwnProperty.call(config, 'ref')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.ref !== undefined;\n    }\n\n    function hasValidKey(config) {\n      {\n        if (hasOwnProperty.call(config, 'key')) {\n          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n          if (getter && getter.isReactWarning) {\n            return false;\n          }\n        }\n      }\n      return config.key !== undefined;\n    }\n\n    function defineKeyPropWarningGetter(props, displayName) {\n      var warnAboutAccessingKey = function () {\n        if (!specialPropKeyWarningShown) {\n          specialPropKeyWarningShown = true;\n          warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingKey.isReactWarning = true;\n      Object.defineProperty(props, 'key', {\n        get: warnAboutAccessingKey,\n        configurable: true\n      });\n    }\n\n    function defineRefPropWarningGetter(props, displayName) {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n          warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n    /**\n     * Factory method to create a new React element. This no longer adheres to\n     * the class pattern, so do not use new to call it. Also, no instanceof check\n     * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n     * if something is a React Element.\n     *\n     * @param {*} type\n     * @param {*} key\n     * @param {string|object} ref\n     * @param {*} self A *temporary* helper to detect places where `this` is\n     * different from the `owner` when React.createElement is called, so that we\n     * can warn. We want to get rid of owner and replace string `ref`s with arrow\n     * functions, and as long as `this` and owner are the same, there will be no\n     * change in behavior.\n     * @param {*} source An annotation object (added by a transpiler or otherwise)\n     * indicating filename, line number, and/or other information.\n     * @param {*} owner\n     * @param {*} props\n     * @internal\n     */\n\n\n    var ReactElement = function (type, key, ref, self, source, owner, props) {\n      var element = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: REACT_ELEMENT_TYPE,\n        // Built-in properties that belong on the element\n        type: type,\n        key: key,\n        ref: ref,\n        props: props,\n        // Record the component responsible for creating this element.\n        _owner: owner\n      };\n      {\n        // The validation flag is currently mutative. We put it on\n        // an external backing store so that we can freeze the whole object.\n        // This can be replaced with a WeakMap once they are implemented in\n        // commonly used development environments.\n        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n        // the validation flag non-enumerable (where possible, which should\n        // include every environment we run tests in), so the test framework\n        // ignores it.\n\n        Object.defineProperty(element._store, 'validated', {\n          configurable: false,\n          enumerable: false,\n          writable: true,\n          value: false\n        }); // self and source are DEV only properties.\n\n        Object.defineProperty(element, '_self', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: self\n        }); // Two elements created in two different places should be considered\n        // equal for testing purposes and therefore we hide it from enumeration.\n\n        Object.defineProperty(element, '_source', {\n          configurable: false,\n          enumerable: false,\n          writable: false,\n          value: source\n        });\n\n        if (Object.freeze) {\n          Object.freeze(element.props);\n          Object.freeze(element);\n        }\n      }\n      return element;\n    };\n    /**\n     * Create and return a new ReactElement of the given type.\n     * See https://reactjs.org/docs/react-api.html#createelement\n     */\n\n\n    function createElement(type, config, children) {\n      var propName = void 0; // Reserved names are extracted\n\n      var props = {};\n      var key = null;\n      var ref = null;\n      var self = null;\n      var source = null;\n\n      if (config != null) {\n        if (hasValidRef(config)) {\n          ref = config.ref;\n        }\n\n        if (hasValidKey(config)) {\n          key = '' + config.key;\n        }\n\n        self = config.__self === undefined ? null : config.__self;\n        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            props[propName] = config[propName];\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n\n      var childrenLength = arguments.length - 2;\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n\n        {\n          if (Object.freeze) {\n            Object.freeze(childArray);\n          }\n        }\n        props.children = childArray;\n      } // Resolve default props\n\n\n      if (type && type.defaultProps) {\n        var defaultProps = type.defaultProps;\n\n        for (propName in defaultProps) {\n          if (props[propName] === undefined) {\n            props[propName] = defaultProps[propName];\n          }\n        }\n      }\n\n      {\n        if (key || ref) {\n          if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n            var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n            if (key) {\n              defineKeyPropWarningGetter(props, displayName);\n            }\n\n            if (ref) {\n              defineRefPropWarningGetter(props, displayName);\n            }\n          }\n        }\n      }\n      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n    }\n    /**\n     * Return a function that produces ReactElements of a given type.\n     * See https://reactjs.org/docs/react-api.html#createfactory\n     */\n\n\n    function cloneAndReplaceKey(oldElement, newKey) {\n      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n      return newElement;\n    }\n    /**\n     * Clone and return a new ReactElement using element as the starting point.\n     * See https://reactjs.org/docs/react-api.html#cloneelement\n     */\n\n\n    function cloneElement(element, config, children) {\n      var propName = void 0; // Original props are copied\n\n      var props = _assign({}, element.props); // Reserved names are extracted\n\n\n      var key = element.key;\n      var ref = element.ref; // Self is preserved since the owner is preserved.\n\n      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n      // transpiler, and the original source is probably a better indicator of the\n      // true owner.\n\n      var source = element._source; // Owner will be preserved, unless ref is overridden\n\n      var owner = element._owner;\n\n      if (config != null) {\n        if (hasValidRef(config)) {\n          // Silently steal the ref from the parent.\n          ref = config.ref;\n          owner = ReactCurrentOwner.current;\n        }\n\n        if (hasValidKey(config)) {\n          key = '' + config.key;\n        } // Remaining properties override existing props\n\n\n        var defaultProps = void 0;\n\n        if (element.type && element.type.defaultProps) {\n          defaultProps = element.type.defaultProps;\n        }\n\n        for (propName in config) {\n          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n            if (config[propName] === undefined && defaultProps !== undefined) {\n              // Resolve default props\n              props[propName] = defaultProps[propName];\n            } else {\n              props[propName] = config[propName];\n            }\n          }\n        }\n      } // Children can be more than one argument, and those are transferred onto\n      // the newly allocated props object.\n\n\n      var childrenLength = arguments.length - 2;\n\n      if (childrenLength === 1) {\n        props.children = children;\n      } else if (childrenLength > 1) {\n        var childArray = Array(childrenLength);\n\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n\n        props.children = childArray;\n      }\n\n      return ReactElement(element.type, key, ref, self, source, owner, props);\n    }\n    /**\n     * Verifies the object is a ReactElement.\n     * See https://reactjs.org/docs/react-api.html#isvalidelement\n     * @param {?object} object\n     * @return {boolean} True if `object` is a valid component.\n     * @final\n     */\n\n\n    function isValidElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n\n    var ReactDebugCurrentFrame = {};\n    {\n      // Component that is being worked on\n      ReactDebugCurrentFrame.getCurrentStack = null;\n\n      ReactDebugCurrentFrame.getStackAddendum = function () {\n        var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n        if (impl) {\n          return impl();\n        }\n\n        return null;\n      };\n    }\n    var SEPARATOR = '.';\n    var SUBSEPARATOR = ':';\n    /**\n     * Escape and wrap key so it is safe to use as a reactid\n     *\n     * @param {string} key to be escaped.\n     * @return {string} the escaped key.\n     */\n\n    function escape(key) {\n      var escapeRegex = /[=:]/g;\n      var escaperLookup = {\n        '=': '=0',\n        ':': '=2'\n      };\n      var escapedString = ('' + key).replace(escapeRegex, function (match) {\n        return escaperLookup[match];\n      });\n      return '$' + escapedString;\n    }\n    /**\n     * TODO: Test that a single child and an array with one item have the same key\n     * pattern.\n     */\n\n\n    var didWarnAboutMaps = false;\n    var userProvidedKeyEscapeRegex = /\\/+/g;\n\n    function escapeUserProvidedKey(text) {\n      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n    }\n\n    var POOL_SIZE = 10;\n    var traverseContextPool = [];\n\n    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n      if (traverseContextPool.length) {\n        var traverseContext = traverseContextPool.pop();\n        traverseContext.result = mapResult;\n        traverseContext.keyPrefix = keyPrefix;\n        traverseContext.func = mapFunction;\n        traverseContext.context = mapContext;\n        traverseContext.count = 0;\n        return traverseContext;\n      } else {\n        return {\n          result: mapResult,\n          keyPrefix: keyPrefix,\n          func: mapFunction,\n          context: mapContext,\n          count: 0\n        };\n      }\n    }\n\n    function releaseTraverseContext(traverseContext) {\n      traverseContext.result = null;\n      traverseContext.keyPrefix = null;\n      traverseContext.func = null;\n      traverseContext.context = null;\n      traverseContext.count = 0;\n\n      if (traverseContextPool.length < POOL_SIZE) {\n        traverseContextPool.push(traverseContext);\n      }\n    }\n    /**\n     * @param {?*} children Children tree container.\n     * @param {!string} nameSoFar Name of the key path so far.\n     * @param {!function} callback Callback to invoke with each child found.\n     * @param {?*} traverseContext Used to pass information throughout the traversal\n     * process.\n     * @return {!number} The number of children in this subtree.\n     */\n\n\n    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n      var type = typeof children;\n\n      if (type === 'undefined' || type === 'boolean') {\n        // All of the above are perceived as null.\n        children = null;\n      }\n\n      var invokeCallback = false;\n\n      if (children === null) {\n        invokeCallback = true;\n      } else {\n        switch (type) {\n          case 'string':\n          case 'number':\n            invokeCallback = true;\n            break;\n\n          case 'object':\n            switch (children.$$typeof) {\n              case REACT_ELEMENT_TYPE:\n              case REACT_PORTAL_TYPE:\n                invokeCallback = true;\n            }\n\n        }\n      }\n\n      if (invokeCallback) {\n        callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array\n        // so that it's consistent if the number of children grows.\n        nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n        return 1;\n      }\n\n      var child = void 0;\n      var nextName = void 0;\n      var subtreeCount = 0; // Count of children found in the current subtree.\n\n      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n      if (Array.isArray(children)) {\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nextName = nextNamePrefix + getComponentKey(child, i);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        var iteratorFn = getIteratorFn(children);\n\n        if (typeof iteratorFn === 'function') {\n          {\n            // Warn about using Maps as children\n            if (iteratorFn === children.entries) {\n              warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());\n              didWarnAboutMaps = true;\n            }\n          }\n          var iterator = iteratorFn.call(children);\n          var step = void 0;\n          var ii = 0;\n\n          while (!(step = iterator.next()).done) {\n            child = step.value;\n            nextName = nextNamePrefix + getComponentKey(child, ii++);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        } else if (type === 'object') {\n          var addendum = '';\n          {\n            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n          }\n          var childrenString = '' + children;\n          invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n        }\n      }\n\n      return subtreeCount;\n    }\n    /**\n     * Traverses children that are typically specified as `props.children`, but\n     * might also be specified through attributes:\n     *\n     * - `traverseAllChildren(this.props.children, ...)`\n     * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n     *\n     * The `traverseContext` is an optional argument that is passed through the\n     * entire traversal. It can be used to store accumulations or anything else that\n     * the callback might find relevant.\n     *\n     * @param {?*} children Children tree object.\n     * @param {!function} callback To invoke upon traversing each child.\n     * @param {?*} traverseContext Context for traversal.\n     * @return {!number} The number of children in this subtree.\n     */\n\n\n    function traverseAllChildren(children, callback, traverseContext) {\n      if (children == null) {\n        return 0;\n      }\n\n      return traverseAllChildrenImpl(children, '', callback, traverseContext);\n    }\n    /**\n     * Generate a key string that identifies a component within a set.\n     *\n     * @param {*} component A component that could contain a manual key.\n     * @param {number} index Index that is used if a manual key is not provided.\n     * @return {string}\n     */\n\n\n    function getComponentKey(component, index) {\n      // Do some typechecking here since we call this blindly. We want to ensure\n      // that we don't block potential future ES APIs.\n      if (typeof component === 'object' && component !== null && component.key != null) {\n        // Explicit key\n        return escape(component.key);\n      } // Implicit key determined by the index in the set\n\n\n      return index.toString(36);\n    }\n\n    function forEachSingleChild(bookKeeping, child, name) {\n      var func = bookKeeping.func,\n          context = bookKeeping.context;\n      func.call(context, child, bookKeeping.count++);\n    }\n    /**\n     * Iterates through children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.foreach\n     *\n     * The provided forEachFunc(child, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} forEachFunc\n     * @param {*} forEachContext Context for forEachContext.\n     */\n\n\n    function forEachChildren(children, forEachFunc, forEachContext) {\n      if (children == null) {\n        return children;\n      }\n\n      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n      traverseAllChildren(children, forEachSingleChild, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n\n    function mapSingleChildIntoContext(bookKeeping, child, childKey) {\n      var result = bookKeeping.result,\n          keyPrefix = bookKeeping.keyPrefix,\n          func = bookKeeping.func,\n          context = bookKeeping.context;\n      var mappedChild = func.call(context, child, bookKeeping.count++);\n\n      if (Array.isArray(mappedChild)) {\n        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n      } else if (mappedChild != null) {\n        if (isValidElement(mappedChild)) {\n          mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n          // traverseAllChildren used to do for objects as children\n          keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n        }\n\n        result.push(mappedChild);\n      }\n    }\n\n    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n      var escapedPrefix = '';\n\n      if (prefix != null) {\n        escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n      }\n\n      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n      releaseTraverseContext(traverseContext);\n    }\n    /**\n     * Maps children that are typically specified as `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.map\n     *\n     * The provided mapFunction(child, key, index) will be called for each\n     * leaf child.\n     *\n     * @param {?*} children Children tree container.\n     * @param {function(*, int)} func The map function.\n     * @param {*} context Context for mapFunction.\n     * @return {object} Object containing the ordered map of results.\n     */\n\n\n    function mapChildren(children, func, context) {\n      if (children == null) {\n        return children;\n      }\n\n      var result = [];\n      mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n      return result;\n    }\n    /**\n     * Count the number of children that are typically specified as\n     * `props.children`.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.count\n     *\n     * @param {?*} children Children tree container.\n     * @return {number} The number of children.\n     */\n\n\n    function countChildren(children, context) {\n      return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\n    }\n    /**\n     * Flatten a children object (typically specified as `props.children`) and\n     * return an array with appropriately re-keyed children.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.toarray\n     */\n\n\n    function toArray(children) {\n      var result = [];\n      mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n      return result;\n    }\n    /**\n     * Returns the first child in a collection of children and verifies that there\n     * is only one child in the collection.\n     *\n     * See https://reactjs.org/docs/react-api.html#react.children.only\n     *\n     * The current implementation of this function assumes that a single child gets\n     * passed without a wrapper, but the purpose of this helper function is to\n     * abstract away the particular structure of children.\n     *\n     * @param {?object} children Child collection structure.\n     * @return {ReactElement} The first and only `ReactElement` contained in the\n     * structure.\n     */\n\n\n    function onlyChild(children) {\n      !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n      return children;\n    }\n\n    function createContext(defaultValue, calculateChangedBits) {\n      if (calculateChangedBits === undefined) {\n        calculateChangedBits = null;\n      } else {\n        {\n          warning(calculateChangedBits === null || typeof calculateChangedBits === 'function', 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n        }\n      }\n\n      var context = {\n        $$typeof: REACT_CONTEXT_TYPE,\n        _calculateChangedBits: calculateChangedBits,\n        _defaultValue: defaultValue,\n        _currentValue: defaultValue,\n        _changedBits: 0,\n        // These are circular\n        Provider: null,\n        Consumer: null\n      };\n      context.Provider = {\n        $$typeof: REACT_PROVIDER_TYPE,\n        _context: context\n      };\n      context.Consumer = context;\n      {\n        context._currentRenderer = null;\n      }\n      return context;\n    }\n\n    function forwardRef(render) {\n      {\n        warning(typeof render === 'function', 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n      }\n      return {\n        $$typeof: REACT_FORWARD_REF_TYPE,\n        render: render\n      };\n    }\n\n    var describeComponentFrame = function (name, source, ownerName) {\n      return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n    };\n\n    function isValidElementType(type) {\n      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n      type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n    }\n\n    function getComponentName(fiber) {\n      var type = fiber.type;\n\n      if (typeof type === 'function') {\n        return type.displayName || type.name;\n      }\n\n      if (typeof type === 'string') {\n        return type;\n      }\n\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return 'ReactFragment';\n\n        case REACT_PORTAL_TYPE:\n          return 'ReactPortal';\n\n        case REACT_CALL_TYPE:\n          return 'ReactCall';\n\n        case REACT_RETURN_TYPE:\n          return 'ReactReturn';\n      }\n\n      return null;\n    }\n    /**\n     * ReactElementValidator provides a wrapper around a element factory\n     * which validates the props passed to the element. This is intended to be\n     * used only in DEV and could be replaced by a static type checker for languages\n     * that support it.\n     */\n\n\n    var currentlyValidatingElement = void 0;\n    var propTypesMisspellWarningShown = void 0;\n\n    var getDisplayName = function () {};\n\n    var getStackAddendum = function () {};\n\n    {\n      currentlyValidatingElement = null;\n      propTypesMisspellWarningShown = false;\n\n      getDisplayName = function (element) {\n        if (element == null) {\n          return '#empty';\n        } else if (typeof element === 'string' || typeof element === 'number') {\n          return '#text';\n        } else if (typeof element.type === 'string') {\n          return element.type;\n        } else if (element.type === REACT_FRAGMENT_TYPE) {\n          return 'React.Fragment';\n        } else {\n          return element.type.displayName || element.type.name || 'Unknown';\n        }\n      };\n\n      getStackAddendum = function () {\n        var stack = '';\n\n        if (currentlyValidatingElement) {\n          var name = getDisplayName(currentlyValidatingElement);\n          var owner = currentlyValidatingElement._owner;\n          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));\n        }\n\n        stack += ReactDebugCurrentFrame.getStackAddendum() || '';\n        return stack;\n      };\n    }\n\n    function getDeclarationErrorAddendum() {\n      if (ReactCurrentOwner.current) {\n        var name = getComponentName(ReactCurrentOwner.current);\n\n        if (name) {\n          return '\\n\\nCheck the render method of `' + name + '`.';\n        }\n      }\n\n      return '';\n    }\n\n    function getSourceInfoErrorAddendum(elementProps) {\n      if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n        var source = elementProps.__source;\n        var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n        var lineNumber = source.lineNumber;\n        return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n      }\n\n      return '';\n    }\n    /**\n     * Warn if there's no key explicitly set on dynamic arrays of children or\n     * object keys are not valid. This allows us to keep track of children between\n     * updates.\n     */\n\n\n    var ownerHasKeyUseWarning = {};\n\n    function getCurrentComponentErrorInfo(parentType) {\n      var info = getDeclarationErrorAddendum();\n\n      if (!info) {\n        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n        if (parentName) {\n          info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n        }\n      }\n\n      return info;\n    }\n    /**\n     * Warn if the element doesn't have an explicit key assigned to it.\n     * This element is in an array. The array could grow and shrink or be\n     * reordered. All children that haven't already been validated are required to\n     * have a \"key\" property assigned to it. Error statuses are cached so a warning\n     * will only be shown once.\n     *\n     * @internal\n     * @param {ReactElement} element Element that requires a key.\n     * @param {*} parentType element's parent's type.\n     */\n\n\n    function validateExplicitKey(element, parentType) {\n      if (!element._store || element._store.validated || element.key != null) {\n        return;\n      }\n\n      element._store.validated = true;\n      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n        return;\n      }\n\n      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n      // property, it may be the creator of the child that's responsible for\n      // assigning it a key.\n\n      var childOwner = '';\n\n      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n        // Give the component that originally created this child.\n        childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';\n      }\n\n      currentlyValidatingElement = element;\n      {\n        warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());\n      }\n      currentlyValidatingElement = null;\n    }\n    /**\n     * Ensure that every element either is passed in a static location, in an\n     * array with an explicit keys property defined, or in an object literal\n     * with valid key property.\n     *\n     * @internal\n     * @param {ReactNode} node Statically passed child of any type.\n     * @param {*} parentType node's parent's type.\n     */\n\n\n    function validateChildKeys(node, parentType) {\n      if (typeof node !== 'object') {\n        return;\n      }\n\n      if (Array.isArray(node)) {\n        for (var i = 0; i < node.length; i++) {\n          var child = node[i];\n\n          if (isValidElement(child)) {\n            validateExplicitKey(child, parentType);\n          }\n        }\n      } else if (isValidElement(node)) {\n        // This element was passed in a valid location.\n        if (node._store) {\n          node._store.validated = true;\n        }\n      } else if (node) {\n        var iteratorFn = getIteratorFn(node);\n\n        if (typeof iteratorFn === 'function') {\n          // Entry iterators used to provide implicit keys,\n          // but now we print a separate warning for them later.\n          if (iteratorFn !== node.entries) {\n            var iterator = iteratorFn.call(node);\n            var step = void 0;\n\n            while (!(step = iterator.next()).done) {\n              if (isValidElement(step.value)) {\n                validateExplicitKey(step.value, parentType);\n              }\n            }\n          }\n        }\n      }\n    }\n    /**\n     * Given an element, validate that its props follow the propTypes definition,\n     * provided by the type.\n     *\n     * @param {ReactElement} element\n     */\n\n\n    function validatePropTypes(element) {\n      var componentClass = element.type;\n\n      if (typeof componentClass !== 'function') {\n        return;\n      }\n\n      var name = componentClass.displayName || componentClass.name;\n      var propTypes = componentClass.propTypes;\n\n      if (propTypes) {\n        currentlyValidatingElement = element;\n        checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);\n        currentlyValidatingElement = null;\n      } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n        propTypesMisspellWarningShown = true;\n        warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n      }\n\n      if (typeof componentClass.getDefaultProps === 'function') {\n        warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n      }\n    }\n    /**\n     * Given a fragment, validate that it can only be provided with fragment props\n     * @param {ReactElement} fragment\n     */\n\n\n    function validateFragmentProps(fragment) {\n      currentlyValidatingElement = fragment;\n      var keys = Object.keys(fragment.props);\n\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n\n        if (key !== 'children' && key !== 'key') {\n          warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());\n          break;\n        }\n      }\n\n      if (fragment.ref !== null) {\n        warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());\n      }\n\n      currentlyValidatingElement = null;\n    }\n\n    function createElementWithValidation(type, props, children) {\n      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n\n      if (!validType) {\n        var info = '';\n\n        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n          info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n        }\n\n        var sourceInfo = getSourceInfoErrorAddendum(props);\n\n        if (sourceInfo) {\n          info += sourceInfo;\n        } else {\n          info += getDeclarationErrorAddendum();\n        }\n\n        info += getStackAddendum() || '';\n        var typeString = void 0;\n\n        if (type === null) {\n          typeString = 'null';\n        } else if (Array.isArray(type)) {\n          typeString = 'array';\n        } else {\n          typeString = typeof type;\n        }\n\n        warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n      }\n\n      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n      // TODO: Drop this when these are no longer allowed as the type argument.\n\n      if (element == null) {\n        return element;\n      } // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing errors.\n      // We don't want exception behavior to differ between dev and prod.\n      // (Rendering will throw with a helpful message and as soon as the type is\n      // fixed, the key warnings will appear.)\n\n\n      if (validType) {\n        for (var i = 2; i < arguments.length; i++) {\n          validateChildKeys(arguments[i], type);\n        }\n      }\n\n      if (type === REACT_FRAGMENT_TYPE) {\n        validateFragmentProps(element);\n      } else {\n        validatePropTypes(element);\n      }\n\n      return element;\n    }\n\n    function createFactoryWithValidation(type) {\n      var validatedFactory = createElementWithValidation.bind(null, type);\n      validatedFactory.type = type; // Legacy hook: remove it\n\n      {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n      return validatedFactory;\n    }\n\n    function cloneElementWithValidation(element, props, children) {\n      var newElement = cloneElement.apply(this, arguments);\n\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], newElement.type);\n      }\n\n      validatePropTypes(newElement);\n      return newElement;\n    }\n\n    var React = {\n      Children: {\n        map: mapChildren,\n        forEach: forEachChildren,\n        count: countChildren,\n        toArray: toArray,\n        only: onlyChild\n      },\n      createRef: createRef,\n      Component: Component,\n      PureComponent: PureComponent,\n      createContext: createContext,\n      forwardRef: forwardRef,\n      Fragment: REACT_FRAGMENT_TYPE,\n      StrictMode: REACT_STRICT_MODE_TYPE,\n      unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n      createElement: createElementWithValidation,\n      cloneElement: cloneElementWithValidation,\n      createFactory: createFactoryWithValidation,\n      isValidElement: isValidElement,\n      version: ReactVersion,\n      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n        ReactCurrentOwner: ReactCurrentOwner,\n        // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n        assign: _assign\n      }\n    };\n    {\n      _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {\n        // These should not be included in production.\n        ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n        // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n        // TODO: remove in React 17.0.\n        ReactComponentTreeHook: {}\n      });\n    }\n    var React$2 = Object.freeze({\n      default: React\n    });\n    var React$3 = React$2 && React || React$2; // TODO: decide on the top-level export form.\n    // This is hacky but makes it work with both Rollup and Jest.\n\n    var react = React$3['default'] ? React$3['default'] : React$3;\n    module.exports = react;\n  })();\n}","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/node_modules/react-row-select-table/dist/node_modules/react/cjs/react.development.js"],"names":["process","env","NODE_ENV","_assign","require","emptyObject","invariant","warning","emptyFunction","checkPropTypes","ReactVersion","hasSymbol","Symbol","REACT_ELEMENT_TYPE","REACT_CALL_TYPE","REACT_RETURN_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_FORWARD_REF_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","lowPriorityWarning","printWarning","format","_len","arguments","length","args","Array","_key","argIndex","message","replace","console","warn","Error","x","condition","undefined","_len2","_key2","apply","concat","lowPriorityWarning$1","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","name","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","Component","props","context","updater","refs","prototype","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","Object","defineProperty","get","fnName","hasOwnProperty","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","createRef","refObject","current","seal","ReactCurrentOwner","RESERVED_PROPS","key","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","hasValidRef","config","call","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","defineKeyPropWarningGetter","warnAboutAccessingKey","configurable","defineRefPropWarningGetter","warnAboutAccessingRef","ReactElement","type","self","source","owner","element","$$typeof","_owner","_store","enumerable","writable","value","freeze","createElement","children","propName","childrenLength","childArray","i","defaultProps","cloneAndReplaceKey","oldElement","newKey","newElement","_self","_source","cloneElement","isValidElement","object","ReactDebugCurrentFrame","getCurrentStack","getStackAddendum","impl","SEPARATOR","SUBSEPARATOR","escape","escapeRegex","escaperLookup","escapedString","match","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","POOL_SIZE","traverseContextPool","getPooledTraverseContext","mapResult","keyPrefix","mapFunction","mapContext","traverseContext","pop","result","func","count","releaseTraverseContext","push","traverseAllChildrenImpl","nameSoFar","invokeCallback","getComponentKey","child","nextName","subtreeCount","nextNamePrefix","isArray","iteratorFn","entries","step","ii","next","done","addendum","childrenString","keys","join","traverseAllChildren","component","index","toString","forEachSingleChild","bookKeeping","forEachChildren","forEachFunc","forEachContext","mapSingleChildIntoContext","childKey","mappedChild","mapIntoWithKeyPrefixInternal","thatReturnsArgument","array","prefix","escapedPrefix","mapChildren","countChildren","thatReturnsNull","toArray","onlyChild","createContext","defaultValue","calculateChangedBits","_calculateChangedBits","_defaultValue","_currentValue","_changedBits","Provider","Consumer","_context","_currentRenderer","forwardRef","render","describeComponentFrame","ownerName","fileName","lineNumber","isValidElementType","getComponentName","fiber","currentlyValidatingElement","propTypesMisspellWarningShown","getDisplayName","stack","getDeclarationErrorAddendum","getSourceInfoErrorAddendum","elementProps","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","parentName","validateExplicitKey","validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","validatePropTypes","componentClass","propTypes","PropTypes","getDefaultProps","isReactClassApproved","validateFragmentProps","fragment","createElementWithValidation","validType","sourceInfo","typeString","createFactoryWithValidation","validatedFactory","bind","cloneElementWithValidation","React","Children","map","forEach","only","Fragment","StrictMode","unstable_AsyncMode","createFactory","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","assign","ReactComponentTreeHook","React$2","default","React$3","react","module","exports"],"mappings":"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","sourcesContent":["/** @license React v16.3.1\n * react.development.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar _assign = require('object-assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar checkPropTypes = require('prop-types/checkPropTypes');\n\n// TODO: this is special because it gets imported during build.\n\nvar ReactVersion = '16.3.1';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol['for'];\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol['for']('react.element') : 0xeac7;\nvar REACT_CALL_TYPE = hasSymbol ? Symbol['for']('react.call') : 0xeac8;\nvar REACT_RETURN_TYPE = hasSymbol ? Symbol['for']('react.return') : 0xeac9;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol['for']('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol['for']('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol['for']('react.strict_mode') : 0xeacc;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol['for']('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol['for']('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol['for']('react.async_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol['for']('react.forward_ref') : 0xead0;\n\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable === 'undefined') {\n    return null;\n  }\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n\n/**\n * WARNING: DO NOT manually require this module.\n * This is a replacement for `invariant(...)` used by the error code system\n * and will _only_ be required by the corresponding babel pass.\n * It always throws.\n */\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + '.' + callerName;\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n    warning(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n        return undefined;\n      }\n    });\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\nComponentDummy.prototype = Component.prototype;\n\n/**\n * Convenience component with default shallow equality check for sCU.\n */\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent;\n// Avoid an extra prototype jump for these methods.\n_assign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n  {\n    Object.seal(refObject);\n  }\n  return refObject;\n}\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\nvar specialPropKeyWarningShown = void 0;\nvar specialPropRefWarningShown = void 0;\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    if (!specialPropKeyWarningShown) {\n      specialPropKeyWarningShown = true;\n      warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    if (!specialPropRefWarningShown) {\n      specialPropRefWarningShown = true;\n      warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\n    }\n  };\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, no instanceof check\n * will work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n    // self and source are DEV only properties.\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    });\n    // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\nfunction createElement(type, config, children) {\n  var propName = void 0;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n  {\n    if (key || ref) {\n      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n        if (key) {\n          defineKeyPropWarningGetter(props, displayName);\n        }\n        if (ref) {\n          defineRefPropWarningGetter(props, displayName);\n        }\n      }\n    }\n  }\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\n\n/**\n * Return a function that produces ReactElements of a given type.\n * See https://reactjs.org/docs/react-api.html#createfactory\n */\n\n\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n}\n\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\nfunction cloneElement(element, config, children) {\n  var propName = void 0;\n\n  // Original props are copied\n  var props = _assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (hasValidKey(config)) {\n      key = '' + config.key;\n    }\n\n    // Remaining properties override existing props\n    var defaultProps = void 0;\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar ReactDebugCurrentFrame = {};\n\n{\n  // Component that is being worked on\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n    if (impl) {\n      return impl();\n    }\n    return null;\n  };\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n\n  return '$' + escapedString;\n}\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar didWarnAboutMaps = false;\n\nvar userProvidedKeyEscapeRegex = /\\/+/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\n}\n\nvar POOL_SIZE = 10;\nvar traverseContextPool = [];\nfunction getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\n  if (traverseContextPool.length) {\n    var traverseContext = traverseContextPool.pop();\n    traverseContext.result = mapResult;\n    traverseContext.keyPrefix = keyPrefix;\n    traverseContext.func = mapFunction;\n    traverseContext.context = mapContext;\n    traverseContext.count = 0;\n    return traverseContext;\n  } else {\n    return {\n      result: mapResult,\n      keyPrefix: keyPrefix,\n      func: mapFunction,\n      context: mapContext,\n      count: 0\n    };\n  }\n}\n\nfunction releaseTraverseContext(traverseContext) {\n  traverseContext.result = null;\n  traverseContext.keyPrefix = null;\n  traverseContext.func = null;\n  traverseContext.context = null;\n  traverseContext.count = 0;\n  if (traverseContextPool.length < POOL_SIZE) {\n    traverseContextPool.push(traverseContext);\n  }\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n    }\n  }\n\n  if (invokeCallback) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child = void 0;\n  var nextName = void 0;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (typeof iteratorFn === 'function') {\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === children.entries) {\n          warning(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', ReactDebugCurrentFrame.getStackAddendum());\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(children);\n      var step = void 0;\n      var ii = 0;\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getComponentKey(child, ii++);\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\n      }\n      var childrenString = '' + children;\n      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof component === 'object' && component !== null && component.key != null) {\n    // Explicit key\n    return escape(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func,\n      context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.foreach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result,\n      keyPrefix = bookKeeping.keyPrefix,\n      func = bookKeeping.func,\n      context = bookKeeping.context;\n\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (isValidElement(mappedChild)) {\n      mappedChild = cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  releaseTraverseContext(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.map\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.count\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.toarray\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#react.children.only\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\n  return children;\n}\n\nfunction createContext(defaultValue, calculateChangedBits) {\n  if (calculateChangedBits === undefined) {\n    calculateChangedBits = null;\n  } else {\n    {\n      warning(calculateChangedBits === null || typeof calculateChangedBits === 'function', 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits);\n    }\n  }\n\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    _calculateChangedBits: calculateChangedBits,\n    _defaultValue: defaultValue,\n    _currentValue: defaultValue,\n    _changedBits: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null\n  };\n\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  context.Consumer = context;\n\n  {\n    context._currentRenderer = null;\n  }\n\n  return context;\n}\n\nfunction forwardRef(render) {\n  {\n    warning(typeof render === 'function', 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n  }\n\n  return {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n}\n\nvar describeComponentFrame = function (name, source, ownerName) {\n  return '\\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');\n};\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\nfunction getComponentName(fiber) {\n  var type = fiber.type;\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'ReactFragment';\n    case REACT_PORTAL_TYPE:\n      return 'ReactPortal';\n    case REACT_CALL_TYPE:\n      return 'ReactCall';\n    case REACT_RETURN_TYPE:\n      return 'ReactReturn';\n  }\n  return null;\n}\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\nvar currentlyValidatingElement = void 0;\nvar propTypesMisspellWarningShown = void 0;\n\nvar getDisplayName = function () {};\nvar getStackAddendum = function () {};\n\n{\n  currentlyValidatingElement = null;\n\n  propTypesMisspellWarningShown = false;\n\n  getDisplayName = function (element) {\n    if (element == null) {\n      return '#empty';\n    } else if (typeof element === 'string' || typeof element === 'number') {\n      return '#text';\n    } else if (typeof element.type === 'string') {\n      return element.type;\n    } else if (element.type === REACT_FRAGMENT_TYPE) {\n      return 'React.Fragment';\n    } else {\n      return element.type.displayName || element.type.name || 'Unknown';\n    }\n  };\n\n  getStackAddendum = function () {\n    var stack = '';\n    if (currentlyValidatingElement) {\n      var name = getDisplayName(currentlyValidatingElement);\n      var owner = currentlyValidatingElement._owner;\n      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));\n    }\n    stack += ReactDebugCurrentFrame.getStackAddendum() || '';\n    return stack;\n  };\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentName(ReactCurrentOwner.current);\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(elementProps) {\n  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\n    var source = elementProps.__source;\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\n    }\n  }\n  return info;\n}\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  var childOwner = '';\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';\n  }\n\n  currentlyValidatingElement = element;\n  {\n    warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum());\n  }\n  currentlyValidatingElement = null;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step = void 0;\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  var propTypes = componentClass.propTypes;\n  if (propTypes) {\n    currentlyValidatingElement = element;\n    checkPropTypes(propTypes, element.props, 'prop', name, getStackAddendum);\n    currentlyValidatingElement = null;\n  } else if (componentClass.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n    propTypesMisspellWarningShown = true;\n    warning(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n  }\n}\n\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\nfunction validateFragmentProps(fragment) {\n  currentlyValidatingElement = fragment;\n\n  var keys = Object.keys(fragment.props);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (key !== 'children' && key !== 'key') {\n      warning(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.%s', key, getStackAddendum());\n      break;\n    }\n  }\n\n  if (fragment.ref !== null) {\n    warning(false, 'Invalid attribute `ref` supplied to `React.Fragment`.%s', getStackAddendum());\n  }\n\n  currentlyValidatingElement = null;\n}\n\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type);\n\n  // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n  if (!validType) {\n    var info = '';\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendum(props);\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    info += getStackAddendum() || '';\n\n    var typeString = void 0;\n    if (type === null) {\n      typeString = 'null';\n    } else if (Array.isArray(type)) {\n      typeString = 'array';\n    } else {\n      typeString = typeof type;\n    }\n\n    warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n  }\n\n  var element = createElement.apply(this, arguments);\n\n  // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n  if (element == null) {\n    return element;\n  }\n\n  // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\n\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n  // Legacy hook: remove it\n  {\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\n\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nvar React = {\n  Children: {\n    map: mapChildren,\n    forEach: forEachChildren,\n    count: countChildren,\n    toArray: toArray,\n    only: onlyChild\n  },\n\n  createRef: createRef,\n  Component: Component,\n  PureComponent: PureComponent,\n\n  createContext: createContext,\n  forwardRef: forwardRef,\n\n  Fragment: REACT_FRAGMENT_TYPE,\n  StrictMode: REACT_STRICT_MODE_TYPE,\n  unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\n\n  createElement: createElementWithValidation,\n  cloneElement: cloneElementWithValidation,\n  createFactory: createFactoryWithValidation,\n  isValidElement: isValidElement,\n\n  version: ReactVersion,\n\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentOwner: ReactCurrentOwner,\n    // Used by renderers to avoid bundling object-assign twice in UMD bundles:\n    assign: _assign\n  }\n};\n\n{\n  _assign(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {\n    // These should not be included in production.\n    ReactDebugCurrentFrame: ReactDebugCurrentFrame,\n    // Shim for React DOM 16.0.0 which still destructured (but not used) this.\n    // TODO: remove in React 17.0.\n    ReactComponentTreeHook: {}\n  });\n}\n\n\n\nvar React$2 = Object.freeze({\n\tdefault: React\n});\n\nvar React$3 = ( React$2 && React ) || React$2;\n\n// TODO: decide on the top-level export form.\n// This is hacky but makes it work with both Rollup and Jest.\nvar react = React$3['default'] ? React$3['default'] : React$3;\n\nmodule.exports = react;\n  })();\n}\n"]},"metadata":{},"sourceType":"script"}