{"ast":null,"code":"/*import XHRAdapter from \"@pollyjs/adapter-xhr\";\nimport { Polly } from \"@pollyjs/core\";\nimport { BASE_PATH } from \"../generated/runtime\";\nimport { authRoutes } from \"./routes/auth\";\nimport { examinationsRoutes } from \"./routes/examinations\";\nimport { patientRoutes } from \"./routes/patients\";\nimport { userRoutes } from \"./routes/users\";\nimport { visitRoutes } from \"./routes/visits\";\nimport { opdRoutes } from \"./routes/opd\";\nimport { diseasesRoutes } from \"./routes/diseases\";\nimport { therapyRoutes } from \"./routes/therapies\";\nimport { medicalRoutes } from \"./routes/medicals\";\n\nexport function makeServer() {\n  Polly.register(XHRAdapter);\n  const polly = new Polly(\"api-mocking\", {\n    adapters: [\"xhr\"],\n    mode: \"passthrough\",\n    logging: true,\n  });\n  const { server } = polly;\n\n  server.host(BASE_PATH, () => {\n    authRoutes(server);\n    patientRoutes(server);\n    userRoutes(server);\n    visitRoutes(server);\n    examinationsRoutes(server);\n    therapyRoutes(server);\n    opdRoutes(server);\n    diseasesRoutes(server);\n    medicalRoutes(server);\n  });\n  return server;\n}*/","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/mockServer/server.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/*import XHRAdapter from \"@pollyjs/adapter-xhr\";\nimport { Polly } from \"@pollyjs/core\";\nimport { BASE_PATH } from \"../generated/runtime\";\nimport { authRoutes } from \"./routes/auth\";\nimport { examinationsRoutes } from \"./routes/examinations\";\nimport { patientRoutes } from \"./routes/patients\";\nimport { userRoutes } from \"./routes/users\";\nimport { visitRoutes } from \"./routes/visits\";\nimport { opdRoutes } from \"./routes/opd\";\nimport { diseasesRoutes } from \"./routes/diseases\";\nimport { therapyRoutes } from \"./routes/therapies\";\nimport { medicalRoutes } from \"./routes/medicals\";\n\nexport function makeServer() {\n  Polly.register(XHRAdapter);\n  const polly = new Polly(\"api-mocking\", {\n    adapters: [\"xhr\"],\n    mode: \"passthrough\",\n    logging: true,\n  });\n  const { server } = polly;\n\n  server.host(BASE_PATH, () => {\n    authRoutes(server);\n    patientRoutes(server);\n    userRoutes(server);\n    visitRoutes(server);\n    examinationsRoutes(server);\n    therapyRoutes(server);\n    opdRoutes(server);\n    diseasesRoutes(server);\n    medicalRoutes(server);\n  });\n  return server;\n}*/\n"]},"metadata":{},"sourceType":"module"}