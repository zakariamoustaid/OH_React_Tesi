{"ast":null,"code":"import { useEffect, useState } from \"react\";\nexport const useIsSearchById = formik => {\n  const [isSearchById, setIsSearchById] = useState(false);\n  const {\n    setFieldTouched,\n    setFieldValue,\n    values\n  } = formik;\n  useEffect(() => {\n    if (values.id === \"\") {\n      setIsSearchById(false);\n    } else {\n      const keys = [\"id\", \"firstName\", \"secondName\", \"birthDate\", \"address\"];\n      setIsSearchById(true);\n      keys.forEach(key => {\n        if (key !== \"id\") {\n          setFieldValue(key, \"\");\n          setFieldTouched(key, false);\n        }\n      });\n    }\n  }, [values.id, setFieldTouched, setFieldValue]);\n  return isSearchById;\n};","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/searchPatientActivity/useIsSearchById.ts"],"names":["useEffect","useState","useIsSearchById","formik","isSearchById","setIsSearchById","setFieldTouched","setFieldValue","values","id","keys","forEach","key"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAA0B;AACvD,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAEK,IAAAA,eAAF;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA;AAAlC,MAA6CL,MAAnD;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,MAAM,CAACC,EAAP,KAAc,EAAlB,EAAsB;AACpBJ,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAFD,MAEO;AACL,YAAMK,IAAuB,GAAG,CAC9B,IAD8B,EAE9B,WAF8B,EAG9B,YAH8B,EAI9B,WAJ8B,EAK9B,SAL8B,CAAhC;AAOAL,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAK,MAAAA,IAAI,CAACC,OAAL,CAAcC,GAAD,IAAS;AACpB,YAAIA,GAAG,KAAK,IAAZ,EAAkB;AAChBL,UAAAA,aAAa,CAACK,GAAD,EAAM,EAAN,CAAb;AACAN,UAAAA,eAAe,CAACM,GAAD,EAAM,KAAN,CAAf;AACD;AACF,OALD;AAMD;AACF,GAnBQ,EAmBN,CAACJ,MAAM,CAACC,EAAR,EAAYH,eAAZ,EAA6BC,aAA7B,CAnBM,CAAT;AAoBA,SAAOH,YAAP;AACD,CAxBM","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { TFieldName } from \"./types\";\n\nexport const useIsSearchById = (formik: any): boolean => {\n  const [isSearchById, setIsSearchById] = useState(false);\n  const { setFieldTouched, setFieldValue, values } = formik;\n  useEffect(() => {\n    if (values.id === \"\") {\n      setIsSearchById(false);\n    } else {\n      const keys: Array<TFieldName> = [\n        \"id\",\n        \"firstName\",\n        \"secondName\",\n        \"birthDate\",\n        \"address\",\n      ];\n      setIsSearchById(true);\n      keys.forEach((key) => {\n        if (key !== \"id\") {\n          setFieldValue(key, \"\");\n          setFieldTouched(key, false);\n        }\n      });\n    }\n  }, [values.id, setFieldTouched, setFieldValue]);\n  return isSearchById;\n};\n"]},"metadata":{},"sourceType":"module"}