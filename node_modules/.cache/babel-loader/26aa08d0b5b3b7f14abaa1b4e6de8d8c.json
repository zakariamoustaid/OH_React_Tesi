{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from \"../runtime\";\n\n/**\n * no description\n */\nexport class TherapyControllerApi extends BaseAPI {\n  /**\n   * deleteAllTherapies\n   */\n  deleteAllTherapiesUsingDELETE({\n    codePatient\n  }, opts) {\n    throwIfNullOrUndefined(codePatient, \"codePatient\", \"deleteAllTherapiesUsingDELETE\");\n    const headers = { ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\")\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: \"/therapies/{code_patient}\".replace(\"{code_patient}\", encodeURI(codePatient)),\n      method: \"DELETE\",\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n  /**\n   * getMedicalsOutOfStock\n   */\n\n\n  getMedicalsOutOfStockUsingPOST({\n    therapyDTOs\n  }, opts) {\n    throwIfNullOrUndefined(therapyDTOs, \"therapyDTOs\", \"getMedicalsOutOfStockUsingPOST\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\")\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: \"/therapies/meds-out-of-stock\",\n      method: \"POST\",\n      headers,\n      body: therapyDTOs\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n  /**\n   * getTherapies\n   */\n\n\n  getTherapiesUsingPOST({\n    thRowDTOs\n  }, opts) {\n    throwIfNullOrUndefined(thRowDTOs, \"thRowDTOs\", \"getTherapiesUsingPOST\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\")\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: \"/therapies/from-rows\",\n      method: \"POST\",\n      headers,\n      body: thRowDTOs\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n  /**\n   * getTherapyRows\n   */\n\n\n  getTherapyRowsUsingGET({\n    codePatient\n  }, opts) {\n    throwIfNullOrUndefined(codePatient, \"codePatient\", \"getTherapyRowsUsingGET\");\n    const headers = { ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\")\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: \"/therapies/{code_patient}\".replace(\"{code_patient}\", encodeURI(codePatient)),\n      method: \"GET\",\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n  /**\n   * getTherapy\n   */\n\n\n  getTherapyUsingPOST({\n    thRowDTO\n  }, opts) {\n    throwIfNullOrUndefined(thRowDTO, \"thRowDTO\", \"getTherapyUsingPOST\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\")\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: \"/therapies/from-row\",\n      method: \"POST\",\n      headers,\n      body: thRowDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n  /**\n   * newTherapy\n   */\n\n\n  newTherapyUsingPOST({\n    thRowDTO\n  }, opts) {\n    throwIfNullOrUndefined(thRowDTO, \"thRowDTO\", \"newTherapyUsingPOST\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\")\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: \"/therapies\",\n      method: \"POST\",\n      headers,\n      body: thRowDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n  /**\n   * replaceTherapies\n   */\n\n\n  replaceTherapiesUsingPOST({\n    thRowDTOs\n  }, opts) {\n    throwIfNullOrUndefined(thRowDTOs, \"thRowDTOs\", \"replaceTherapiesUsingPOST\");\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\")\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: \"/therapies/replace\",\n      method: \"POST\",\n      headers,\n      body: thRowDTOs\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/generated/apis/TherapyControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","TherapyControllerApi","deleteAllTherapiesUsingDELETE","codePatient","opts","headers","configuration","apiKey","Authorization","request","url","replace","method","responseOpts","getMedicalsOutOfStockUsingPOST","therapyDTOs","body","getTherapiesUsingPOST","thRowDTOs","getTherapyRowsUsingGET","getTherapyUsingPOST","thRowDTO","newTherapyUsingPOST","replaceTherapiesUsingPOST"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from \"rxjs\";\nimport {\n  BaseAPI,\n  HttpHeaders,\n  throwIfNullOrUndefined,\n  encodeURI,\n  OperationOpts,\n  RawAjaxResponse,\n} from \"../runtime\";\nimport { MedicalDTO, TherapyDTO, TherapyRowDTO } from \"../models\";\n\nexport interface DeleteAllTherapiesUsingDELETERequest {\n  codePatient: number;\n}\n\nexport interface GetMedicalsOutOfStockUsingPOSTRequest {\n  therapyDTOs: Array<TherapyDTO>;\n}\n\nexport interface GetTherapiesUsingPOSTRequest {\n  thRowDTOs: Array<TherapyRowDTO>;\n}\n\nexport interface GetTherapyRowsUsingGETRequest {\n  codePatient: number;\n}\n\nexport interface GetTherapyUsingPOSTRequest {\n  thRowDTO: TherapyRowDTO;\n}\n\nexport interface NewTherapyUsingPOSTRequest {\n  thRowDTO: TherapyRowDTO;\n}\n\nexport interface ReplaceTherapiesUsingPOSTRequest {\n  thRowDTOs: Array<TherapyRowDTO>;\n}\n\n/**\n * no description\n */\nexport class TherapyControllerApi extends BaseAPI {\n  /**\n   * deleteAllTherapies\n   */\n  deleteAllTherapiesUsingDELETE({\n    codePatient,\n  }: DeleteAllTherapiesUsingDELETERequest): Observable<boolean>;\n  deleteAllTherapiesUsingDELETE(\n    { codePatient }: DeleteAllTherapiesUsingDELETERequest,\n    opts?: OperationOpts\n  ): Observable<RawAjaxResponse<boolean>>;\n  deleteAllTherapiesUsingDELETE(\n    { codePatient }: DeleteAllTherapiesUsingDELETERequest,\n    opts?: OperationOpts\n  ): Observable<boolean | RawAjaxResponse<boolean>> {\n    throwIfNullOrUndefined(\n      codePatient,\n      \"codePatient\",\n      \"deleteAllTherapiesUsingDELETE\"\n    );\n\n    const headers: HttpHeaders = {\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\"),\n      }), // JWT authentication\n    };\n\n    return this.request<boolean>(\n      {\n        url: \"/therapies/{code_patient}\".replace(\n          \"{code_patient}\",\n          encodeURI(codePatient)\n        ),\n        method: \"DELETE\",\n        headers,\n      },\n      opts?.responseOpts\n    );\n  }\n\n  /**\n   * getMedicalsOutOfStock\n   */\n  getMedicalsOutOfStockUsingPOST({\n    therapyDTOs,\n  }: GetMedicalsOutOfStockUsingPOSTRequest): Observable<Array<MedicalDTO>>;\n  getMedicalsOutOfStockUsingPOST(\n    { therapyDTOs }: GetMedicalsOutOfStockUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<RawAjaxResponse<Array<MedicalDTO>>>;\n  getMedicalsOutOfStockUsingPOST(\n    { therapyDTOs }: GetMedicalsOutOfStockUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<Array<MedicalDTO> | RawAjaxResponse<Array<MedicalDTO>>> {\n    throwIfNullOrUndefined(\n      therapyDTOs,\n      \"therapyDTOs\",\n      \"getMedicalsOutOfStockUsingPOST\"\n    );\n\n    const headers: HttpHeaders = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\"),\n      }), // JWT authentication\n    };\n\n    return this.request<Array<MedicalDTO>>(\n      {\n        url: \"/therapies/meds-out-of-stock\",\n        method: \"POST\",\n        headers,\n        body: therapyDTOs,\n      },\n      opts?.responseOpts\n    );\n  }\n\n  /**\n   * getTherapies\n   */\n  getTherapiesUsingPOST({\n    thRowDTOs,\n  }: GetTherapiesUsingPOSTRequest): Observable<Array<TherapyDTO>>;\n  getTherapiesUsingPOST(\n    { thRowDTOs }: GetTherapiesUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<RawAjaxResponse<Array<TherapyDTO>>>;\n  getTherapiesUsingPOST(\n    { thRowDTOs }: GetTherapiesUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<Array<TherapyDTO> | RawAjaxResponse<Array<TherapyDTO>>> {\n    throwIfNullOrUndefined(thRowDTOs, \"thRowDTOs\", \"getTherapiesUsingPOST\");\n\n    const headers: HttpHeaders = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\"),\n      }), // JWT authentication\n    };\n\n    return this.request<Array<TherapyDTO>>(\n      {\n        url: \"/therapies/from-rows\",\n        method: \"POST\",\n        headers,\n        body: thRowDTOs,\n      },\n      opts?.responseOpts\n    );\n  }\n\n  /**\n   * getTherapyRows\n   */\n  getTherapyRowsUsingGET({\n    codePatient,\n  }: GetTherapyRowsUsingGETRequest): Observable<Array<TherapyRowDTO>>;\n  getTherapyRowsUsingGET(\n    { codePatient }: GetTherapyRowsUsingGETRequest,\n    opts?: OperationOpts\n  ): Observable<RawAjaxResponse<Array<TherapyRowDTO>>>;\n  getTherapyRowsUsingGET(\n    { codePatient }: GetTherapyRowsUsingGETRequest,\n    opts?: OperationOpts\n  ): Observable<Array<TherapyRowDTO> | RawAjaxResponse<Array<TherapyRowDTO>>> {\n    throwIfNullOrUndefined(\n      codePatient,\n      \"codePatient\",\n      \"getTherapyRowsUsingGET\"\n    );\n\n    const headers: HttpHeaders = {\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\"),\n      }), // JWT authentication\n    };\n\n    return this.request<Array<TherapyRowDTO>>(\n      {\n        url: \"/therapies/{code_patient}\".replace(\n          \"{code_patient}\",\n          encodeURI(codePatient)\n        ),\n        method: \"GET\",\n        headers,\n      },\n      opts?.responseOpts\n    );\n  }\n\n  /**\n   * getTherapy\n   */\n  getTherapyUsingPOST({\n    thRowDTO,\n  }: GetTherapyUsingPOSTRequest): Observable<TherapyDTO>;\n  getTherapyUsingPOST(\n    { thRowDTO }: GetTherapyUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<RawAjaxResponse<TherapyDTO>>;\n  getTherapyUsingPOST(\n    { thRowDTO }: GetTherapyUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<TherapyDTO | RawAjaxResponse<TherapyDTO>> {\n    throwIfNullOrUndefined(thRowDTO, \"thRowDTO\", \"getTherapyUsingPOST\");\n\n    const headers: HttpHeaders = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\"),\n      }), // JWT authentication\n    };\n\n    return this.request<TherapyDTO>(\n      {\n        url: \"/therapies/from-row\",\n        method: \"POST\",\n        headers,\n        body: thRowDTO,\n      },\n      opts?.responseOpts\n    );\n  }\n\n  /**\n   * newTherapy\n   */\n  newTherapyUsingPOST({\n    thRowDTO,\n  }: NewTherapyUsingPOSTRequest): Observable<TherapyRowDTO>;\n  newTherapyUsingPOST(\n    { thRowDTO }: NewTherapyUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<RawAjaxResponse<TherapyRowDTO>>;\n  newTherapyUsingPOST(\n    { thRowDTO }: NewTherapyUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<TherapyRowDTO | RawAjaxResponse<TherapyRowDTO>> {\n    throwIfNullOrUndefined(thRowDTO, \"thRowDTO\", \"newTherapyUsingPOST\");\n\n    const headers: HttpHeaders = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\"),\n      }), // JWT authentication\n    };\n\n    return this.request<TherapyRowDTO>(\n      {\n        url: \"/therapies\",\n        method: \"POST\",\n        headers,\n        body: thRowDTO,\n      },\n      opts?.responseOpts\n    );\n  }\n\n  /**\n   * replaceTherapies\n   */\n  replaceTherapiesUsingPOST({\n    thRowDTOs,\n  }: ReplaceTherapiesUsingPOSTRequest): Observable<boolean>;\n  replaceTherapiesUsingPOST(\n    { thRowDTOs }: ReplaceTherapiesUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<RawAjaxResponse<boolean>>;\n  replaceTherapiesUsingPOST(\n    { thRowDTOs }: ReplaceTherapiesUsingPOSTRequest,\n    opts?: OperationOpts\n  ): Observable<boolean | RawAjaxResponse<boolean>> {\n    throwIfNullOrUndefined(thRowDTOs, \"thRowDTOs\", \"replaceTherapiesUsingPOST\");\n\n    const headers: HttpHeaders = {\n      \"Content-Type\": \"application/json\",\n      ...(this.configuration.apiKey && {\n        Authorization: this.configuration.apiKey(\"Authorization\"),\n      }), // JWT authentication\n    };\n\n    return this.request<boolean>(\n      {\n        url: \"/therapies/replace\",\n        method: \"POST\",\n        headers,\n        body: thRowDTOs,\n      },\n      opts?.responseOpts\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}