{"ast":null,"code":"import isEmpty from \"lodash.isempty\";\nimport { Configuration, BillControllerApi } from \"../../generated\";\nimport { applyTokenMiddleware } from \"../../libraries/apiUtils/applyTokenMiddleware\";\nimport { NEW_BILL_FAIL, NEW_BILL_LOADING, NEW_BILL_SUCCESS, NEW_BILL_RESET, GET_BILL_LOADING, GET_BILL_SUCCESS, GET_BILL_FAIL } from \"./consts\";\nconst billControllerApi = new BillControllerApi(new Configuration({\n  middleware: [applyTokenMiddleware]\n}));\nexport const newBill = newBillDto => dispatch => {\n  dispatch({\n    type: NEW_BILL_LOADING\n  });\n  billControllerApi.newBillUsingPOST({\n    newBillDto\n  }).subscribe(payload => {\n    dispatch({\n      type: NEW_BILL_SUCCESS,\n      payload: payload\n    });\n  }, error => {\n    dispatch({\n      type: NEW_BILL_FAIL,\n      error: error\n    });\n  });\n};\nexport const newBillReset = () => dispatch => {\n  dispatch({\n    type: NEW_BILL_RESET\n  });\n};\nexport const getBill = code => dispatch => {\n  dispatch({\n    type: GET_BILL_LOADING\n  });\n  billControllerApi.getBillUsingGET({\n    id: code\n  }).subscribe(payload => {\n    if (typeof payload === \"object\" && !isEmpty(payload)) {\n      dispatch({\n        type: GET_BILL_SUCCESS,\n        payload: payload\n      });\n    } else {\n      dispatch({\n        type: GET_BILL_SUCCESS,\n        payload: []\n      });\n    }\n  }, error => {\n    dispatch({\n      type: GET_BILL_FAIL,\n      error\n    });\n  });\n};","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/state/bills/actions.ts"],"names":["isEmpty","Configuration","BillControllerApi","applyTokenMiddleware","NEW_BILL_FAIL","NEW_BILL_LOADING","NEW_BILL_SUCCESS","NEW_BILL_RESET","GET_BILL_LOADING","GET_BILL_SUCCESS","GET_BILL_FAIL","billControllerApi","middleware","newBill","newBillDto","dispatch","type","newBillUsingPOST","subscribe","payload","error","newBillReset","getBill","code","getBillUsingGET","id"],"mappings":"AACA,OAAOA,OAAP,MAAoB,gBAApB;AACA,SACEC,aADF,EAEEC,iBAFF,QAKO,iBALP;AAMA,SAASC,oBAAT,QAAqC,+CAArC;AAEA,SACEC,aADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,cAJF,EAQEC,gBARF,EASEC,gBATF,EAUEC,aAVF,QAWO,UAXP;AAaA,MAAMC,iBAAiB,GAAG,IAAIT,iBAAJ,CACxB,IAAID,aAAJ,CAAkB;AAAEW,EAAAA,UAAU,EAAE,CAACT,oBAAD;AAAd,CAAlB,CADwB,CAA1B;AAIA,OAAO,MAAMU,OAAO,GACjBC,UAAD,IACGC,QAAD,IAAiD;AAC/CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEX;AADC,GAAD,CAAR;AAIAM,EAAAA,iBAAiB,CAACM,gBAAlB,CAAmC;AAAEH,IAAAA;AAAF,GAAnC,EAAmDI,SAAnD,CACGC,OAAD,IAAa;AACXJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV,gBADC;AAEPa,MAAAA,OAAO,EAAEA;AAFF,KAAD,CAAR;AAID,GANH,EAOGC,KAAD,IAAW;AACTL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ,aADC;AAEPgB,MAAAA,KAAK,EAAEA;AAFA,KAAD,CAAR;AAID,GAZH;AAcD,CArBE;AAuBP,OAAO,MAAMC,YAAY,GACvB,MACGN,QAAD,IAAiD;AAC/CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAET;AADC,GAAD,CAAR;AAGD,CANE;AASP,OAAO,MAAMe,OAAO,GACjBC,IAAD,IACGR,QAAD,IAAoD;AAClDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAER;AADC,GAAD,CAAR;AAGAG,EAAAA,iBAAiB,CAACa,eAAlB,CAAkC;AAAEC,IAAAA,EAAE,EAAEF;AAAN,GAAlC,EAAgDL,SAAhD,CACGC,OAAD,IAAa;AACX,QAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,CAACnB,OAAO,CAACmB,OAAD,CAA3C,EAAsD;AACpDJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,gBADC;AAEPU,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAID,KALD,MAKO;AACLJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,gBADC;AAEPU,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAbH,EAcGC,KAAD,IAAW;AACTL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,aADC;AAEPU,MAAAA;AAFO,KAAD,CAAR;AAID,GAnBH;AAqBD,CA3BE","sourcesContent":["import { Dispatch } from \"redux\";\nimport isEmpty from \"lodash.isempty\";\nimport {\n  Configuration,\n  BillControllerApi,\n  BillDTO,\n  FullBillDTO,\n} from \"../../generated\";\nimport { applyTokenMiddleware } from \"../../libraries/apiUtils/applyTokenMiddleware\";\nimport { IAction } from \"../types\";\nimport {\n  NEW_BILL_FAIL,\n  NEW_BILL_LOADING,\n  NEW_BILL_SUCCESS,\n  NEW_BILL_RESET,\n  SEARCH_BILL_FAIL,\n  SEARCH_BILL_LOADING,\n  SEARCH_BILL_SUCCESS,\n  GET_BILL_LOADING,\n  GET_BILL_SUCCESS,\n  GET_BILL_FAIL,\n} from \"./consts\";\n\nconst billControllerApi = new BillControllerApi(\n  new Configuration({ middleware: [applyTokenMiddleware] })\n);\n\nexport const newBill =\n  (newBillDto: FullBillDTO) =>\n    (dispatch: Dispatch<IAction<null, {}>>): void => {\n      dispatch({\n        type: NEW_BILL_LOADING,\n      });\n\n      billControllerApi.newBillUsingPOST({ newBillDto }).subscribe(\n        (payload) => {\n          dispatch({\n            type: NEW_BILL_SUCCESS,\n            payload: payload,\n          });\n        },\n        (error) => {\n          dispatch({\n            type: NEW_BILL_FAIL,\n            error: error,\n          });\n        }\n      );\n    };\n\nexport const newBillReset =\n  () =>\n    (dispatch: Dispatch<IAction<null, {}>>): void => {\n      dispatch({\n        type: NEW_BILL_RESET,\n      });\n    };\n\n\nexport const getBill =\n  (code: number) =>\n    (dispatch: Dispatch<IAction<BillDTO, {}>>): void => {\n      dispatch({\n        type: GET_BILL_LOADING,\n      });\n      billControllerApi.getBillUsingGET({ id: code }).subscribe(\n        (payload) => {\n          if (typeof payload === \"object\" && !isEmpty(payload)) {\n            dispatch({\n              type: GET_BILL_SUCCESS,\n              payload: payload,\n            });\n          } else {\n            dispatch({\n              type: GET_BILL_SUCCESS,\n              payload: [],\n            });\n          }\n        },\n        (error) => {\n          dispatch({\n            type: GET_BILL_FAIL,\n            error,\n          });\n        }\n      );\n    };"]},"metadata":{},"sourceType":"module"}