{"ast":null,"code":"import isEmpty from \"lodash.isempty\";\nimport { Configuration, PriceListControllerApi } from \"../../generated\";\nimport { applyTokenMiddleware } from \"../../libraries/apiUtils/applyTokenMiddleware\";\nimport { GET_PRICE_LOADING, GET_PRICE_SUCCESS, GET_PRICE_FAIL } from \"./consts\";\nconst priceControllerApi = new PriceListControllerApi(new Configuration({\n  middleware: [applyTokenMiddleware]\n}));\nexport const getPrices = () => dispatch => {\n  dispatch({\n    type: GET_PRICE_LOADING\n  });\n  priceControllerApi.getPricesUsingGET({}).subscribe(payload => {\n    if (typeof payload === \"object\" && !isEmpty(payload)) {\n      dispatch({\n        type: GET_PRICE_SUCCESS,\n        payload: payload\n      });\n    } else {\n      dispatch({\n        type: GET_PRICE_SUCCESS,\n        payload: []\n      });\n    }\n  }, error => {\n    dispatch({\n      type: GET_PRICE_FAIL,\n      error\n    });\n  });\n};\nexport const getPricesList = () => dispatch => {\n  dispatch({\n    type: GET_PRICE_LOADING\n  });\n  priceControllerApi.getPricesUsingGET({}).subscribe(payload => {\n    if (typeof payload === \"object\" && !isEmpty(payload)) {\n      dispatch({\n        type: GET_PRICE_SUCCESS,\n        payload: payload\n      });\n    } else {\n      dispatch({\n        type: GET_PRICE_SUCCESS,\n        payload: []\n      });\n    }\n  }, error => {\n    dispatch({\n      type: GET_PRICE_FAIL,\n      error\n    });\n  });\n};","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/state/prices/actions.ts"],"names":["isEmpty","Configuration","PriceListControllerApi","applyTokenMiddleware","GET_PRICE_LOADING","GET_PRICE_SUCCESS","GET_PRICE_FAIL","priceControllerApi","middleware","getPrices","dispatch","type","getPricesUsingGET","subscribe","payload","error","getPricesList"],"mappings":"AACA,OAAOA,OAAP,MAAoB,gBAApB;AAEA,SACEC,aADF,EAEEC,sBAFF,QAIO,iBAJP;AAKA,SAASC,oBAAT,QAAqC,+CAArC;AAEA,SAQEC,iBARF,EASEC,iBATF,EAUEC,cAVF,QAWO,UAXP;AAaA,MAAMC,kBAAkB,GAAG,IAAIL,sBAAJ,CACzB,IAAID,aAAJ,CAAkB;AAAEO,EAAAA,UAAU,EAAE,CAACL,oBAAD;AAAd,CAAlB,CADyB,CAA3B;AAIA,OAAO,MAAMM,SAAS,GACpB,MACGC,QAAD,IAAuD;AACrDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP;AADC,GAAD,CAAR;AAGAG,EAAAA,kBAAkB,CAACK,iBAAnB,CAAqC,EAArC,EAA0CC,SAA1C,CACKC,OAAD,IAAa;AACX,QAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,CAACd,OAAO,CAACc,OAAD,CAA3C,EAAsD;AACpDJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,iBADC;AAEPS,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAID,KALD,MAKO;AACLJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,iBADC;AAEPS,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAbL,EAcKC,KAAD,IAAW;AACTL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,cADC;AAEPS,MAAAA;AAFO,KAAD,CAAR;AAID,GAnBL;AAqBD,CA3BE;AA6BH,OAAO,MAAMC,aAAa,GAC5B,MACGN,QAAD,IAAuD;AACrDA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEP;AADC,GAAD,CAAR;AAGAG,EAAAA,kBAAkB,CAACK,iBAAnB,CAAqC,EAArC,EAA0CC,SAA1C,CACKC,OAAD,IAAa;AACX,QAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,CAACd,OAAO,CAACc,OAAD,CAA3C,EAAsD;AACpDJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,iBADC;AAEPS,QAAAA,OAAO,EAAEA;AAFF,OAAD,CAAR;AAID,KALD,MAKO;AACLJ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEN,iBADC;AAEPS,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GAbL,EAcKC,KAAD,IAAW;AACTL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,cADC;AAEPS,MAAAA;AAFO,KAAD,CAAR;AAID,GAnBL;AAqBD,CA3BM","sourcesContent":["import { Dispatch } from \"redux\";\nimport isEmpty from \"lodash.isempty\";\nimport { number } from \"yup\";\nimport {\n  Configuration,\n  PriceListControllerApi,\n  PriceDTO,\n} from \"../../generated\";\nimport { applyTokenMiddleware } from \"../../libraries/apiUtils/applyTokenMiddleware\";\nimport { IAction } from \"../types\";\nimport {\n  CREATE_PRICE_FAIL,\n  CREATE_PRICE_LOADING,\n  CREATE_PRICE_RESET,\n  CREATE_PRICE_SUCCESS,\n  SEARCH_PRICE_FAIL,\n  SEARCH_PRICE_LOADING,\n  SEARCH_PRICE_SUCCESS,\n  GET_PRICE_LOADING,\n  GET_PRICE_SUCCESS,\n  GET_PRICE_FAIL,\n} from \"./consts\";\n\nconst priceControllerApi = new PriceListControllerApi(\n  new Configuration({ middleware: [applyTokenMiddleware] })\n);\n\nexport const getPrices =\n  () =>\n    (dispatch: Dispatch<IAction<PriceDTO[], {}>>): void => {\n      dispatch({\n        type: GET_PRICE_LOADING,\n      });\n      priceControllerApi.getPricesUsingGET({ }).subscribe(\n          (payload) => {\n            if (typeof payload === \"object\" && !isEmpty(payload)) {\n              dispatch({\n                type: GET_PRICE_SUCCESS,\n                payload: payload,\n              });\n            } else {\n              dispatch({\n                type: GET_PRICE_SUCCESS,\n                payload: [],\n              });\n            }\n          },\n          (error) => {\n            dispatch({\n              type: GET_PRICE_FAIL,\n              error,\n            });\n          }\n        );\n    };\n\n    export const getPricesList =\n  () =>\n    (dispatch: Dispatch<IAction<PriceDTO[], {}>>): void => {\n      dispatch({\n        type: GET_PRICE_LOADING,\n      });\n      priceControllerApi.getPricesUsingGET({ }).subscribe(\n          (payload) => {\n            if (typeof payload === \"object\" && !isEmpty(payload)) {\n              dispatch({\n                type: GET_PRICE_SUCCESS,\n                payload: payload,\n              });\n            } else {\n              dispatch({\n                type: GET_PRICE_SUCCESS,\n                payload: [],\n              });\n            }\n          },\n          (error) => {\n            dispatch({\n              type: GET_PRICE_FAIL,\n              error,\n            });\n          }\n        );\n    };"]},"metadata":{},"sourceType":"module"}