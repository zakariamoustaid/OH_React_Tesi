{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect, useDispatch } from \"react-redux\";\nimport getPatientSuccess from '../../../state/patient';\nimport \"./styles.scss\";\nimport { createBill, createBillReset } from \"../../../state/bills/actions\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n  const dispatch = useDispatch();\n\n  const load_patient = () => {\n    dispatch(getPatientSuccess);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, \"inserisci qualcosa\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\"\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","AppHeader","Footer","useTranslation","connect","useDispatch","getPatientSuccess","createBill","createBillReset","NewBillActivity","userCredentials","isLoading","hasSucceeded","hasFailed","billHomeRoute","t","breadcrumbMap","dispatch","load_patient","mapStateToProps","state","main","authentication","data","bills","status","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAsE,OAAtE;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAoC,aAApC;AAUA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAO,eAAP;AAEA,SACIC,UADJ,EAEIC,eAFJ,QAGO,8BAHP;;AAaA,MAAMC,eAA0C,GAAG,CAAC;AAChDC,EAAAA,eADgD;AAEhDC,EAAAA,SAFgD;AAGhDC,EAAAA,YAHgD;AAIhDL,EAAAA,UAJgD;AAKhDC,EAAAA,eALgD;AAMhDK,EAAAA,SANgD;AAOhDC,EAAAA;AAPgD,CAAD,KAQ7C;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AAEA,QAAMa,aAAa,GAAG;AAClB,KAACD,CAAC,CAAC,eAAD,CAAF,GAAsB,GADJ;AAElB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB,UAFF;AAGlB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB;AAHF,GAAtB;AAMA,QAAME,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,YAAY,GAAG,MAAK;AACtBD,IAAAA,QAAQ,CAACX,iBAAD,CAAR;AACH,GAFD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAEI,eADrB;AAEI,IAAA,aAAa,EAAEM,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,CAAC,CAAC,aAAD,CAAlC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAO,IAAA,EAAE,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAFJ,CADJ,CALJ,eAiBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADJ;AAqBH,CA9CD;;AAiDA,MAAMI,eAAe,GAAIC,KAAD,KAAiC;AACrDV,EAAAA,eAAe,EAAEU,KAAK,CAACC,IAAN,CAAWC,cAAX,CAA0BC,IADU;AAErDZ,EAAAA,SAAS,EAAES,KAAK,CAACI,KAAN,CAAYjB,UAAZ,CAAuBkB,MAAvB,KAAkC,SAFQ;AAGrDb,EAAAA,YAAY,EAAEQ,KAAK,CAACI,KAAN,CAAYjB,UAAZ,CAAuBkB,MAAvB,KAAkC,SAHK;AAIrDZ,EAAAA,SAAS,EAAEO,KAAK,CAACI,KAAN,CAAYjB,UAAZ,CAAuBkB,MAAvB,KAAkC;AAJQ,CAAjC,CAAxB;;AAUA,MAAMC,kBAAkC,GAAG;AACvCnB,EAAAA,UADuC;AAEvCC,EAAAA;AAFuC,CAA3C;AAKA,eAAeJ,OAAO,CAACe,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CjB,eAA7C,CAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect, useDispatch} from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { IState } from \"../../../types\";\nimport { useFormik } from \"formik\";\nimport TextField from \"../../accessories/textField/TextField\";\nimport { BillDTO } from \"../../../generated\";\nimport { FullBillDTO } from \"../../../generated\";\nimport { scrollToElement } from \"../../../libraries/uiUtils/scrollToElement\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport getPatientSuccess from '../../../state/patient';\nimport \"./styles.scss\";\nimport SearchIcon from \"../../../assets/SearchIcon\";\nimport {\n    createBill,\n    createBillReset,\n} from \"../../../state/bills/actions\";\n\nimport {\n    IDispatchProps,\n    IStateProps,\n    TActivityTransitionState,\n    TProps,\n} from \"./types\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n}) => {\n    const { t } = useTranslation();\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n\n    const dispatch = useDispatch();\n\n    const load_patient = () =>{\n        dispatch(getPatientSuccess);\n    }\n\n\n\n    return (\n        <div className=\"new_Bill\">\n            <AppHeader\n                userCredentials={userCredentials}\n                breadcrumbMap={breadcrumbMap}\n            />\n            <div className=\"newBill__background\">\n                <div className=\"newBill__content\">\n                    <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                    <div className=\"newBill__panel\">\n                        <div className=\"table\">\n                            <label>inserisci qualcosa</label>\n                            <input id=\"test\"></input>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    isLoading: state.bills.createBill.status === \"LOADING\",\n    hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n    hasFailed: state.bills.createBill.status === \"FAIL\",\n});\n\n\n\n\nconst mapDispatchToProps: IDispatchProps = {\n    createBill,\n    createBillReset,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}