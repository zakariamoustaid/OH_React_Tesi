{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class ExamControllerApi extends BaseAPI {\n  /**\n   * deleteExam\n   */\n  deleteExamUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteExamUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/exams/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getExamsUsingGET({\n    description\n  }, opts) {\n    throwIfNullOrUndefined(description, 'description', 'getExamsUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/exams/description/{description}'.replace('{description}', encodeURI(description)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getExamsUsingGET1(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/exams',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newExamUsingPOST({\n    newExam\n  }, opts) {\n    throwIfNullOrUndefined(newExam, 'newExam', 'newExamUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/exams',\n      method: 'POST',\n      headers,\n      body: newExam\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateExamsUsingPUT({\n    code,\n    updateExam\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'updateExamsUsingPUT');\n    throwIfNullOrUndefined(updateExam, 'updateExam', 'updateExamsUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/exams/{code}'.replace('{code}', encodeURI(code)),\n      method: 'PUT',\n      headers,\n      body: updateExam\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/generated/apis/ExamControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","ExamControllerApi","deleteExamUsingDELETE","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getExamsUsingGET","description","getExamsUsingGET1","newExamUsingPOST","newExam","body","updateExamsUsingPUT","updateExam"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    ExamDTO,\n    ResponseEntity,\n} from '../models';\n\nexport interface DeleteExamUsingDELETERequest {\n    code: string;\n}\n\nexport interface GetExamsUsingGETRequest {\n    description: string;\n}\n\nexport interface NewExamUsingPOSTRequest {\n    newExam: ExamDTO;\n}\n\nexport interface UpdateExamsUsingPUTRequest {\n    code: string;\n    updateExam: ExamDTO;\n}\n\n/**\n * no description\n */\nexport class ExamControllerApi extends BaseAPI {\n\n    /**\n     * deleteExam\n     */\n    deleteExamUsingDELETE({ code }: DeleteExamUsingDELETERequest): Observable<ResponseEntity>\n    deleteExamUsingDELETE({ code }: DeleteExamUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    deleteExamUsingDELETE({ code }: DeleteExamUsingDELETERequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteExamUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/exams/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getExams\n     */\n    getExamsUsingGET({ description }: GetExamsUsingGETRequest): Observable<Array<ExamDTO>>\n    getExamsUsingGET({ description }: GetExamsUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<ExamDTO>>>\n    getExamsUsingGET({ description }: GetExamsUsingGETRequest, opts?: OperationOpts): Observable<Array<ExamDTO> | RawAjaxResponse<Array<ExamDTO>>> {\n        throwIfNullOrUndefined(description, 'description', 'getExamsUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<ExamDTO>>({\n            url: '/exams/description/{description}'.replace('{description}', encodeURI(description)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getExams\n     */\n    getExamsUsingGET1(): Observable<Array<ExamDTO>>\n    getExamsUsingGET1(opts?: OperationOpts): Observable<RawAjaxResponse<Array<ExamDTO>>>\n    getExamsUsingGET1(opts?: OperationOpts): Observable<Array<ExamDTO> | RawAjaxResponse<Array<ExamDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<ExamDTO>>({\n            url: '/exams',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newExam\n     */\n    newExamUsingPOST({ newExam }: NewExamUsingPOSTRequest): Observable<ResponseEntity>\n    newExamUsingPOST({ newExam }: NewExamUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    newExamUsingPOST({ newExam }: NewExamUsingPOSTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(newExam, 'newExam', 'newExamUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/exams',\n            method: 'POST',\n            headers,\n            body: newExam,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateExams\n     */\n    updateExamsUsingPUT({ code, updateExam }: UpdateExamsUsingPUTRequest): Observable<ResponseEntity>\n    updateExamsUsingPUT({ code, updateExam }: UpdateExamsUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    updateExamsUsingPUT({ code, updateExam }: UpdateExamsUsingPUTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(code, 'code', 'updateExamsUsingPUT');\n        throwIfNullOrUndefined(updateExam, 'updateExam', 'updateExamsUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/exams/{code}'.replace('{code}', encodeURI(code)),\n            method: 'PUT',\n            headers,\n            body: updateExam,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}