{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/DrawerActivity.tsx\";\nimport React from \"react\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst DrawerActivity = ({\n  prices\n}) => {\n  //\n  const [medicals, setMedicals] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n\n  const take_items = () => {\n    medicals === null || medicals === void 0 ? void 0 : medicals.forEach(function (i, j) {\n      if (items.some(it => it.id === i) === true) {\n        items === null || items === void 0 ? void 0 : items.forEach(function (x) {\n          if (x.id === i) console.log('ciao');\n        });\n      } else {\n        //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n        setItems(pre => {\n          var _prices$find, _prices$find2, _prices$find2$list, _prices$find3;\n\n          return [...pre, {\n            id: prices === null || prices === void 0 ? void 0 : (_prices$find = prices.find(p => p.id == i)) === null || _prices$find === void 0 ? void 0 : _prices$find.id,\n            description: prices === null || prices === void 0 ? void 0 : (_prices$find2 = prices.find(p => p.id == i)) === null || _prices$find2 === void 0 ? void 0 : (_prices$find2$list = _prices$find2.list) === null || _prices$find2$list === void 0 ? void 0 : _prices$find2$list.description,\n            amount: prices === null || prices === void 0 ? void 0 : (_prices$find3 = prices.find(p => p.id == i)) === null || _prices$find3 === void 0 ? void 0 : _prices$find3.price,\n            item_quant: 1\n          }];\n        });\n      }\n    });\n  };\n\n  const [open_med, setOpen_med] = React.useState(false);\n  const [open_ope, setOpen_ope] = React.useState(false);\n  const [open_exa, setOpen_exa] = React.useState(false);\n  const [open_oth, setOpen_oth] = React.useState(false); //manage open/close modal per type\n\n  const handleClickOpen_med = () => {\n    setOpen_med(true);\n  };\n\n  const handleClose_med = () => {\n    setOpen_med(false);\n  };\n\n  const handleClickOpen_ope = () => {\n    setOpen_ope(true);\n  };\n\n  const handleClose_ope = () => {\n    setOpen_ope(false);\n  };\n\n  const handleClickOpen_exa = () => {\n    setOpen_exa(true);\n  };\n\n  const handleClose_exa = () => {\n    setOpen_exa(false);\n  };\n\n  const handleClickOpen_oth = () => {\n    setOpen_oth(true);\n  };\n\n  const handleClose_oth = () => {\n    setOpen_oth(false);\n  };\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  //create rows for MED\n  let rows_med = [];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list;\n\n    if (m.group === \"MED\") rows_med[i].push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list = m.list) === null || _m$list === void 0 ? void 0 : _m$list.description\n    });\n  });\n  rows_med === null || rows_med === void 0 ? void 0 : rows_med.shift(); //create rows for OPE\n\n  let rows_ope = [];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list2;\n\n    if (m.group === \"OPE\") rows_ope[i].push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list2 = m.list) === null || _m$list2 === void 0 ? void 0 : _m$list2.description\n    });\n  });\n  rows_med === null || rows_med === void 0 ? void 0 : rows_med.shift(); //create rows for EXA\n\n  let rows_exa = [];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list3;\n\n    if (m.group === \"EXA\") rows_exa[i].push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list3 = m.list) === null || _m$list3 === void 0 ? void 0 : _m$list3.description\n    });\n  });\n  rows_med === null || rows_med === void 0 ? void 0 : rows_med.shift(); //create rows for OTH\n\n  let rows_oth = [];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list4;\n\n    if (m.group === \"OTH\") rows_oth[i].push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list4 = m.list) === null || _m$list4 === void 0 ? void 0 : _m$list4.description\n    });\n  });\n  rows_med === null || rows_med === void 0 ? void 0 : rows_med.shift();\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"bill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Medical\",\n    onClick: handleClickOpen_med,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 74\n    }\n  }), \"Medical\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_med,\n    onClose: handleClose_med,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Select Medical\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: take_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_med,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Medical\",\n    onClick: handleClickOpen_ope,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 74\n    }\n  }), \"Operation\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_ope,\n    onClose: handleClose_ope,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, \"Select Operation\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_ope,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Exam\",\n    onClick: handleClickOpen_exa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 71\n    }\n  }), \"Exam\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_exa,\n    onClose: handleClose_exa,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Select Exam\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_exa,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Other\",\n    onClick: handleClickOpen_oth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 72\n    }\n  }), \"Other\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_oth,\n    onClose: handleClose_oth,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"Select Other\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_oth,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default DrawerActivity;","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/DrawerActivity.tsx"],"names":["React","DataGrid","Button","Dialog","ListItem","List","DialogContent","DialogTitle","AddIcon","DrawerActivity","prices","medicals","setMedicals","useState","items","setItems","take_items","forEach","i","j","some","it","id","x","console","log","pre","find","p","description","list","amount","price","item_quant","open_med","setOpen_med","open_ope","setOpen_ope","open_exa","setOpen_exa","open_oth","setOpen_oth","handleClickOpen_med","handleClose_med","handleClickOpen_ope","handleClose_ope","handleClickOpen_exa","handleClose_exa","handleClickOpen_oth","handleClose_oth","columns","field","headerName","width","editable","rows_med","m","group","push","shift","rows_ope","rows_exa","rows_oth","height","e"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { DataGrid, GridSelectionModel, GridColDef, GridRowId, GridRowData } from '@material-ui/data-grid';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { PricesState } from \"./types\";\n\nconst DrawerActivity: FunctionComponent<PricesState> = ({\n    prices,\n}) => {\n\n    //\n    type Item = {\n        id?: number;\n        description?: string;\n        amount?: number;\n        item_quant?: number;\n    }\n\n    const [medicals, setMedicals] = React.useState<GridSelectionModel>([]);\n    const [items, setItems] = React.useState<Item[]>([]);\n\n    const take_items = () => {\n        medicals?.forEach(function (i, j) {\n            if ((items.some(it => it.id === i)) === true) {\n                items?.forEach(function (x) {\n                    if (x.id === i)\n                        console.log('ciao');\n                })\n            }\n            else {\n                //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n                setItems(pre =>\n                    [...pre,\n                    {\n                        id: prices?.find(p => p.id == i)?.id,\n                        description: prices?.find(p => p.id == i)?.list?.description,\n                        amount: prices?.find(p => p.id == i)?.price,\n                        item_quant: 1\n                    }]);\n            }\n        })\n    }\n\n    const [open_med, setOpen_med] = React.useState(false);\n    const [open_ope, setOpen_ope] = React.useState(false);\n    const [open_exa, setOpen_exa] = React.useState(false);\n    const [open_oth, setOpen_oth] = React.useState(false);\n\n\n\n    //manage open/close modal per type\n    const handleClickOpen_med = () => {\n        setOpen_med(true);\n    };\n    const handleClose_med = () => {\n        setOpen_med(false);\n    };\n\n    const handleClickOpen_ope = () => {\n        setOpen_ope(true);\n    };\n    const handleClose_ope = () => {\n        setOpen_ope(false);\n    };\n\n    const handleClickOpen_exa = () => {\n        setOpen_exa(true);\n    };\n    const handleClose_exa = () => {\n        setOpen_exa(false);\n    };\n\n    const handleClickOpen_oth = () => {\n        setOpen_oth(true);\n    };\n    const handleClose_oth = () => {\n        setOpen_oth(false);\n    };\n\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    type Row = [{\n        id: number | undefined,\n        group: string,\n        description: string | undefined\n    }];\n\n    //create rows for MED\n    let rows_med: Row[] = [];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"MED\")\n            rows_med[i].push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift();\n\n    //create rows for OPE\n    let rows_ope: Row[] = [];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OPE\")\n            rows_ope[i].push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift();\n\n    //create rows for EXA\n    let rows_exa: Row[] = [];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"EXA\")\n            rows_exa[i].push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift();\n\n    //create rows for OTH\n    let rows_oth: Row[] = [];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OTH\")\n            rows_oth[i].push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift();\n\n    return (\n        <List className=\"bill_Drawer\">\n            <ListItem button key=\"Medical\" onClick={handleClickOpen_med}><AddIcon></AddIcon>Medical</ListItem>\n            <Dialog open={open_med} onClose={handleClose_med} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Medical</DialogTitle>\n                <Button onClick={take_items}>Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_med}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => console.log(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ListItem button key=\"Medical\" onClick={handleClickOpen_ope}><AddIcon></AddIcon>Operation</ListItem>\n            <Dialog open={open_ope} onClose={handleClose_ope} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Operation</DialogTitle>\n                <Button >Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_ope}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => console.log(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ListItem button key=\"Exam\" onClick={handleClickOpen_exa}><AddIcon></AddIcon>Exam</ListItem>\n            <Dialog open={open_exa} onClose={handleClose_exa} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Exam</DialogTitle>\n                <Button >Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_exa}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => console.log(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ListItem button key=\"Other\" onClick={handleClickOpen_oth}><AddIcon></AddIcon>Other</ListItem>\n            <Dialog open={open_oth} onClose={handleClose_oth} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Other</DialogTitle>\n                <Button >Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_oth}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => console.log(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </List>\n    )\n}\n\n\nexport default DrawerActivity;"]},"metadata":{},"sourceType":"module"}