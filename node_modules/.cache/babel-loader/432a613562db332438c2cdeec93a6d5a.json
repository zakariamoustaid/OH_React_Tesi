{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport set from \"lodash.set\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport \"./styles.scss\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { DataGrid } from '@material-ui/data-grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport { createBill, createBillReset, getBill } from \"../../../state/bills/actions\";\nimport { getPrices, getPriceLists } from \"../../../state/prices/actions\";\nimport { getMedicals } from \"../../../state/medicals/actions\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute,\n  med,\n  getMedicals,\n  getMedStat,\n  bill,\n  getBill,\n  prices,\n  getPrices,\n  priceLists,\n  getPriceLists\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n  useEffect(() => {\n    getMedicals();\n  }, []);\n  useEffect(() => {\n    getPrices();\n  }, []); //\n  //Gestione Dialog\n  //\n\n  const [open_med, setOpen_med] = React.useState(false);\n\n  const handleClickOpen_med = () => {\n    setOpen_med(true);\n  };\n\n  const handleClose_med = () => {\n    setOpen_med(false);\n  };\n\n  const [open_ope, setOpen_ope] = React.useState(false);\n\n  const handleClickOpen_ope = () => {\n    setOpen_ope(true);\n  };\n\n  const handleClose_ope = () => {\n    setOpen_ope(false);\n  };\n\n  const [open_exa, setOpen_exa] = React.useState(false);\n\n  const handleClickOpen_exa = () => {\n    setOpen_exa(true);\n  };\n\n  const handleClose_exa = () => {\n    setOpen_exa(false);\n  };\n\n  const [open_oth, setOpen_oth] = React.useState(false);\n\n  const handleClickOpen_oth = () => {\n    setOpen_oth(true);\n  };\n\n  const handleClose_oth = () => {\n    setOpen_oth(false);\n  };\n\n  const [open_cust, setOpen_cust] = React.useState(false);\n\n  const handleClickOpen_cust = () => {\n    setOpen_cust(true);\n  };\n\n  const handleClose_cust = () => {\n    setOpen_cust(false);\n  }; //\n  //\n  //\n  //test useState\n  //\n\n\n  const [selectionModel, setSelectionModel] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n  const [medicals, setMedicals] = React.useState([]);\n  const [operations, setOperations] = React.useState([]);\n  const [exams, setExams] = React.useState([]);\n  const [others, setOthers] = React.useState([]);\n  const [custom, setCustom] = React.useState();\n\n  const take_items = () => {\n    medicals === null || medicals === void 0 ? void 0 : medicals.forEach(function (i, j) {\n      if (items.some(it => it.id === i) === true) {\n        items === null || items === void 0 ? void 0 : items.forEach(function (x) {\n          if (x.id === i) set(x, x.id, x.id + 1);\n        });\n      } else {\n        //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n        setItems(pre => {\n          var _prices$find, _prices$find2, _prices$find2$list, _prices$find3;\n\n          return [...pre, {\n            id: prices === null || prices === void 0 ? void 0 : (_prices$find = prices.find(p => p.id == i)) === null || _prices$find === void 0 ? void 0 : _prices$find.id,\n            description: prices === null || prices === void 0 ? void 0 : (_prices$find2 = prices.find(p => p.id == i)) === null || _prices$find2 === void 0 ? void 0 : (_prices$find2$list = _prices$find2.list) === null || _prices$find2$list === void 0 ? void 0 : _prices$find2$list.description,\n            amount: prices === null || prices === void 0 ? void 0 : (_prices$find3 = prices.find(p => p.id == i)) === null || _prices$find3 === void 0 ? void 0 : _prices$find3.price,\n            item_quant: 1\n          }];\n        });\n      }\n    });\n  };\n  /*\n  const get_items_o = () => {\n      operations?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n  const get_items_e = () => {\n      exams?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n  const get_items_ot = () => {\n      others?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n   const get_items_cust = () => {\n      const i: GridRowId = 2;\n      setItems(prevItems => [...prevItems, i]);\n  }\n   const delete_item = (e: GridRowId) => {\n      console.log(e);\n      setItems(items.filter(item => e !== item));\n  }\n  */\n\n\n  const get_input = e => {\n    const a = e.target.id;\n    console.log(a); //setCustom({id:1, description:'ciao'});\n  };\n\n  const get_cust = e => {\n    e.preventDefault();\n    const desc = e.currentTarget.elements[0].value;\n    const amo = e.currentTarget.elements[1].value;\n    setCustom({\n      id: 1,\n      description: desc,\n      amount: amo\n    });\n    console.log(custom);\n  };\n\n  const test = e => {\n    var _ref;\n\n    e.preventDefault();\n    console.log((_ref = e.currentTarget.elements[4]) === null || _ref === void 0 ? void 0 : _ref.value);\n  }; //\n  //\n  //  //  //  //  //  //\n  //  gestione select //\n  //  //  //  //  //  //\n\n\n  const [quantity, setQuantity] = React.useState('1');\n\n  const handleChangeSelect = event => {\n    setQuantity(event.target.value);\n  }; //  //  //  //  //  //\n  // Gestione Grid MED//\n  //  //  //  //  //  //\n\n\n  const columns_med = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  let rows_med = [{\n    id: 0,\n    group: '',\n    description: ''\n  }];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list;\n\n    if (m.group === \"MED\") rows_med.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list = m.list) === null || _m$list === void 0 ? void 0 : _m$list.description\n    });\n  });\n  rows_med === null || rows_med === void 0 ? void 0 : rows_med.shift(); //  //  //  //  //  //\n  //  GESTIONE ROWS   //\n  //  //  //  //  //  //\n\n  const [row, setRow] = useState(''); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid OPE//\n  //  //  //  //  //  //\n\n  const columns_ope = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_ope = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list2;\n\n    if (m.group === \"OPE\") rows_ope.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list2 = m.list) === null || _m$list2 === void 0 ? void 0 : _m$list2.description\n    });\n  });\n  rows_ope.shift(); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid EXA//\n  //  //  //  //  //  //\n\n  const columns_exa = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_exa = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list3;\n\n    if (m.group === \"EXA\") rows_exa.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list3 = m.list) === null || _m$list3 === void 0 ? void 0 : _m$list3.description\n    });\n  });\n  rows_exa.shift(); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid OTH//\n  //  //  //  //  //  //\n\n  const columns_oth = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_oth = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list4;\n\n    if (m.group === \"OTH\") rows_oth.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list4 = m.list) === null || _m$list4 === void 0 ? void 0 : _m$list4.description\n    });\n  });\n  rows_oth.shift(); //\n  //\n  //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 21\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => test(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Date_Pat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextData, {\n    className: \"bill_Date\",\n    id: \"date\",\n    label: \"Data\",\n    type: \"date\",\n    defaultValue: \"\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"bill_SelectPat\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 37\n    }\n  }, \"find Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_InputPat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 67\n    }\n  }, \"Patient\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 89\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"patient_input\",\n    value: \"Mario Rossi\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 102\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 49\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 49\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 49\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 49\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 41\n    }\n  }, items === null || items === void 0 ? void 0 : items.map((x, y) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 57\n      }\n    }, x.description), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 57\n      }\n    }, x.amount), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 57\n      }\n    }, x.item_quant));\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"bill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Medical\",\n    onClick: handleClickOpen_med,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 98\n    }\n  }), \"Medical\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_med,\n    onClose: handleClose_med,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 41\n    }\n  }, \"Select Medical\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: take_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 41\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_med,\n    columns: columns_med,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setMedicals(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 49\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Medical\",\n    onClick: handleClickOpen_ope,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 98\n    }\n  }), \"Operation\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_ope,\n    onClose: handleClose_ope,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 41\n    }\n  }, \"Select Operation\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 41\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_ope,\n    columns: columns_ope,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setOperations(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 49\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Exam\",\n    onClick: handleClickOpen_exa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 95\n    }\n  }), \"Exam\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_exa,\n    onClose: handleClose_exa,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 41\n    }\n  }, \"Select Exam\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 41\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_exa,\n    columns: columns_exa,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setExams(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 49\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Other\",\n    onClick: handleClickOpen_oth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 96\n    }\n  }), \"Other\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_oth,\n    onClose: handleClose_oth,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 41\n    }\n  }, \"Select Other\"), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 41\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_oth,\n    columns: columns_oth,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setOthers(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 49\n    }\n  }))))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Custom\",\n    onClick: handleClickOpen_cust,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 94\n    }\n  }), \"Custom\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_cust,\n    onClose: handleClose_cust,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 37\n    }\n  }, \"Add custom Item\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => get_cust(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"description\",\n    label: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"amount\",\n    label: \"Amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 45\n    }\n  }, \"Confirm\")))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(SaveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 62\n    }\n  }), \"SAVE\")))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\",\n  bill: state.bills.getBill.data,\n  med: state.medicals.medicalsOrderByName.data,\n  prices: state.prices.getPrices.data,\n  getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n  priceLists: state.prices.getPriceLists.data\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset,\n  getMedicals,\n  getBill,\n  getPrices,\n  getPriceLists\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useState","set","AppHeader","Footer","Button","Table","TextData","TableBody","TableCell","TableContainer","TableHead","TableRow","ListItem","List","Paper","useTranslation","connect","Dialog","DataGrid","DialogContent","DialogTitle","AddIcon","SaveIcon","TextField","createBill","createBillReset","getBill","getPrices","getPriceLists","getMedicals","NewBillActivity","userCredentials","isLoading","hasSucceeded","hasFailed","billHomeRoute","med","getMedStat","bill","prices","priceLists","t","breadcrumbMap","open_med","setOpen_med","handleClickOpen_med","handleClose_med","open_ope","setOpen_ope","handleClickOpen_ope","handleClose_ope","open_exa","setOpen_exa","handleClickOpen_exa","handleClose_exa","open_oth","setOpen_oth","handleClickOpen_oth","handleClose_oth","open_cust","setOpen_cust","handleClickOpen_cust","handleClose_cust","selectionModel","setSelectionModel","items","setItems","medicals","setMedicals","operations","setOperations","exams","setExams","others","setOthers","custom","setCustom","take_items","forEach","i","j","some","it","id","x","pre","find","p","description","list","amount","price","item_quant","get_input","e","a","target","console","log","get_cust","preventDefault","desc","currentTarget","elements","value","amo","test","quantity","setQuantity","handleChangeSelect","event","columns_med","field","headerName","width","editable","rows_med","group","m","push","shift","row","setRow","columns_ope","rows_ope","columns_exa","rows_exa","columns_oth","rows_oth","shrink","map","y","height","mapStateToProps","state","main","authentication","data","bills","status","medicalsOrderByName","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport get from \"lodash.get\";\nimport has from \"lodash.has\";\nimport set from \"lodash.set\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { IState } from \"../../../types\";\nimport \"./styles.scss\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { DataGrid, GridSelectionModel, GridColDef, GridRowId, GridRowData } from '@material-ui/data-grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {\n    createBill,\n    createBillReset,\n    getBill,\n} from \"../../../state/bills/actions\";\nimport {\n    getPrices,\n    getPriceLists\n} from \"../../../state/prices/actions\"\nimport {\n    getMedicals,\n} from \"../../../state/medicals/actions\"\nimport {\n    IDispatchProps,\n    IStateProps,\n    TProps,\n} from \"./types\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n    med,\n    getMedicals,\n    getMedStat,\n    bill,\n    getBill,\n    prices,\n    getPrices,\n    priceLists,\n    getPriceLists\n}) => {\n    const { t } = useTranslation();\n    type Custom = {\n        id: number,\n        description: string,\n        amount: string,\n    }\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n    useEffect(() => {\n        getMedicals();\n    }, []);\n\n    useEffect(() => {\n        getPrices();\n    }, []);\n\n\n    //\n    //Gestione Dialog\n    //\n    const [open_med, setOpen_med] = React.useState(false);\n\n    const handleClickOpen_med = () => {\n        setOpen_med(true);\n    };\n\n    const handleClose_med = () => {\n        setOpen_med(false);\n    };\n\n    const [open_ope, setOpen_ope] = React.useState(false);\n\n    const handleClickOpen_ope = () => {\n        setOpen_ope(true);\n    };\n\n    const handleClose_ope = () => {\n        setOpen_ope(false);\n    };\n\n    const [open_exa, setOpen_exa] = React.useState(false);\n\n    const handleClickOpen_exa = () => {\n        setOpen_exa(true);\n    };\n\n    const handleClose_exa = () => {\n        setOpen_exa(false);\n    };\n\n    const [open_oth, setOpen_oth] = React.useState(false);\n\n    const handleClickOpen_oth = () => {\n        setOpen_oth(true);\n    };\n\n    const handleClose_oth = () => {\n        setOpen_oth(false);\n    };\n\n    const [open_cust, setOpen_cust] = React.useState(false);\n\n    const handleClickOpen_cust = () => {\n        setOpen_cust(true);\n    };\n\n    const handleClose_cust = () => {\n        setOpen_cust(false);\n    };\n    //\n    //\n\n    //\n    //test useState\n    //\n    type Item = {\n        id?: number;\n        description?: string;\n        amount?: number;\n        item_quant?: number;\n    }\n\n    const [selectionModel, setSelectionModel] = React.useState<GridSelectionModel>([]);\n\n    const [items, setItems] = React.useState<Item[]>([]);\n    const [medicals, setMedicals] = React.useState<GridSelectionModel>([]);\n    const [operations, setOperations] = React.useState<GridSelectionModel>([]);\n    const [exams, setExams] = React.useState<GridSelectionModel>([]);\n    const [others, setOthers] = React.useState<GridSelectionModel>([]);\n    const [custom, setCustom] = React.useState<Custom>();\n\n    const take_items = () => {\n\n        medicals?.forEach(function (i, j) {\n            if ((items.some(it => it.id === i)) === true) {\n                items?.forEach(function (x) {\n                    if (x.id === i)\n                    set(x, x.id, x.id+1);\n                })\n            }\n            else {\n                //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n                setItems(pre =>\n                    [...pre,\n                    {\n                        id: prices?.find(p => p.id == i)?.id,\n                        description: prices?.find(p => p.id == i)?.list?.description,\n                        amount: prices?.find(p => p.id == i)?.price,\n                        item_quant: 1\n                    }]);\n            }\n        })\n    }\n    /*\n    const get_items_o = () => {\n        operations?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_e = () => {\n        exams?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_ot = () => {\n        others?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n\n    const get_items_cust = () => {\n        const i: GridRowId = 2;\n        setItems(prevItems => [...prevItems, i]);\n    }\n\n    const delete_item = (e: GridRowId) => {\n        console.log(e);\n        setItems(items.filter(item => e !== item));\n    }\n\n\n*/\n    const get_input = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const a = e.target.id as string;\n        console.log(a);\n\n        //setCustom({id:1, description:'ciao'});\n    }\n\n    const get_cust = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const desc = (e.currentTarget.elements[0] as HTMLInputElement).value as string;\n        const amo = (e.currentTarget.elements[1] as HTMLInputElement).value as string;\n        setCustom({ id: 1, description: desc, amount: amo });\n        console.log(custom);\n\n    }\n\n    const test = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        console.log((e.currentTarget.elements[4] as HTMLInputElement)?.value);\n    }\n    //\n    //\n\n    //  //  //  //  //  //\n    //  gestione select //\n    //  //  //  //  //  //\n    const [quantity, setQuantity] = React.useState('1');\n    const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setQuantity(event.target.value as string);\n    };\n\n\n    //  //  //  //  //  //\n    // Gestione Grid MED//\n    //  //  //  //  //  //\n    const columns_med = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    type row = [{\n        id: number | undefined,\n        group: string,\n        description: string | undefined\n    }];\n\n    let rows_med: row = [{ id: 0, group: '', description: '' }];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"MED\")\n            rows_med.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift();\n\n    //  //  //  //  //  //\n    //  GESTIONE ROWS   //\n    //  //  //  //  //  //\n    const [row, setRow] = useState('');\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OPE//\n    //  //  //  //  //  //\n    const columns_ope: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_ope = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OPE\")\n            rows_ope.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_ope.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid EXA//\n    //  //  //  //  //  //\n    const columns_exa: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_exa = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"EXA\")\n            rows_exa.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_exa.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OTH//\n    //  //  //  //  //  //\n    const columns_oth: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_oth = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OTH\")\n            rows_oth.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_oth.shift();\n    //\n    //\n\n\n    //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n\n\n    return (\n        <div className=\"new_Bill\">\n            <AppHeader\n                userCredentials={userCredentials}\n                breadcrumbMap={breadcrumbMap}\n            />\n            <div className=\"newBill__background\">\n                <div className=\"newBill__content\">\n                    <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                    <div className=\"newBill__panel\">\n                        <form onSubmit={e => test(e)}>\n                            <div className=\"newBill_Head\">\n                                <div className=\"newBill_Date_Pat\">\n                                    <TextData\n                                        className='bill_Date'\n                                        id=\"date\"\n                                        label=\"Data\"\n                                        type=\"date\"\n                                        defaultValue=\"\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <Button type=\"submit\" className='bill_SelectPat' variant=\"outlined\">find Patient</Button>\n                                </div>\n                                <div className=\"newBill_InputPat\"><label>Patient</label><span></span><input className=\"patient_input\" value=\"Mario Rossi\" disabled></input></div>\n                            </div>\n                            <div className=\"newBill_Rows\">\n                                <TableContainer component={Paper}>\n                                    <Table size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Description</TableCell>\n                                                <TableCell>Amount</TableCell>\n                                                <TableCell>Qty</TableCell>\n                                                <TableCell>Delete</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {items?.map((x, y) => {\n                                                return (\n                                                    <TableRow>\n                                                        <TableCell>{x.description}</TableCell>\n                                                        <TableCell>{x.amount}</TableCell>\n                                                        <TableCell>{x.item_quant}</TableCell>\n                                                    </TableRow>\n                                                )\n                                            }\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </form>\n                        <div className=\"newBill_Drawer\">\n                            <List className=\"bill_Drawer\">\n                                <div>\n                                    <ListItem button key=\"Medical\" onClick={handleClickOpen_med}><AddIcon></AddIcon>Medical</ListItem>\n                                    <Dialog open={open_med} onClose={handleClose_med} aria-labelledby=\"form-dialog-title\">\n                                        <DialogTitle id=\"form-dialog-title\">Select Medical</DialogTitle>\n                                        <Button onClick={take_items}>Confirm</Button>\n                                        <DialogContent>\n                                            <div style={{ height: 400, width: 450 }}>\n                                                <DataGrid\n                                                    rows={rows_med}\n                                                    columns={columns_med}\n                                                    checkboxSelection\n                                                    disableSelectionOnClick\n                                                    onSelectionModelChange={e => setMedicals(e)}\n                                                />\n                                            </div>\n                                        </DialogContent>\n                                    </Dialog>\n                                </div>\n                                <div>\n                                    <ListItem button key=\"Medical\" onClick={handleClickOpen_ope}><AddIcon></AddIcon>Operation</ListItem>\n                                    <Dialog open={open_ope} onClose={handleClose_ope} aria-labelledby=\"form-dialog-title\">\n                                        <DialogTitle id=\"form-dialog-title\">Select Operation</DialogTitle>\n                                        <Button >Confirm</Button>\n                                        <DialogContent>\n                                            <div style={{ height: 400, width: 450 }}>\n                                                <DataGrid\n                                                    rows={rows_ope}\n                                                    columns={columns_ope}\n                                                    checkboxSelection\n                                                    disableSelectionOnClick\n                                                    onSelectionModelChange={e => setOperations(e)}\n                                                />\n                                            </div>\n                                        </DialogContent>\n                                    </Dialog>\n                                </div>\n                                <div>\n                                    <ListItem button key=\"Exam\" onClick={handleClickOpen_exa}><AddIcon></AddIcon>Exam</ListItem>\n                                    <Dialog open={open_exa} onClose={handleClose_exa} aria-labelledby=\"form-dialog-title\">\n                                        <DialogTitle id=\"form-dialog-title\">Select Exam</DialogTitle>\n                                        <Button >Confirm</Button>\n                                        <DialogContent>\n                                            <div style={{ height: 400, width: 450 }}>\n                                                <DataGrid\n                                                    rows={rows_exa}\n                                                    columns={columns_exa}\n                                                    checkboxSelection\n                                                    disableSelectionOnClick\n                                                    onSelectionModelChange={e => setExams(e)}\n                                                />\n                                            </div>\n                                        </DialogContent>\n                                    </Dialog>\n                                </div>\n                                <div>\n                                    <ListItem button key=\"Other\" onClick={handleClickOpen_oth}><AddIcon></AddIcon>Other</ListItem>\n                                    <Dialog open={open_oth} onClose={handleClose_oth} aria-labelledby=\"form-dialog-title\">\n                                        <DialogTitle id=\"form-dialog-title\">Select Other</DialogTitle>\n                                        <Button >Confirm</Button>\n                                        <DialogContent>\n                                            <div style={{ height: 400, width: 450 }}>\n                                                <DataGrid\n                                                    rows={rows_oth}\n                                                    columns={columns_oth}\n                                                    checkboxSelection\n                                                    disableSelectionOnClick\n                                                    onSelectionModelChange={e => setOthers(e)}\n                                                />\n                                            </div>\n                                        </DialogContent>\n                                    </Dialog>\n                                </div>\n                                <ListItem button key=\"Custom\" onClick={handleClickOpen_cust}><AddIcon></AddIcon>Custom</ListItem>\n                                <Dialog open={open_cust} onClose={handleClose_cust} aria-labelledby=\"form-dialog-title\">\n                                    <DialogTitle id=\"form-dialog-title\">Add custom Item</DialogTitle>\n                                    <DialogContent>\n                                        <form onSubmit={e => get_cust(e)}>\n                                            <TextField required id=\"description\" label=\"Description\" />\n                                            <TextField required id=\"amount\" label=\"Amount\" />\n                                            <Button type=\"submit\">Confirm</Button>\n                                        </form>\n                                    </DialogContent>\n                                </Dialog>\n                                <ListItem button key=\"Other\"><SaveIcon></SaveIcon>SAVE</ListItem>\n                            </List>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    isLoading: state.bills.createBill.status === \"LOADING\",\n    hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n    hasFailed: state.bills.createBill.status === \"FAIL\",\n    bill: state.bills.getBill.data,\n    med: state.medicals.medicalsOrderByName.data,\n    prices: state.prices.getPrices.data,\n    getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n    priceLists: state.prices.getPriceLists.data\n});\n\n\n\n\nconst mapDispatchToProps: IDispatchProps = {\n    createBill,\n    createBillReset,\n    getMedicals,\n    getBill,\n    getPrices,\n    getPriceLists\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}