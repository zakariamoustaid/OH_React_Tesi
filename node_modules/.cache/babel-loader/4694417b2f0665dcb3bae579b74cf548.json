{"ast":null,"code":"var _jsxFileName = \"/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/patientSummary/patientSummaryByDate/PatientSummaryByDate.tsx\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { dateComparator } from \"../../../../libraries/sortUtils/sortUtils\";\nimport { loadSummaryData } from \"../../../../state/summary/actions\";\nimport Table from \"../../table/Table\";\nimport { ORDER_BY_DATE_PAGE_SIZE } from \"../consts\";\nconst header = [\"date\", \"type\"];\nconst order = [\"date\"];\nconst label = {\n  date: \"Date\",\n  type: \"Typology\",\n  result: \"Result\",\n  note: \"Additional notes\"\n};\n\nconst PatientSummaryByDate = ({\n  loadSummaryData,\n  isLoading,\n  summaryData = []\n}) => {\n  const patientCode = useSelector(state => {\n    var _state$patients$selec;\n\n    return (_state$patients$selec = state.patients.selectedPatient.data) === null || _state$patients$selec === void 0 ? void 0 : _state$patients$selec.code;\n  });\n  useEffect(() => {\n    if (patientCode) loadSummaryData(patientCode);\n  }, [patientCode, loadSummaryData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientSummary_date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, !isLoading ? /*#__PURE__*/React.createElement(Table, {\n    rowData: summaryData,\n    compareRows: dateComparator,\n    tableHeader: header,\n    labelData: label,\n    columnsOrder: order,\n    rowsPerPage: ORDER_BY_DATE_PAGE_SIZE,\n    isCollapsabile: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(CircularProgress, {\n    style: {\n      marginLeft: \"50%\",\n      position: \"relative\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.summary.summaryApisCall.status === \"LOADING\",\n  hasSucceeded: state.summary.summaryApisCall.status === \"SUCCESS\",\n  hasFailed: state.summary.summaryApisCall.status === \"FAIL\",\n  summaryData: state.summary.summaryApisCall.data\n});\n\nconst mapDispatchToProps = {\n  loadSummaryData\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientSummaryByDate);","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/patientSummary/patientSummaryByDate/PatientSummaryByDate.tsx"],"names":["CircularProgress","React","useEffect","connect","useSelector","dateComparator","loadSummaryData","Table","ORDER_BY_DATE_PAGE_SIZE","header","order","label","date","type","result","note","PatientSummaryByDate","isLoading","summaryData","patientCode","state","patients","selectedPatient","data","code","marginLeft","position","mapStateToProps","summary","summaryApisCall","status","hasSucceeded","hasFailed","mapDispatchToProps"],"mappings":";AAAA,SAASA,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,KAAP,IAAmCC,SAAnC,QAAoD,OAApD;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,cAAT,QAA+B,2CAA/B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AAEA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,uBAAT,QAAwC,WAAxC;AAGA,MAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,MAAT,CAAf;AACA,MAAMC,KAAK,GAAG,CAAC,MAAD,CAAd;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,MADM;AAEZC,EAAAA,IAAI,EAAE,UAFM;AAGZC,EAAAA,MAAM,EAAE,QAHI;AAIZC,EAAAA,IAAI,EAAE;AAJM,CAAd;;AAOA,MAAMC,oBAA+C,GAAG,CAAC;AACvDV,EAAAA,eADuD;AAEvDW,EAAAA,SAFuD;AAGvDC,EAAAA,WAAW,GAAG;AAHyC,CAAD,KAIlD;AACJ,QAAMC,WAAW,GAAGf,WAAW,CAC5BgB,KAAD;AAAA;;AAAA,oCAAmBA,KAAK,CAACC,QAAN,CAAeC,eAAf,CAA+BC,IAAlD,0DAAmB,sBAAqCC,IAAxD;AAAA,GAD6B,CAA/B;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,WAAJ,EAAiBb,eAAe,CAACa,WAAD,CAAf;AAClB,GAFQ,EAEN,CAACA,WAAD,EAAcb,eAAd,CAFM,CAAT;AAIA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACW,SAAD,gBACC,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEC,WADX;AAEE,IAAA,WAAW,EAAEb,cAFf;AAGE,IAAA,WAAW,EAAEI,MAHf;AAIE,IAAA,SAAS,EAAEE,KAJb;AAKE,IAAA,YAAY,EAAED,KALhB;AAME,IAAA,WAAW,EAAEF,uBANf;AAOE,IAAA,cAAc,EAAE,IAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAWC,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AAAEiB,MAAAA,UAAU,EAAE,KAAd;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF,CADF;AAqBD,CAlCD;;AAoCA,MAAMC,eAAe,GAAIP,KAAD,KAAiC;AACvDH,EAAAA,SAAS,EAAEG,KAAK,CAACQ,OAAN,CAAcC,eAAd,CAA8BC,MAA9B,KAAyC,SADG;AAEvDC,EAAAA,YAAY,EAAEX,KAAK,CAACQ,OAAN,CAAcC,eAAd,CAA8BC,MAA9B,KAAyC,SAFA;AAGvDE,EAAAA,SAAS,EAAEZ,KAAK,CAACQ,OAAN,CAAcC,eAAd,CAA8BC,MAA9B,KAAyC,MAHG;AAIvDZ,EAAAA,WAAW,EAAEE,KAAK,CAACQ,OAAN,CAAcC,eAAd,CAA8BN;AAJY,CAAjC,CAAxB;;AAOA,MAAMU,kBAAkC,GAAG;AACzC3B,EAAAA;AADyC,CAA3C;AAIA,eAAeH,OAAO,CACpBwB,eADoB,EAEpBM,kBAFoB,CAAP,CAGbjB,oBAHa,CAAf","sourcesContent":["import { CircularProgress } from \"@material-ui/core\";\nimport React, { FunctionComponent, useEffect } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { dateComparator } from \"../../../../libraries/sortUtils/sortUtils\";\nimport { loadSummaryData } from \"../../../../state/summary/actions\";\nimport { IState } from \"../../../../types\";\nimport Table from \"../../table/Table\";\nimport { ORDER_BY_DATE_PAGE_SIZE } from \"../consts\";\nimport { IDispatchProps, IStateProps, TProps } from \"./../types\";\n\nconst header = [\"date\", \"type\"];\nconst order = [\"date\"];\nconst label = {\n  date: \"Date\",\n  type: \"Typology\",\n  result: \"Result\",\n  note: \"Additional notes\",\n};\n\nconst PatientSummaryByDate: FunctionComponent<TProps> = ({\n  loadSummaryData,\n  isLoading,\n  summaryData = [],\n}) => {\n  const patientCode = useSelector(\n    (state: IState) => state.patients.selectedPatient.data?.code\n  );\n\n  useEffect(() => {\n    if (patientCode) loadSummaryData(patientCode);\n  }, [patientCode, loadSummaryData]);\n\n  return (\n    <>\n      <div className=\"patientSummary_date\">\n        {!isLoading ? (\n          <Table\n            rowData={summaryData}\n            compareRows={dateComparator}\n            tableHeader={header}\n            labelData={label}\n            columnsOrder={order}\n            rowsPerPage={ORDER_BY_DATE_PAGE_SIZE}\n            isCollapsabile={true}\n          />\n        ) : (\n          <CircularProgress\n            style={{ marginLeft: \"50%\", position: \"relative\" }}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n  isLoading: state.summary.summaryApisCall.status === \"LOADING\",\n  hasSucceeded: state.summary.summaryApisCall.status === \"SUCCESS\",\n  hasFailed: state.summary.summaryApisCall.status === \"FAIL\",\n  summaryData: state.summary.summaryApisCall.data,\n});\n\nconst mapDispatchToProps: IDispatchProps = {\n  loadSummaryData,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PatientSummaryByDate);\n"]},"metadata":{},"sourceType":"module"}