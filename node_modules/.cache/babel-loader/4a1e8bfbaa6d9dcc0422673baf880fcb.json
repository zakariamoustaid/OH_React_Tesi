{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class BillControllerApi extends BaseAPI {\n  /**\n   * deleteBill\n   */\n  deleteBillUsingDELETE({\n    id\n  }, opts) {\n    throwIfNullOrUndefined(id, 'id', 'deleteBillUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills/{id}'.replace('{id}', encodeURI(id)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getBillUsingGET({\n    id\n  }, opts) {\n    throwIfNullOrUndefined(id, 'id', 'getBillUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills/{id}'.replace('{id}', encodeURI(id)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDistinctItemsUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills/items',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getItemsUsingGET({\n    billId\n  }, opts) {\n    throwIfNullOrUndefined(billId, 'billId', 'getItemsUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills/items/{bill_id}'.replace('{bill_id}', encodeURI(billId)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getPaymentsByBillIdUsingGET({\n    billId\n  }, opts) {\n    throwIfNullOrUndefined(billId, 'billId', 'getPaymentsByBillIdUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills/payments/{bill_id}'.replace('{bill_id}', encodeURI(billId)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getPendingBillsAffiliateUsingGET({\n    patientCode\n  }, opts) {\n    throwIfNullOrUndefined(patientCode, 'patientCode', 'getPendingBillsAffiliateUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {\n      // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n      'patient_code': patientCode\n    };\n    return this.request({\n      url: '/bills/pending/affiliate',\n      method: 'GET',\n      headers,\n      query\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getPendingBillsUsingGET({\n    patientCode\n  }, opts) {\n    throwIfNullOrUndefined(patientCode, 'patientCode', 'getPendingBillsUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {\n      // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n      'patient_code': patientCode\n    };\n    return this.request({\n      url: '/bills/pending',\n      method: 'GET',\n      headers,\n      query\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newBillUsingPOST({\n    newBillDto\n  }, opts) {\n    throwIfNullOrUndefined(newBillDto, 'newBillDto', 'newBillUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills',\n      method: 'POST',\n      headers,\n      body: newBillDto\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  searchBillsByPaymentsUsingPOST({\n    paymentsDTO\n  }, opts) {\n    throwIfNullOrUndefined(paymentsDTO, 'paymentsDTO', 'searchBillsByPaymentsUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills/search/by/payments',\n      method: 'POST',\n      headers,\n      body: paymentsDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  searchBillsPaymentsUsingGET({\n    datefrom,\n    dateto,\n    patientCode\n  }, opts) {\n    throwIfNullOrUndefined(datefrom, 'datefrom', 'searchBillsPaymentsUsingGET');\n    throwIfNullOrUndefined(dateto, 'dateto', 'searchBillsPaymentsUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {\n      // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n      'datefrom': datefrom.toISOString(),\n      'dateto': dateto.toISOString()\n    };\n\n    if (patientCode != null) {\n      query['patient_code'] = patientCode;\n    }\n\n    return this.request({\n      url: '/bills/payments',\n      method: 'GET',\n      headers,\n      query\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  searchBillsUsingGET({\n    datefrom,\n    dateto,\n    patientCode\n  }, opts) {\n    throwIfNullOrUndefined(datefrom, 'datefrom', 'searchBillsUsingGET');\n    throwIfNullOrUndefined(dateto, 'dateto', 'searchBillsUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {\n      // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n      'datefrom': datefrom.toISOString(),\n      'dateto': dateto.toISOString()\n    };\n\n    if (patientCode != null) {\n      query['patient_code'] = patientCode;\n    }\n\n    return this.request({\n      url: '/bills',\n      method: 'GET',\n      headers,\n      query\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  searchBillsUsingPOST({\n    datefrom,\n    dateto,\n    billItemDTO\n  }, opts) {\n    throwIfNullOrUndefined(datefrom, 'datefrom', 'searchBillsUsingPOST');\n    throwIfNullOrUndefined(dateto, 'dateto', 'searchBillsUsingPOST');\n    throwIfNullOrUndefined(billItemDTO, 'billItemDTO', 'searchBillsUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {\n      // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n      'datefrom': datefrom.toISOString(),\n      'dateto': dateto.toISOString()\n    };\n    return this.request({\n      url: '/bills/search/by/item',\n      method: 'POST',\n      headers,\n      query,\n      body: billItemDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateBillUsingPUT({\n    id,\n    odBillDto\n  }, opts) {\n    throwIfNullOrUndefined(id, 'id', 'updateBillUsingPUT');\n    throwIfNullOrUndefined(odBillDto, 'odBillDto', 'updateBillUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/bills/{id}'.replace('{id}', encodeURI(id)),\n      method: 'PUT',\n      headers,\n      body: odBillDto\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/generated/apis/BillControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","BillControllerApi","deleteBillUsingDELETE","id","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getBillUsingGET","getDistinctItemsUsingGET","getItemsUsingGET","billId","getPaymentsByBillIdUsingGET","getPendingBillsAffiliateUsingGET","patientCode","query","getPendingBillsUsingGET","newBillUsingPOST","newBillDto","body","searchBillsByPaymentsUsingPOST","paymentsDTO","searchBillsPaymentsUsingGET","datefrom","dateto","toISOString","searchBillsUsingGET","searchBillsUsingPOST","billItemDTO","updateBillUsingPUT","odBillDto"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    BillDTO,\n    BillItemsDTO,\n    BillPaymentsDTO,\n    FullBillDTO,\n    ResponseEntity,\n} from '../models';\n\nexport interface DeleteBillUsingDELETERequest {\n    id: number;\n}\n\nexport interface GetBillUsingGETRequest {\n    id: number;\n}\n\nexport interface GetItemsUsingGETRequest {\n    billId: number;\n}\n\nexport interface GetPaymentsByBillIdUsingGETRequest {\n    billId: number;\n}\n\nexport interface GetPendingBillsAffiliateUsingGETRequest {\n    patientCode: number;\n}\n\nexport interface GetPendingBillsUsingGETRequest {\n    patientCode: number;\n}\n\nexport interface NewBillUsingPOSTRequest {\n    newBillDto: FullBillDTO;\n}\n\nexport interface SearchBillsByPaymentsUsingPOSTRequest {\n    paymentsDTO: Array<BillPaymentsDTO>;\n}\n\nexport interface SearchBillsPaymentsUsingGETRequest {\n    datefrom: string;\n    dateto: string;\n    patientCode?: number;\n}\n\nexport interface SearchBillsUsingGETRequest {\n    datefrom: string;\n    dateto: string;\n    patientCode?: number;\n}\n\nexport interface SearchBillsUsingPOSTRequest {\n    datefrom: string;\n    dateto: string;\n    billItemDTO: BillItemsDTO;\n}\n\nexport interface UpdateBillUsingPUTRequest {\n    id: number;\n    odBillDto: FullBillDTO;\n}\n\n/**\n * no description\n */\nexport class BillControllerApi extends BaseAPI {\n\n    /**\n     * deleteBill\n     */\n    deleteBillUsingDELETE({ id }: DeleteBillUsingDELETERequest): Observable<ResponseEntity>\n    deleteBillUsingDELETE({ id }: DeleteBillUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    deleteBillUsingDELETE({ id }: DeleteBillUsingDELETERequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(id, 'id', 'deleteBillUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/bills/{id}'.replace('{id}', encodeURI(id)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getBill\n     */\n    getBillUsingGET({ id }: GetBillUsingGETRequest): Observable<BillDTO>\n    getBillUsingGET({ id }: GetBillUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<BillDTO>>\n    getBillUsingGET({ id }: GetBillUsingGETRequest, opts?: OperationOpts): Observable<BillDTO | RawAjaxResponse<BillDTO>> {\n        throwIfNullOrUndefined(id, 'id', 'getBillUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<BillDTO>({\n            url: '/bills/{id}'.replace('{id}', encodeURI(id)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDistinctItems\n     */\n    getDistinctItemsUsingGET(): Observable<Array<BillItemsDTO>>\n    getDistinctItemsUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillItemsDTO>>>\n    getDistinctItemsUsingGET(opts?: OperationOpts): Observable<Array<BillItemsDTO> | RawAjaxResponse<Array<BillItemsDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<BillItemsDTO>>({\n            url: '/bills/items',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getItems\n     */\n    getItemsUsingGET({ billId }: GetItemsUsingGETRequest): Observable<Array<BillItemsDTO>>\n    getItemsUsingGET({ billId }: GetItemsUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillItemsDTO>>>\n    getItemsUsingGET({ billId }: GetItemsUsingGETRequest, opts?: OperationOpts): Observable<Array<BillItemsDTO> | RawAjaxResponse<Array<BillItemsDTO>>> {\n        throwIfNullOrUndefined(billId, 'billId', 'getItemsUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<BillItemsDTO>>({\n            url: '/bills/items/{bill_id}'.replace('{bill_id}', encodeURI(billId)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getPaymentsByBillId\n     */\n    getPaymentsByBillIdUsingGET({ billId }: GetPaymentsByBillIdUsingGETRequest): Observable<Array<BillPaymentsDTO>>\n    getPaymentsByBillIdUsingGET({ billId }: GetPaymentsByBillIdUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillPaymentsDTO>>>\n    getPaymentsByBillIdUsingGET({ billId }: GetPaymentsByBillIdUsingGETRequest, opts?: OperationOpts): Observable<Array<BillPaymentsDTO> | RawAjaxResponse<Array<BillPaymentsDTO>>> {\n        throwIfNullOrUndefined(billId, 'billId', 'getPaymentsByBillIdUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<BillPaymentsDTO>>({\n            url: '/bills/payments/{bill_id}'.replace('{bill_id}', encodeURI(billId)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getPendingBillsAffiliate\n     */\n    getPendingBillsAffiliateUsingGET({ patientCode }: GetPendingBillsAffiliateUsingGETRequest): Observable<Array<BillDTO>>\n    getPendingBillsAffiliateUsingGET({ patientCode }: GetPendingBillsAffiliateUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillDTO>>>\n    getPendingBillsAffiliateUsingGET({ patientCode }: GetPendingBillsAffiliateUsingGETRequest, opts?: OperationOpts): Observable<Array<BillDTO> | RawAjaxResponse<Array<BillDTO>>> {\n        throwIfNullOrUndefined(patientCode, 'patientCode', 'getPendingBillsAffiliateUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n            'patient_code': patientCode,\n        };\n\n        return this.request<Array<BillDTO>>({\n            url: '/bills/pending/affiliate',\n            method: 'GET',\n            headers,\n            query,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getPendingBills\n     */\n    getPendingBillsUsingGET({ patientCode }: GetPendingBillsUsingGETRequest): Observable<Array<BillDTO>>\n    getPendingBillsUsingGET({ patientCode }: GetPendingBillsUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillDTO>>>\n    getPendingBillsUsingGET({ patientCode }: GetPendingBillsUsingGETRequest, opts?: OperationOpts): Observable<Array<BillDTO> | RawAjaxResponse<Array<BillDTO>>> {\n        throwIfNullOrUndefined(patientCode, 'patientCode', 'getPendingBillsUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n            'patient_code': patientCode,\n        };\n\n        return this.request<Array<BillDTO>>({\n            url: '/bills/pending',\n            method: 'GET',\n            headers,\n            query,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newBill\n     */\n    newBillUsingPOST({ newBillDto }: NewBillUsingPOSTRequest): Observable<FullBillDTO>\n    newBillUsingPOST({ newBillDto }: NewBillUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<FullBillDTO>>\n    newBillUsingPOST({ newBillDto }: NewBillUsingPOSTRequest, opts?: OperationOpts): Observable<FullBillDTO | RawAjaxResponse<FullBillDTO>> {\n        throwIfNullOrUndefined(newBillDto, 'newBillDto', 'newBillUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<FullBillDTO>({\n            url: '/bills',\n            method: 'POST',\n            headers,\n            body: newBillDto,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * searchBillsByPayments\n     */\n    searchBillsByPaymentsUsingPOST({ paymentsDTO }: SearchBillsByPaymentsUsingPOSTRequest): Observable<Array<BillDTO>>\n    searchBillsByPaymentsUsingPOST({ paymentsDTO }: SearchBillsByPaymentsUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillDTO>>>\n    searchBillsByPaymentsUsingPOST({ paymentsDTO }: SearchBillsByPaymentsUsingPOSTRequest, opts?: OperationOpts): Observable<Array<BillDTO> | RawAjaxResponse<Array<BillDTO>>> {\n        throwIfNullOrUndefined(paymentsDTO, 'paymentsDTO', 'searchBillsByPaymentsUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<BillDTO>>({\n            url: '/bills/search/by/payments',\n            method: 'POST',\n            headers,\n            body: paymentsDTO,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * searchBillsPayments\n     */\n    searchBillsPaymentsUsingGET({ datefrom, dateto, patientCode }: SearchBillsPaymentsUsingGETRequest): Observable<Array<BillPaymentsDTO>>\n    searchBillsPaymentsUsingGET({ datefrom, dateto, patientCode }: SearchBillsPaymentsUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillPaymentsDTO>>>\n    searchBillsPaymentsUsingGET({ datefrom, dateto, patientCode }: SearchBillsPaymentsUsingGETRequest, opts?: OperationOpts): Observable<Array<BillPaymentsDTO> | RawAjaxResponse<Array<BillPaymentsDTO>>> {\n        throwIfNullOrUndefined(datefrom, 'datefrom', 'searchBillsPaymentsUsingGET');\n        throwIfNullOrUndefined(dateto, 'dateto', 'searchBillsPaymentsUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n            'datefrom': (datefrom as any).toISOString(),\n            'dateto': (dateto as any).toISOString(),\n        };\n\n        if (patientCode != null) { query['patient_code'] = patientCode; }\n\n        return this.request<Array<BillPaymentsDTO>>({\n            url: '/bills/payments',\n            method: 'GET',\n            headers,\n            query,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * searchBills\n     */\n    searchBillsUsingGET({ datefrom, dateto, patientCode }: SearchBillsUsingGETRequest): Observable<Array<BillDTO>>\n    searchBillsUsingGET({ datefrom, dateto, patientCode }: SearchBillsUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillDTO>>>\n    searchBillsUsingGET({ datefrom, dateto, patientCode }: SearchBillsUsingGETRequest, opts?: OperationOpts): Observable<Array<BillDTO> | RawAjaxResponse<Array<BillDTO>>> {\n        throwIfNullOrUndefined(datefrom, 'datefrom', 'searchBillsUsingGET');\n        throwIfNullOrUndefined(dateto, 'dateto', 'searchBillsUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n            'datefrom': (datefrom as any).toISOString(),\n            'dateto': (dateto as any).toISOString(),\n        };\n\n        if (patientCode != null) { query['patient_code'] = patientCode; }\n\n        return this.request<Array<BillDTO>>({\n            url: '/bills',\n            method: 'GET',\n            headers,\n            query,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * searchBills\n     */\n    searchBillsUsingPOST({ datefrom, dateto, billItemDTO }: SearchBillsUsingPOSTRequest): Observable<Array<BillDTO>>\n    searchBillsUsingPOST({ datefrom, dateto, billItemDTO }: SearchBillsUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<BillDTO>>>\n    searchBillsUsingPOST({ datefrom, dateto, billItemDTO }: SearchBillsUsingPOSTRequest, opts?: OperationOpts): Observable<Array<BillDTO> | RawAjaxResponse<Array<BillDTO>>> {\n        throwIfNullOrUndefined(datefrom, 'datefrom', 'searchBillsUsingPOST');\n        throwIfNullOrUndefined(dateto, 'dateto', 'searchBillsUsingPOST');\n        throwIfNullOrUndefined(billItemDTO, 'billItemDTO', 'searchBillsUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n            'datefrom': (datefrom as any).toISOString(),\n            'dateto': (dateto as any).toISOString(),\n        };\n\n        return this.request<Array<BillDTO>>({\n            url: '/bills/search/by/item',\n            method: 'POST',\n            headers,\n            query,\n            body: billItemDTO,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateBill\n     */\n    updateBillUsingPUT({ id, odBillDto }: UpdateBillUsingPUTRequest): Observable<FullBillDTO>\n    updateBillUsingPUT({ id, odBillDto }: UpdateBillUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<FullBillDTO>>\n    updateBillUsingPUT({ id, odBillDto }: UpdateBillUsingPUTRequest, opts?: OperationOpts): Observable<FullBillDTO | RawAjaxResponse<FullBillDTO>> {\n        throwIfNullOrUndefined(id, 'id', 'updateBillUsingPUT');\n        throwIfNullOrUndefined(odBillDto, 'odBillDto', 'updateBillUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<FullBillDTO>({\n            url: '/bills/{id}'.replace('{id}', encodeURI(id)),\n            method: 'PUT',\n            headers,\n            body: odBillDto,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}