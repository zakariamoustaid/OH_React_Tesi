{"ast":null,"code":"import XHRAdapter from \"@pollyjs/adapter-xhr\";\nimport { Polly } from \"@pollyjs/core\";\nimport { BASE_PATH } from \"../generated/runtime\";\nimport { authRoutes } from \"./routes/auth\";\nimport { examinationsRoutes } from \"./routes/examinations\";\nimport { patientRoutes } from \"./routes/patients\";\nimport { userRoutes } from \"./routes/users\";\nimport { visitRoutes } from \"./routes/visits\";\nimport { opdRoutes } from \"./routes/opd\";\nimport { diseasesRoutes } from \"./routes/diseases\";\nimport { therapyRoutes } from \"./routes/therapies\";\nimport { medicalRoutes } from \"./routes/medicals\";\nimport { billRoutes } from \"./routes/bill\";\nimport { pricesRoutes } from \"./routes/prices\";\nexport function makeServer() {\n  Polly.register(XHRAdapter);\n  const polly = new Polly(\"api-mocking\", {\n    adapters: [\"xhr\"],\n    mode: \"passthrough\",\n    logging: true\n  });\n  const {\n    server\n  } = polly;\n  server.host(BASE_PATH, () => {\n    //authRoutes(server);\n    patientRoutes(server);\n    userRoutes(server);\n    visitRoutes(server);\n    examinationsRoutes(server);\n    therapyRoutes(server);\n    opdRoutes(server);\n    diseasesRoutes(server); //pricesRoutes(server);\n    //billRoutes(server);\n    //medicalRoutes(server);\n  });\n  return server;\n}","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/mockServer/server.js"],"names":["XHRAdapter","Polly","BASE_PATH","authRoutes","examinationsRoutes","patientRoutes","userRoutes","visitRoutes","opdRoutes","diseasesRoutes","therapyRoutes","medicalRoutes","billRoutes","pricesRoutes","makeServer","register","polly","adapters","mode","logging","server","host"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,sBAAvB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3Bb,EAAAA,KAAK,CAACc,QAAN,CAAef,UAAf;AACA,QAAMgB,KAAK,GAAG,IAAIf,KAAJ,CAAU,aAAV,EAAyB;AACrCgB,IAAAA,QAAQ,EAAE,CAAC,KAAD,CAD2B;AAErCC,IAAAA,IAAI,EAAE,aAF+B;AAGrCC,IAAAA,OAAO,EAAE;AAH4B,GAAzB,CAAd;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,KAAnB;AAEAI,EAAAA,MAAM,CAACC,IAAP,CAAYnB,SAAZ,EAAuB,MAAM;AAC3B;AACAG,IAAAA,aAAa,CAACe,MAAD,CAAb;AACAd,IAAAA,UAAU,CAACc,MAAD,CAAV;AACAb,IAAAA,WAAW,CAACa,MAAD,CAAX;AACAhB,IAAAA,kBAAkB,CAACgB,MAAD,CAAlB;AACAV,IAAAA,aAAa,CAACU,MAAD,CAAb;AACAZ,IAAAA,SAAS,CAACY,MAAD,CAAT;AACAX,IAAAA,cAAc,CAACW,MAAD,CAAd,CAR2B,CAS3B;AACA;AACA;AACD,GAZD;AAaA,SAAOA,MAAP;AACD","sourcesContent":["import XHRAdapter from \"@pollyjs/adapter-xhr\";\nimport { Polly } from \"@pollyjs/core\";\nimport { BASE_PATH } from \"../generated/runtime\";\nimport { authRoutes } from \"./routes/auth\";\nimport { examinationsRoutes } from \"./routes/examinations\";\nimport { patientRoutes } from \"./routes/patients\";\nimport { userRoutes } from \"./routes/users\";\nimport { visitRoutes } from \"./routes/visits\";\nimport { opdRoutes } from \"./routes/opd\";\nimport { diseasesRoutes } from \"./routes/diseases\";\nimport { therapyRoutes } from \"./routes/therapies\";\nimport { medicalRoutes } from \"./routes/medicals\";\nimport { billRoutes } from \"./routes/bill\";\nimport { pricesRoutes } from \"./routes/prices\"\n\nexport function makeServer() {\n  Polly.register(XHRAdapter);\n  const polly = new Polly(\"api-mocking\", {\n    adapters: [\"xhr\"],\n    mode: \"passthrough\",\n    logging: true,\n  });\n  const { server } = polly;\n\n  server.host(BASE_PATH, () => {\n    //authRoutes(server);\n    patientRoutes(server);\n    userRoutes(server);\n    visitRoutes(server);\n    examinationsRoutes(server);\n    therapyRoutes(server);\n    opdRoutes(server);\n    diseasesRoutes(server);\n    //pricesRoutes(server);\n    //billRoutes(server);\n    //medicalRoutes(server);\n  });\n  return server;\n}\n"]},"metadata":{},"sourceType":"module"}