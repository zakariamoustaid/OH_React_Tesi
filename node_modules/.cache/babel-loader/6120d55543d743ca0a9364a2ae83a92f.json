{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport \"./styles.scss\";\nimport { createBill, createBillReset, getBill } from \"../../../state/bills/actions\";\nimport { getPrices, getPriceLists } from \"../../../state/prices/actions\";\nimport { getMedicals } from \"../../../state/medicals/actions\";\nimport DrawerActivity from \"./DrawerActivity\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute,\n  med,\n  getMedicals,\n  getMedStat,\n  bill,\n  getBill,\n  prices,\n  getPrices,\n  priceLists,\n  getPriceLists,\n  items,\n  setItems\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n  useEffect(() => {\n    getMedicals();\n  }, []);\n  useEffect(() => {\n    getPrices();\n  }, []); //  //  //  //  //\n  // GET PATIENT  //\n  //  //  //  //  //\n\n  const [patient, setPatient] = useState();\n  useEffect(() => {\n    const url = \"https://www.open-hospital.org/oh11-api/patients?page=1&size=1\";\n    const auth = \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJhZG1pbiIsImV4cCI6MTYyOTc1ODQ4NH0.BLAxHfBxyOJ3CI9gnfGbm7UshTVUzZvEA8WFrqh_ZN4jHCDB05d4Ypy1rVML19_JLsXf-kNUTA5G0L7Ts0V_lQ\";\n    const acc = \"application/json\";\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Accept: acc,\n            Authorization: auth\n          }\n        });\n        const json = await response.json();\n        setPatient(json[0]);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const patient_data = (patient === null || patient === void 0 ? void 0 : patient.firstName) + \" \" + (patient === null || patient === void 0 ? void 0 : patient.secondName); //  //  //\n  //  END //\n  //  //  //\n  //\n  //Gestione Dialog\n  //\n\n  /*\n  const [open_med, setOpen_med] = React.useState(false);\n   const handleClickOpen_med = () => {\n      setOpen_med(true);\n  };\n   const handleClose_med = () => {\n      setOpen_med(false);\n  };\n   const [open_ope, setOpen_ope] = React.useState(false);\n   const handleClickOpen_ope = () => {\n      setOpen_ope(true);\n  };\n   const handleClose_ope = () => {\n      setOpen_ope(false);\n  };\n   const [open_exa, setOpen_exa] = React.useState(false);\n   const handleClickOpen_exa = () => {\n      setOpen_exa(true);\n  };\n   const handleClose_exa = () => {\n      setOpen_exa(false);\n  };\n   const [open_oth, setOpen_oth] = React.useState(false);\n   const handleClickOpen_oth = () => {\n      setOpen_oth(true);\n  };\n   const handleClose_oth = () => {\n      setOpen_oth(false);\n  };\n   const [open_cust, setOpen_cust] = React.useState(false);\n   const handleClickOpen_cust = () => {\n      setOpen_cust(true);\n  };\n   const handleClose_cust = () => {\n      setOpen_cust(false);\n  };\n  //\n  //\n   //\n  //test useState\n  //\n   const [selectionModel, setSelectionModel] = React.useState<GridSelectionModel>([]);\n   const [items, setItems] = React.useState<Item[]>([]);\n  const [medicals, setMedicals] = React.useState<GridSelectionModel>([]);\n  const [operations, setOperations] = React.useState<GridSelectionModel>([]);\n  const [exams, setExams] = React.useState<GridSelectionModel>([]);\n  const [others, setOthers] = React.useState<GridSelectionModel>([]);\n  const [custom, setCustom] = React.useState<Custom>();\n   const take_items = () => {\n       medicals?.forEach(function (i, j) {\n          if ((items.some(it => it.id === i)) === true) {\n              items?.forEach(function (x) {\n                  if (x.id === i)\n                      console.log('ciao');\n              })\n          }\n          else {\n              //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n              setItems(pre =>\n                  [...pre,\n                  {\n                      \"hashCode\": prices?.find(p => p.id == i)?.id,\n                      \"id\": 1,\n                      \"price\": true,\n                      \"billId\": 1,\n                      \"priceId\": prices?.find(p => p.id == i)?.id,\n                      \"itemDescription\": prices?.find(p => p.id == i)?.list?.description,\n                      \"itemAmount\": 1,\n                      \"itemQuantity\": 1,\n                      \"itemDisplayCode\": \"1\",\n                      \"itemId\": prices?.find(p => p.id == i)?.id,\n                  }]);\n          }\n      })\n  }\n  /*\n  const get_items_o = () => {\n      operations?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n  const get_items_e = () => {\n      exams?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n  const get_items_ot = () => {\n      others?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n   const get_items_cust = () => {\n      const i: GridRowId = 2;\n      setItems(prevItems => [...prevItems, i]);\n  }\n   const delete_item = (e: GridRowId) => {\n      console.log(e);\n      setItems(items.filter(item => e !== item));\n  }\n  */\n\n  /*\n      const get_input = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n          const a = e.target.id as string;\n          console.log(a);\n  \n          //setCustom({id:1, description:'ciao'});\n      }\n  \n      const get_cust = (e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          const desc = (e.currentTarget.elements[0] as HTMLInputElement).value as string;\n          const amo = (e.currentTarget.elements[1] as HTMLInputElement).value as string;\n          setCustom({ id: 1, description: desc, amount: amo });\n          console.log(custom);\n  \n      }\n  \n      const test = (e: React.FormEvent<HTMLFormElement>) => {\n          e.preventDefault();\n          console.log((e.currentTarget.elements[4] as HTMLInputElement)?.value);\n      }\n      //\n      //\n  \n      //  //  //  //  //  //\n      //  gestione select //\n      //  //  //  //  //  //\n      const [quantity, setQuantity] = React.useState('1');\n      const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\n          setQuantity(event.target.value as string);\n      };\n  \n  \n      //  //  //  //  //  //\n      // Gestione Grid MED//\n      //  //  //  //  //  //\n      const columns_med = [\n          { field: 'id', headerName: 'ID', width: 90 },\n          {\n              field: 'group',\n              headerName: 'Group',\n              width: 125,\n              editable: true,\n          },\n          {\n              field: 'description',\n              headerName: 'Description',\n              width: 170,\n              editable: true,\n          },\n      ];\n  \n      type row = [{\n          id: number | undefined,\n          group: string,\n          description: string | undefined\n      }];\n  \n      let rows_med: row = [{ id: 0, group: '', description: '' }];\n  \n      prices?.forEach(function (m, i) {\n          if (m.group === \"MED\")\n              rows_med.push({ id: m.id, group: m.group, description: m.list?.description })\n      })\n      rows_med?.shift();\n  \n      //  //  //  //  //  //\n      //  GESTIONE ROWS   //\n      //  //  //  //  //  //\n      const [row, setRow] = useState('');\n      //\n      //\n  \n      //  //  //  //  //  //\n      // Gestione Grid OPE//\n      //  //  //  //  //  //\n      const columns_ope: GridColDef[] = [\n          { field: 'id', headerName: 'ID', width: 90 },\n          {\n              field: 'group',\n              headerName: 'Group',\n              width: 125,\n              editable: true,\n          },\n          {\n              field: 'description',\n              headerName: 'Description',\n              width: 170,\n              editable: true,\n          },\n      ];\n  \n      const rows_ope = [{}];\n  \n      prices?.forEach(function (m, i) {\n          if (m.group === \"OPE\")\n              rows_ope.push({ id: m.id, group: m.group, description: m.list?.description })\n      })\n      rows_ope.shift();\n      //\n      //\n  \n      //  //  //  //  //  //\n      // Gestione Grid EXA//\n      //  //  //  //  //  //\n      const columns_exa: GridColDef[] = [\n          { field: 'id', headerName: 'ID', width: 90 },\n          {\n              field: 'group',\n              headerName: 'Group',\n              width: 125,\n              editable: true,\n          },\n          {\n              field: 'description',\n              headerName: 'Description',\n              width: 170,\n              editable: true,\n          },\n      ];\n  \n      const rows_exa = [{}];\n  \n      prices?.forEach(function (m, i) {\n          if (m.group === \"EXA\")\n              rows_exa.push({ id: m.id, group: m.group, description: m.list?.description })\n      })\n      rows_exa.shift();\n      //\n      //\n  \n      //  //  //  //  //  //\n      // Gestione Grid OTH//\n      //  //  //  //  //  //\n      const columns_oth: GridColDef[] = [\n          { field: 'id', headerName: 'ID', width: 90 },\n          {\n              field: 'group',\n              headerName: 'Group',\n              width: 125,\n              editable: true,\n          },\n          {\n              field: 'description',\n              headerName: 'Description',\n              width: 170,\n              editable: true,\n          },\n      ];\n  \n      const rows_oth = [{}];\n  \n      prices?.forEach(function (m, i) {\n          if (m.group === \"OTH\")\n              rows_oth.push({ id: m.id, group: m.group, description: m.list?.description })\n      })\n      rows_oth.shift();\n      //\n      //\n  \n  \n  \n      //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n      /*const getPat = () => {\n          fetch(\"https://www.open-hospital.org/oh-api/patients?page=1&size=1\", {\n              headers: {\n                  \"Accept\": \"application/json\",\n                  \"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJhZG1pbiIsImV4cCI6MTYyOTc1Mzg1Mn0.lvhqMqq1a9fNtHM_s4pJhU9hH9sTyPKvVNvzPhSIOGfi3oLD4jCJjCNh1e66ZmaIDzA5qVAYEZbc4vFcnG-Egw\",\n              }\n          }).then(res => res.json()).then(data => setPatient(data));\n      }\n          /*const getPat = () => {\n              //get a patient\n          }*/\n\n  const test = () => {\n    console.log(items);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 25\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Date_Pat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextData, {\n    className: \"bill_Date\",\n    id: \"date\",\n    label: \"Data\",\n    type: \"date\",\n    defaultValue: \"\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"bill_SelectPat\",\n    onClick: test,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 41\n    }\n  }, \"find Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_InputPat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 71\n    }\n  }, \"Patient\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 93\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"patient_input\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 106\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 53\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 53\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 53\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 53\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 45\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DrawerActivity, {\n    prices: prices,\n    items: items,\n    setItems: setItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 17\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\",\n  bill: state.bills.getBill.data,\n  med: state.medicals.medicalsOrderByName.data,\n  prices: state.prices.getPrices.data,\n  getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n  priceLists: state.prices.getPriceLists.data\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset,\n  getMedicals,\n  getBill,\n  getPrices,\n  getPriceLists\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useState","AppHeader","Footer","Button","Table","TextData","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useTranslation","connect","createBill","createBillReset","getBill","getPrices","getPriceLists","getMedicals","DrawerActivity","NewBillActivity","userCredentials","isLoading","hasSucceeded","hasFailed","billHomeRoute","med","getMedStat","bill","prices","priceLists","items","setItems","t","breadcrumbMap","patient","setPatient","url","auth","acc","fetchData","response","fetch","method","headers","Accept","Authorization","json","error","console","log","patient_data","firstName","secondName","test","shrink","mapStateToProps","state","main","authentication","data","bills","status","medicals","medicalsOrderByName","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Children, FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport get from \"lodash.get\";\nimport has from \"lodash.has\";\nimport set from \"lodash.set\";\nimport axios from \"axios\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { IState } from \"../../../types\";\nimport \"./styles.scss\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { DataGrid, GridSelectionModel, GridColDef, GridRowId, GridRowData } from '@material-ui/data-grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { PatientDTO } from \"../../../generated\";\nimport {\n    createBill,\n    createBillReset,\n    getBill,\n} from \"../../../state/bills/actions\";\nimport {\n    getPrices,\n    getPriceLists\n} from \"../../../state/prices/actions\"\nimport {\n    getMedicals,\n} from \"../../../state/medicals/actions\"\nimport {\n    IDispatchProps,\n    IStateProps,\n    TProps,\n    Item,\n    PricesState\n} from \"./types\";\nimport patientDTO from \"../../../mockServer/fixtures/patientDTO\";\nimport MedicalDrawerActivity from \"./DrawerActivity\";\nimport DrawerActivity from \"./DrawerActivity\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n    med,\n    getMedicals,\n    getMedStat,\n    bill,\n    getBill,\n    prices,\n    getPrices,\n    priceLists,\n    getPriceLists,\n    items,\n    setItems\n}) => {\n\n    const { t } = useTranslation();\n    type Custom = {\n        id: number,\n        description: string,\n        amount: string,\n    }\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n    useEffect(() => {\n        getMedicals();\n    }, []);\n\n    useEffect(() => {\n        getPrices();\n    }, []);\n\n    //  //  //  //  //\n    // GET PATIENT  //\n    //  //  //  //  //\n    type Patient = {\n        \"code\": number | undefined,\n        \"firstName\": string | undefined,\n        \"secondName\": string | undefined,\n        \"name\": string | undefined,\n        \"birthDate\": string | undefined,\n        \"age\": number | undefined,\n        \"agetype\": string | undefined,\n        \"sex\": string | undefined,\n        \"address\": string | undefined,\n        \"city\": string | undefined,\n        \"nextKin\": string | undefined,\n        \"telephone\": string | undefined,\n        \"note\": string | undefined,\n        \"mother_name\": string | undefined,\n        \"mother\": string | undefined,\n        \"father_name\": string | undefined,\n        \"father\": string | undefined,\n        \"bloodType\": string | undefined,\n        \"hasInsurance\": string | undefined,\n        \"parentTogether\": string | undefined,\n        \"taxCode\": string | undefined,\n        \"lock\": number | undefined,\n        \"blobPhoto\": string | undefined,\n        \"hashCode\": number | undefined,\n    }\n\n\n    const [patient, setPatient] = useState<Patient>();\n\n    useEffect(() => {\n        const url = \"https://www.open-hospital.org/oh11-api/patients?page=1&size=1\";\n        const auth = \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJhZG1pbiIsImV4cCI6MTYyOTc1ODQ4NH0.BLAxHfBxyOJ3CI9gnfGbm7UshTVUzZvEA8WFrqh_ZN4jHCDB05d4Ypy1rVML19_JLsXf-kNUTA5G0L7Ts0V_lQ\";\n        const acc = \"application/json\";\n\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url, { method:'GET', headers: { Accept: acc, Authorization: auth } });\n                const json = await response.json();\n                setPatient(json[0])\n\n            } catch (error) {\n                console.log(\"error\", error);\n            }\n        };\n        fetchData();\n    }, []);\n\n\n\n    const patient_data = patient?.firstName + \" \" + patient?.secondName;\n\n\n    //  //  //\n    //  END //\n    //  //  //\n\n\n    //\n    //Gestione Dialog\n    //\n    /*\n    const [open_med, setOpen_med] = React.useState(false);\n\n    const handleClickOpen_med = () => {\n        setOpen_med(true);\n    };\n\n    const handleClose_med = () => {\n        setOpen_med(false);\n    };\n\n    const [open_ope, setOpen_ope] = React.useState(false);\n\n    const handleClickOpen_ope = () => {\n        setOpen_ope(true);\n    };\n\n    const handleClose_ope = () => {\n        setOpen_ope(false);\n    };\n\n    const [open_exa, setOpen_exa] = React.useState(false);\n\n    const handleClickOpen_exa = () => {\n        setOpen_exa(true);\n    };\n\n    const handleClose_exa = () => {\n        setOpen_exa(false);\n    };\n\n    const [open_oth, setOpen_oth] = React.useState(false);\n\n    const handleClickOpen_oth = () => {\n        setOpen_oth(true);\n    };\n\n    const handleClose_oth = () => {\n        setOpen_oth(false);\n    };\n\n    const [open_cust, setOpen_cust] = React.useState(false);\n\n    const handleClickOpen_cust = () => {\n        setOpen_cust(true);\n    };\n\n    const handleClose_cust = () => {\n        setOpen_cust(false);\n    };\n    //\n    //\n\n    //\n    //test useState\n    //\n\n    const [selectionModel, setSelectionModel] = React.useState<GridSelectionModel>([]);\n\n    const [items, setItems] = React.useState<Item[]>([]);\n    const [medicals, setMedicals] = React.useState<GridSelectionModel>([]);\n    const [operations, setOperations] = React.useState<GridSelectionModel>([]);\n    const [exams, setExams] = React.useState<GridSelectionModel>([]);\n    const [others, setOthers] = React.useState<GridSelectionModel>([]);\n    const [custom, setCustom] = React.useState<Custom>();\n\n    const take_items = () => {\n\n        medicals?.forEach(function (i, j) {\n            if ((items.some(it => it.id === i)) === true) {\n                items?.forEach(function (x) {\n                    if (x.id === i)\n                        console.log('ciao');\n                })\n            }\n            else {\n                //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n                setItems(pre =>\n                    [...pre,\n                    {\n                        \"hashCode\": prices?.find(p => p.id == i)?.id,\n                        \"id\": 1,\n                        \"price\": true,\n                        \"billId\": 1,\n                        \"priceId\": prices?.find(p => p.id == i)?.id,\n                        \"itemDescription\": prices?.find(p => p.id == i)?.list?.description,\n                        \"itemAmount\": 1,\n                        \"itemQuantity\": 1,\n                        \"itemDisplayCode\": \"1\",\n                        \"itemId\": prices?.find(p => p.id == i)?.id,\n                    }]);\n            }\n        })\n    }\n    /*\n    const get_items_o = () => {\n        operations?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_e = () => {\n        exams?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_ot = () => {\n        others?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n\n    const get_items_cust = () => {\n        const i: GridRowId = 2;\n        setItems(prevItems => [...prevItems, i]);\n    }\n\n    const delete_item = (e: GridRowId) => {\n        console.log(e);\n        setItems(items.filter(item => e !== item));\n    }\n\n\n*/\n/*\n    const get_input = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const a = e.target.id as string;\n        console.log(a);\n\n        //setCustom({id:1, description:'ciao'});\n    }\n\n    const get_cust = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const desc = (e.currentTarget.elements[0] as HTMLInputElement).value as string;\n        const amo = (e.currentTarget.elements[1] as HTMLInputElement).value as string;\n        setCustom({ id: 1, description: desc, amount: amo });\n        console.log(custom);\n\n    }\n\n    const test = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        console.log((e.currentTarget.elements[4] as HTMLInputElement)?.value);\n    }\n    //\n    //\n\n    //  //  //  //  //  //\n    //  gestione select //\n    //  //  //  //  //  //\n    const [quantity, setQuantity] = React.useState('1');\n    const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setQuantity(event.target.value as string);\n    };\n\n\n    //  //  //  //  //  //\n    // Gestione Grid MED//\n    //  //  //  //  //  //\n    const columns_med = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    type row = [{\n        id: number | undefined,\n        group: string,\n        description: string | undefined\n    }];\n\n    let rows_med: row = [{ id: 0, group: '', description: '' }];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"MED\")\n            rows_med.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift();\n\n    //  //  //  //  //  //\n    //  GESTIONE ROWS   //\n    //  //  //  //  //  //\n    const [row, setRow] = useState('');\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OPE//\n    //  //  //  //  //  //\n    const columns_ope: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_ope = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OPE\")\n            rows_ope.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_ope.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid EXA//\n    //  //  //  //  //  //\n    const columns_exa: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_exa = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"EXA\")\n            rows_exa.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_exa.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OTH//\n    //  //  //  //  //  //\n    const columns_oth: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_oth = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OTH\")\n            rows_oth.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_oth.shift();\n    //\n    //\n\n\n\n    //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n    /*const getPat = () => {\n        fetch(\"https://www.open-hospital.org/oh-api/patients?page=1&size=1\", {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJhZG1pbiIsImV4cCI6MTYyOTc1Mzg1Mn0.lvhqMqq1a9fNtHM_s4pJhU9hH9sTyPKvVNvzPhSIOGfi3oLD4jCJjCNh1e66ZmaIDzA5qVAYEZbc4vFcnG-Egw\",\n            }\n        }).then(res => res.json()).then(data => setPatient(data));\n    }\n        /*const getPat = () => {\n            //get a patient\n        }*/\n\n        const test = () =>\n        {\n            console.log(items)\n        }\n\n        return (\n            <div className=\"new_Bill\">\n                <AppHeader\n                    userCredentials={userCredentials}\n                    breadcrumbMap={breadcrumbMap}\n                />\n                <div className=\"newBill__background\">\n                    <div className=\"newBill__content\">\n                        <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                        <div className=\"newBill__panel\">\n                            <form>\n                                <div className=\"newBill_Head\">\n                                    <div className=\"newBill_Date_Pat\">\n                                        <TextData\n                                            className='bill_Date'\n                                            id=\"date\"\n                                            label=\"Data\"\n                                            type=\"date\"\n                                            defaultValue=\"\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                        />\n                                        <Button type=\"submit\" className='bill_SelectPat' onClick={test} variant=\"outlined\">find Patient</Button>\n                                    </div>\n                                    <div className=\"newBill_InputPat\"><label>Patient</label><span></span><input className=\"patient_input\" disabled ></input></div>\n                                </div>\n                                <div className=\"newBill_Rows\">\n                                    <TableContainer component={Paper}>\n                                        <Table size=\"small\" aria-label=\"a dense table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Description</TableCell>\n                                                    <TableCell>Amount</TableCell>\n                                                    <TableCell>Qty</TableCell>\n                                                    <TableCell>Delete</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n  \n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </div>\n                            </form>\n                            <div className=\"newBill_Drawer\">\n                                <DrawerActivity prices={prices} items={items} setItems={setItems} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n\n\n    const mapStateToProps = (state: IState): IStateProps => ({\n        userCredentials: state.main.authentication.data,\n        isLoading: state.bills.createBill.status === \"LOADING\",\n        hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n        hasFailed: state.bills.createBill.status === \"FAIL\",\n        bill: state.bills.getBill.data,\n        med: state.medicals.medicalsOrderByName.data,\n        prices: state.prices.getPrices.data,\n        getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n        priceLists: state.prices.getPriceLists.data\n    });\n\n\n\n\n    const mapDispatchToProps: IDispatchProps = {\n        createBill,\n        createBillReset,\n        getMedicals,\n        getBill,\n        getPrices,\n        getPriceLists\n    };\n\n    export default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}