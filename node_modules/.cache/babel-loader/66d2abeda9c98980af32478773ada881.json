{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { makeServer } from \"./mockServer/server\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport examinations from \"./state/examinations/reducer\";\nimport main from \"./state/main/reducer\";\nimport bills from \"./state/bills/reducer\";\nimport patients from \"./state/patients/reducer\";\nimport therapies from \"./state/therapies/reducer\";\nimport summary from \"./state/summary/reducer\";\nimport opds from \"./state/opds/reducer\";\nimport diseases from \"./state/diseases/reducer\";\nimport medicals from \"./state/medicals/reducer\";\n\nif (process.env.NODE_ENV === \"development\") {\n  makeServer();\n}\n\nconst reducer = combineReducers({\n  main,\n  bills,\n  patients,\n  examinations,\n  therapies,\n  summary,\n  opds,\n  diseases,\n  medicals\n});\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunkMiddleware)));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }\n}))), document.getElementById(\"root\")); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/index.tsx"],"names":["React","ReactDOM","Provider","applyMiddleware","combineReducers","createStore","composeWithDevTools","thunkMiddleware","App","makeServer","serviceWorker","examinations","main","bills","patients","therapies","summary","opds","diseases","medicals","process","env","NODE_ENV","reducer","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAGA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1Cb,EAAAA,UAAU;AACX;;AAED,MAAMc,OAAO,GAAGnB,eAAe,CAAS;AACtCQ,EAAAA,IADsC;AAEtCC,EAAAA,KAFsC;AAGtCC,EAAAA,QAHsC;AAItCH,EAAAA,YAJsC;AAKtCI,EAAAA,SALsC;AAMtCC,EAAAA,OANsC;AAOtCC,EAAAA,IAPsC;AAQtCC,EAAAA,QARsC;AAStCC,EAAAA;AATsC,CAAT,CAA/B;AAWA,MAAMK,KAAK,GAAGnB,WAAW,CACvBkB,OADuB,EAEvBjB,mBAAmB,CAACH,eAAe,CAACI,eAAD,CAAhB,CAFI,CAAzB;AAKAN,QAAQ,CAACwB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunkMiddleware from \"redux-thunk\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport { makeServer } from \"./mockServer/server\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport examinations from \"./state/examinations/reducer\";\nimport main from \"./state/main/reducer\";\nimport bills from \"./state/bills/reducer\";\nimport patients from \"./state/patients/reducer\";\nimport therapies from \"./state/therapies/reducer\";\nimport summary from \"./state/summary/reducer\";\nimport opds from \"./state/opds/reducer\";\nimport diseases from \"./state/diseases/reducer\";\nimport medicals from \"./state/medicals/reducer\";\nimport { IState } from \"./types\";\n\nif (process.env.NODE_ENV === \"development\") {\n  makeServer();\n}\n\nconst reducer = combineReducers<IState>({\n  main,\n  bills,\n  patients,\n  examinations,\n  therapies,\n  summary,\n  opds,\n  diseases,\n  medicals,\n});\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}