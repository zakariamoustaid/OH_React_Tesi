{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class DiseaseTypeControllerApi extends BaseAPI {\n  /**\n   * deleteDiseaseType\n   */\n  deleteDiseaseTypeUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteDiseaseTypeUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseasetypes/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getAllDiseaseTypesUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseasetypes',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newDiseaseTypeUsingPOST({\n    diseaseTypeDTO\n  }, opts) {\n    throwIfNullOrUndefined(diseaseTypeDTO, 'diseaseTypeDTO', 'newDiseaseTypeUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseasetypes',\n      method: 'POST',\n      headers,\n      body: diseaseTypeDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateDiseaseTypeUsingPUT({\n    diseaseTypeDTO\n  }, opts) {\n    throwIfNullOrUndefined(diseaseTypeDTO, 'diseaseTypeDTO', 'updateDiseaseTypeUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseasetypes',\n      method: 'PUT',\n      headers,\n      body: diseaseTypeDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/generated/apis/DiseaseTypeControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","DiseaseTypeControllerApi","deleteDiseaseTypeUsingDELETE","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getAllDiseaseTypesUsingGET","newDiseaseTypeUsingPOST","diseaseTypeDTO","body","updateDiseaseTypeUsingPUT"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,OAAT,EAA+BC,sBAA/B,EAAuDC,SAAvD,QAAwG,YAAxG;;AAiBA;AACA;AACA;AACA,OAAO,MAAMC,wBAAN,SAAuCH,OAAvC,CAA+C;AAElD;AACJ;AACA;AAGII,EAAAA,4BAA4B,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAgDC,IAAhD,EAA8J;AACtLL,IAAAA,sBAAsB,CAACI,IAAD,EAAO,MAAP,EAAe,8BAAf,CAAtB;AAEA,UAAME,OAAoB,GAAG,EACzB,IAAI,KAAKC,aAAL,CAAmBC,MAAnB,IAA6B;AAAE,yBAAiB,KAAKD,aAAL,CAAmBC,MAAnB,CAA0B,eAA1B;AAAnB,OAAjC,CADyB,CAC0E;;AAD1E,KAA7B;AAIA,WAAO,KAAKC,OAAL,CAA0C;AAC7CC,MAAAA,GAAG,EAAE,uBAAuBC,OAAvB,CAA+B,QAA/B,EAAyCV,SAAS,CAACG,IAAD,CAAlD,CADwC;AAE7CQ,MAAAA,MAAM,EAAE,QAFqC;AAG7CN,MAAAA;AAH6C,KAA1C,EAIJD,IAJI,aAIJA,IAJI,uBAIJA,IAAI,CAAEQ,YAJF,CAAP;AAKH;;AAODC,EAAAA,0BAA0B,CAACT,IAAD,EAAmG;AACzH,UAAMC,OAAoB,GAAG,EACzB,IAAI,KAAKC,aAAL,CAAmBC,MAAnB,IAA6B;AAAE,yBAAiB,KAAKD,aAAL,CAAmBC,MAAnB,CAA0B,eAA1B;AAAnB,OAAjC,CADyB,CAC0E;;AAD1E,KAA7B;AAIA,WAAO,KAAKC,OAAL,CAAoC;AACvCC,MAAAA,GAAG,EAAE,eADkC;AAEvCE,MAAAA,MAAM,EAAE,KAF+B;AAGvCN,MAAAA;AAHuC,KAApC,EAIJD,IAJI,aAIJA,IAJI,uBAIJA,IAAI,CAAEQ,YAJF,CAAP;AAKH;;AAODE,EAAAA,uBAAuB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAqDX,IAArD,EAAyI;AAC5JL,IAAAA,sBAAsB,CAACgB,cAAD,EAAiB,gBAAjB,EAAmC,yBAAnC,CAAtB;AAEA,UAAMV,OAAoB,GAAG;AACzB,sBAAgB,kBADS;AAEzB,UAAI,KAAKC,aAAL,CAAmBC,MAAnB,IAA6B;AAAE,yBAAiB,KAAKD,aAAL,CAAmBC,MAAnB,CAA0B,eAA1B;AAAnB,OAAjC,CAFyB,CAE0E;;AAF1E,KAA7B;AAKA,WAAO,KAAKC,OAAL,CAA6B;AAChCC,MAAAA,GAAG,EAAE,eAD2B;AAEhCE,MAAAA,MAAM,EAAE,MAFwB;AAGhCN,MAAAA,OAHgC;AAIhCW,MAAAA,IAAI,EAAED;AAJ0B,KAA7B,EAKJX,IALI,aAKJA,IALI,uBAKJA,IAAI,CAAEQ,YALF,CAAP;AAMH;;AAODK,EAAAA,yBAAyB,CAAC;AAAEF,IAAAA;AAAF,GAAD,EAAuDX,IAAvD,EAA2I;AAChKL,IAAAA,sBAAsB,CAACgB,cAAD,EAAiB,gBAAjB,EAAmC,2BAAnC,CAAtB;AAEA,UAAMV,OAAoB,GAAG;AACzB,sBAAgB,kBADS;AAEzB,UAAI,KAAKC,aAAL,CAAmBC,MAAnB,IAA6B;AAAE,yBAAiB,KAAKD,aAAL,CAAmBC,MAAnB,CAA0B,eAA1B;AAAnB,OAAjC,CAFyB,CAE0E;;AAF1E,KAA7B;AAKA,WAAO,KAAKC,OAAL,CAA6B;AAChCC,MAAAA,GAAG,EAAE,eAD2B;AAEhCE,MAAAA,MAAM,EAAE,KAFwB;AAGhCN,MAAAA,OAHgC;AAIhCW,MAAAA,IAAI,EAAED;AAJ0B,KAA7B,EAKJX,IALI,aAKJA,IALI,uBAKJA,IAAI,CAAEQ,YALF,CAAP;AAMH;;AA9EiD","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    DiseaseTypeDTO,\n} from '../models';\n\nexport interface DeleteDiseaseTypeUsingDELETERequest {\n    code: string;\n}\n\nexport interface NewDiseaseTypeUsingPOSTRequest {\n    diseaseTypeDTO: DiseaseTypeDTO;\n}\n\nexport interface UpdateDiseaseTypeUsingPUTRequest {\n    diseaseTypeDTO: DiseaseTypeDTO;\n}\n\n/**\n * no description\n */\nexport class DiseaseTypeControllerApi extends BaseAPI {\n\n    /**\n     * deleteDiseaseType\n     */\n    deleteDiseaseTypeUsingDELETE({ code }: DeleteDiseaseTypeUsingDELETERequest): Observable<{ [key: string]: boolean; }>\n    deleteDiseaseTypeUsingDELETE({ code }: DeleteDiseaseTypeUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<{ [key: string]: boolean; }>>\n    deleteDiseaseTypeUsingDELETE({ code }: DeleteDiseaseTypeUsingDELETERequest, opts?: OperationOpts): Observable<{ [key: string]: boolean; } | RawAjaxResponse<{ [key: string]: boolean; }>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteDiseaseTypeUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<{ [key: string]: boolean; }>({\n            url: '/diseasetypes/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getAllDiseaseTypes\n     */\n    getAllDiseaseTypesUsingGET(): Observable<Array<DiseaseTypeDTO>>\n    getAllDiseaseTypesUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseTypeDTO>>>\n    getAllDiseaseTypesUsingGET(opts?: OperationOpts): Observable<Array<DiseaseTypeDTO> | RawAjaxResponse<Array<DiseaseTypeDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseTypeDTO>>({\n            url: '/diseasetypes',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newDiseaseType\n     */\n    newDiseaseTypeUsingPOST({ diseaseTypeDTO }: NewDiseaseTypeUsingPOSTRequest): Observable<DiseaseTypeDTO>\n    newDiseaseTypeUsingPOST({ diseaseTypeDTO }: NewDiseaseTypeUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<DiseaseTypeDTO>>\n    newDiseaseTypeUsingPOST({ diseaseTypeDTO }: NewDiseaseTypeUsingPOSTRequest, opts?: OperationOpts): Observable<DiseaseTypeDTO | RawAjaxResponse<DiseaseTypeDTO>> {\n        throwIfNullOrUndefined(diseaseTypeDTO, 'diseaseTypeDTO', 'newDiseaseTypeUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<DiseaseTypeDTO>({\n            url: '/diseasetypes',\n            method: 'POST',\n            headers,\n            body: diseaseTypeDTO,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateDiseaseType\n     */\n    updateDiseaseTypeUsingPUT({ diseaseTypeDTO }: UpdateDiseaseTypeUsingPUTRequest): Observable<DiseaseTypeDTO>\n    updateDiseaseTypeUsingPUT({ diseaseTypeDTO }: UpdateDiseaseTypeUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<DiseaseTypeDTO>>\n    updateDiseaseTypeUsingPUT({ diseaseTypeDTO }: UpdateDiseaseTypeUsingPUTRequest, opts?: OperationOpts): Observable<DiseaseTypeDTO | RawAjaxResponse<DiseaseTypeDTO>> {\n        throwIfNullOrUndefined(diseaseTypeDTO, 'diseaseTypeDTO', 'updateDiseaseTypeUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<DiseaseTypeDTO>({\n            url: '/diseasetypes',\n            method: 'PUT',\n            headers,\n            body: diseaseTypeDTO,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}