{"ast":null,"code":"import produce from \"immer\";\nimport { GET_MEDICAL_FAIL, GET_MEDICAL_LOADING, GET_MEDICAL_SUCCESS } from \"./consts\";\nimport { initial } from \"./initial\";\nexport default produce((draft, action) => {\n  switch (action.type) {\n    /**\n     * GET_MEDICALS\n     */\n    case GET_MEDICAL_LOADING:\n      {\n        draft.medicalsOrderByName.status = \"LOADING\";\n        break;\n      }\n\n    case GET_MEDICAL_SUCCESS:\n      {\n        if (action.payload.length > 0) {\n          draft.medicalsOrderByName.status = \"SUCCESS\";\n        } else {\n          draft.medicalsOrderByName.status = \"SUCCESS_EMPTY\";\n        }\n\n        draft.medicalsOrderByName.data = action.payload;\n        delete draft.medicalsOrderByName.error;\n        break;\n      }\n\n    case GET_MEDICAL_FAIL:\n      {\n        draft.medicalsOrderByName.status = \"FAIL\";\n        draft.medicalsOrderByName.error = action.error;\n        break;\n      }\n  }\n}, initial);","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/state/medicals/reducer.ts"],"names":["produce","GET_MEDICAL_FAIL","GET_MEDICAL_LOADING","GET_MEDICAL_SUCCESS","initial","draft","action","type","medicalsOrderByName","status","payload","length","data","error"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,mBAHF,QAIO,UAJP;AAKA,SAASC,OAAT,QAAwB,WAAxB;AAGA,eAAeJ,OAAO,CAAC,CAACK,KAAD,EAAuBC,MAAvB,KAAqD;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACE;AACJ;AACA;AACI,SAAKL,mBAAL;AAA0B;AACxBG,QAAAA,KAAK,CAACG,mBAAN,CAA0BC,MAA1B,GAAmC,SAAnC;AACA;AACD;;AAED,SAAKN,mBAAL;AAA0B;AACxB,YAAIG,MAAM,CAACI,OAAP,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7BN,UAAAA,KAAK,CAACG,mBAAN,CAA0BC,MAA1B,GAAmC,SAAnC;AACD,SAFD,MAEO;AACLJ,UAAAA,KAAK,CAACG,mBAAN,CAA0BC,MAA1B,GAAmC,eAAnC;AACD;;AACDJ,QAAAA,KAAK,CAACG,mBAAN,CAA0BI,IAA1B,GAAiCN,MAAM,CAACI,OAAxC;AACA,eAAOL,KAAK,CAACG,mBAAN,CAA0BK,KAAjC;AACA;AACD;;AAED,SAAKZ,gBAAL;AAAuB;AACrBI,QAAAA,KAAK,CAACG,mBAAN,CAA0BC,MAA1B,GAAmC,MAAnC;AACAJ,QAAAA,KAAK,CAACG,mBAAN,CAA0BK,KAA1B,GAAkCP,MAAM,CAACO,KAAzC;AACA;AACD;AAxBH;AA0BD,CA3BqB,EA2BnBT,OA3BmB,CAAtB","sourcesContent":["import produce from \"immer\";\nimport { IAction } from \"../types\";\nimport {\n  GET_MEDICAL_FAIL,\n  GET_MEDICAL_LOADING,\n  GET_MEDICAL_SUCCESS,\n} from \"./consts\";\nimport { initial } from \"./initial\";\nimport { IMedicalState } from \"./types\";\n\nexport default produce((draft: IMedicalState, action: IAction<any, any>) => {\n  switch (action.type) {\n    /**\n     * GET_MEDICALS\n     */\n    case GET_MEDICAL_LOADING: {\n      draft.medicalsOrderByName.status = \"LOADING\";\n      break;\n    }\n\n    case GET_MEDICAL_SUCCESS: {\n      if (action.payload.length > 0) {\n        draft.medicalsOrderByName.status = \"SUCCESS\";\n      } else {\n        draft.medicalsOrderByName.status = \"SUCCESS_EMPTY\";\n      }\n      draft.medicalsOrderByName.data = action.payload;\n      delete draft.medicalsOrderByName.error;\n      break;\n    }\n\n    case GET_MEDICAL_FAIL: {\n      draft.medicalsOrderByName.status = \"FAIL\";\n      draft.medicalsOrderByName.error = action.error;\n      break;\n    }\n  }\n}, initial);\n"]},"metadata":{},"sourceType":"module"}