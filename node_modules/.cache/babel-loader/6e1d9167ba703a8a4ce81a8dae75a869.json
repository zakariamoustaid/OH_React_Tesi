{"ast":null,"code":"var _jsxFileName = \"/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/tabs/Tabs.tsx\";\nimport classNames from \"classnames\";\nimport React, { Fragment, useState } from \"react\";\nimport \"./styles.scss\";\n\nconst Tabs = ({\n  config\n}) => {\n  const [currentIndex, updateCurrentIndex] = useState(0);\n\n  const renderHeader = (mobile = false) => {\n    if (!mobile) {\n      return config.map((item, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: classNames(\"tab\", {\n            active: currentIndex === index\n          }),\n          key: index,\n          onClick: () => updateCurrentIndex(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }\n        }, item.label));\n      });\n    } else {\n      return config.map((item, index) => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          className: classNames(\"tab\", {\n            active: currentIndex === index\n          }),\n          key: index,\n          value: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }, item.label);\n      });\n    }\n  };\n\n  const renderContent = () => {\n    var _config$currentIndex;\n\n    const content = (_config$currentIndex = config[currentIndex]) === null || _config$currentIndex === void 0 ? void 0 : _config$currentIndex.content;\n\n    if (content) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 10\n        }\n      }, content);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs desktop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, renderHeader()), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: currentIndex,\n    onChange: e => updateCurrentIndex(parseInt(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, renderHeader(true)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs_content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, renderContent()));\n};\n\nexport default Tabs;","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/tabs/Tabs.tsx"],"names":["classNames","React","Fragment","useState","Tabs","config","currentIndex","updateCurrentIndex","renderHeader","mobile","map","item","index","active","label","renderContent","content","e","parseInt","target","value"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA6CC,QAA7C,QAA6D,OAA7D;AAEA,OAAO,eAAP;;AAEA,MAAMC,IAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAEtD,QAAM,CAAEC,YAAF,EAAgBC,kBAAhB,IAAuCJ,QAAQ,CAAC,CAAD,CAArD;;AAEA,QAAMK,YAAY,GAAG,CAACC,MAAM,GAAG,KAAV,KAAmC;AACtD,QAAG,CAACA,MAAJ,EAAW;AACT,aAAOJ,MAAM,CAACK,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,4BACE;AAAK,UAAA,SAAS,EAAEZ,UAAU,CAAC,KAAD,EAAQ;AAAEa,YAAAA,MAAM,EAAGP,YAAY,KAAKM;AAA5B,WAAR,CAA1B;AAAyE,UAAA,GAAG,EAAEA,KAA9E;AAAqF,UAAA,OAAO,EAAE,MAAML,kBAAkB,CAACK,KAAD,CAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOD,IAAI,CAACG,KAAZ,CADF,CADF;AAKD,OANM,CAAP;AAOD,KARD,MAQO;AACL,aAAOT,MAAM,CAACK,GAAP,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,4BACE;AAAQ,UAAA,SAAS,EAAEZ,UAAU,CAAC,KAAD,EAAQ;AAAEa,YAAAA,MAAM,EAAGP,YAAY,KAAKM;AAA5B,WAAR,CAA7B;AAA4E,UAAA,GAAG,EAAEA,KAAjF;AAAwF,UAAA,KAAK,EAAEA,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACG,KADR,CADF;AAKD,OANM,CAAP;AAOD;AACF,GAlBD;;AAoBA,QAAMC,aAAa,GAAG,MAA0B;AAAA;;AAC9C,UAAMC,OAAO,2BAAGX,MAAM,CAACC,YAAD,CAAT,yDAAG,qBAAsBU,OAAtC;;AACA,QAAIA,OAAJ,EAAa;AACV,0BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OADH,CADF;AAKF;;AACD,WAAO,IAAP;AACD,GAVD;;AAYA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIR,YAAY,EADhB,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAGF,YAAhB;AAA+B,IAAA,QAAQ,EAAGW,CAAD,IAAOV,kBAAkB,CAACW,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIZ,YAAY,CAAC,IAAD,CADhB,CADF,CAJF,CADF,eAWE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIO,aAAa,EADjB,CAXF,CADF;AAiBD,CArDD;;AAuDA,eAAeX,IAAf","sourcesContent":["import classNames from \"classnames\";\nimport React, { Fragment, FunctionComponent, useState } from \"react\";\nimport { IProps } from \"./types\";\nimport \"./styles.scss\";\n\nconst Tabs: FunctionComponent<IProps> = ({ config }) => {\n\n  const [ currentIndex, updateCurrentIndex ] = useState(0); \n\n  const renderHeader = (mobile = false): JSX.Element[] => {\n    if(!mobile){\n      return config.map((item, index) => {\n        return (\n          <div className={classNames(\"tab\", { active: (currentIndex === index) })} key={index} onClick={() => updateCurrentIndex(index)}>\n            <span>{item.label}</span>\n          </div>\n        )\n      })\n    } else {\n      return config.map((item, index) => {\n        return (\n          <option className={classNames(\"tab\", { active: (currentIndex === index) })} key={index} value={index}>\n            {item.label}\n          </option>\n        )\n      })\n    }\n  };\n\n  const renderContent = (): JSX.Element | null => {\n    const content = config[currentIndex]?.content\n    if (content) {\n       return (\n         <div className=\"panel\">\n           {content}\n         </div>\n       );\n    }\n    return null;\n  };\n\n  return (\n    <Fragment>\n      <div className=\"tabs_header\">\n        <div className=\"tabs desktop\">\n          { renderHeader() }\n        </div>\n        <div className=\"tabs mobile\">\n          <select value={ currentIndex } onChange={(e) => updateCurrentIndex(parseInt(e.target.value)) }>\n            { renderHeader(true) }\n          </select>\n        </div>\n      </div>\n      <div className=\"tabs_content\">\n        { renderContent() }\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Tabs;"]},"metadata":{},"sourceType":"module"}