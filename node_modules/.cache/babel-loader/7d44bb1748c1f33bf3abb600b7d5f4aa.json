{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/DrawerActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport \"./styles.scss\";\n\nconst DrawerActivity = ({\n  prices,\n  items,\n  setItems\n}) => {\n  const [open_med, setOpen_med] = React.useState(false);\n  const [open_ope, setOpen_ope] = React.useState(false);\n  const [open_exa, setOpen_exa] = React.useState(false);\n  const [open_oth, setOpen_oth] = React.useState(false);\n  const [open_cust, setOpen_cust] = React.useState(false); //\n  //management open/close modals\n  //\n\n  const handleClickOpen_med = () => {\n    setOpen_med(true);\n  };\n\n  const handleClose_med = () => {\n    setOpen_med(false);\n  };\n\n  const handleClickOpen_ope = () => {\n    setOpen_ope(true);\n  };\n\n  const handleClose_ope = () => {\n    setOpen_ope(false);\n  };\n\n  const handleClickOpen_exa = () => {\n    setOpen_exa(true);\n  };\n\n  const handleClose_exa = () => {\n    setOpen_exa(false);\n  };\n\n  const handleClickOpen_oth = () => {\n    setOpen_oth(true);\n  };\n\n  const handleClose_oth = () => {\n    setOpen_oth(false);\n  };\n\n  const handleClickOpen_cust = () => {\n    setOpen_cust(true);\n  };\n\n  const handleClose_cust = () => {\n    setOpen_cust(false);\n  }; //\n  //management modals' columns and rows\n  //\n\n\n  const columns = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  //this catches the ids of the prices (because the row's id is the relative id of the item in prices) \n  const [select, setSelect] = React.useState(); //create rows for MED\n\n  let rows_med = [{\n    id: 0,\n    group: '',\n    description: ''\n  }];\n  prices === null || prices === void 0 ? void 0 : prices.map((m, i) => {\n    var _m$list;\n\n    if (m.group === \"MED\") rows_med.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list = m.list) === null || _m$list === void 0 ? void 0 : _m$list.description\n    });\n  });\n  rows_med === null || rows_med === void 0 ? void 0 : rows_med.shift(); //delete the first row used for definition\n  //create rows for OPE\n\n  let rows_ope = [{\n    id: 0,\n    group: '',\n    description: ''\n  }];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list2;\n\n    if (m.group === \"OPE\") rows_ope.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list2 = m.list) === null || _m$list2 === void 0 ? void 0 : _m$list2.description\n    });\n  });\n  rows_ope === null || rows_ope === void 0 ? void 0 : rows_ope.shift(); //delete the first row used for definition\n  //create rows for EXA\n\n  let rows_exa = [{\n    id: 0,\n    group: '',\n    description: ''\n  }];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list3;\n\n    if (m.group === \"EXA\") rows_exa.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list3 = m.list) === null || _m$list3 === void 0 ? void 0 : _m$list3.description\n    });\n  });\n  rows_exa === null || rows_exa === void 0 ? void 0 : rows_exa.shift(); //delete the first row used for definition\n  //create rows for OTH\n\n  let rows_oth = [{\n    id: 0,\n    group: '',\n    description: ''\n  }];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list4;\n\n    if (m.group === \"OTH\") rows_oth.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list4 = m.list) === null || _m$list4 === void 0 ? void 0 : _m$list4.description\n    });\n  });\n  rows_oth === null || rows_oth === void 0 ? void 0 : rows_oth.shift(); //delete the first row used for definition\n\n  useEffect(() => {\n    if (items !== undefined) console.log(items);\n  }, [items]);\n  let temp; //fill the array of Items to send to father who will display them\n\n  const take_items = () => {\n    select === null || select === void 0 ? void 0 : select.forEach(function (i, j) {\n      //if-else case to check if item is already in the bill\n      if ((items === null || items === void 0 ? void 0 : items.some(it => it.hashCode === i)) === true) {\n        items.forEach(function (x) {\n          if (x.itemQuantity !== undefined && x.hashCode === i) {\n            ++x.itemQuantity;\n          }\n        });\n      } else {\n        setItems(pre => {\n          var _prices$find, _prices$find2, _prices$find2$list;\n\n          return [...pre, {\n            \"hashCode\": prices === null || prices === void 0 ? void 0 : (_prices$find = prices.find(p => p.id == i)) === null || _prices$find === void 0 ? void 0 : _prices$find.id,\n            \"id\": 1,\n            \"price\": true,\n            \"billId\": 1,\n            \"priceId\": \"test\",\n            \"itemDescription\": prices === null || prices === void 0 ? void 0 : (_prices$find2 = prices.find(p => p.id == i)) === null || _prices$find2 === void 0 ? void 0 : (_prices$find2$list = _prices$find2.list) === null || _prices$find2$list === void 0 ? void 0 : _prices$find2$list.description,\n            \"itemAmount\": 1,\n            \"itemQuantity\": 1,\n            \"itemDisplayCode\": \"test\",\n            \"itemId\": \"1\"\n          }];\n        });\n      }\n    });\n    setOpen_med(false);\n    setOpen_ope(false);\n    setOpen_oth(false);\n    setOpen_exa(false);\n  }; //\n  //Manage Custom insert\n  //\n\n\n  const [description_cust, setDescription_cust] = useState('');\n  const [itemQ_cust, setItemQ_cust] = useState(0);\n\n  const handleDescription = e => {\n    e.preventDefault();\n    setDescription_cust(e.currentTarget.value);\n  };\n\n  const handleItemQ = e => {\n    e.preventDefault();\n    setItemQ_cust(Number(e.currentTarget.value));\n  };\n\n  const confirm_cust = () => {\n    if (itemQ_cust !== 0 && description_cust !== '') setItems(pre => [...pre, {\n      \"hashCode\": 1,\n      \"id\": 1,\n      \"price\": true,\n      \"billId\": 1,\n      \"priceId\": \"test\",\n      \"itemDescription\": description_cust,\n      \"itemAmount\": 1,\n      \"itemQuantity\": itemQ_cust,\n      \"itemDisplayCode\": \"test\",\n      \"itemId\": \"1\"\n    }]);else {\n      setItemQ_cust(0);\n      setDescription_cust('');\n    }\n    setOpen_cust(false);\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"billListDrawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Medical\",\n    onClick: handleClickOpen_med,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 74\n    }\n  }), \"Medical\"), /*#__PURE__*/React.createElement(Dialog, {\n    className: \"billItemDrawer\",\n    open: open_med,\n    onClose: handleClose_med,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, \"Select Medical\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: take_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_med,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setSelect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Operation\",\n    onClick: handleClickOpen_ope,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 76\n    }\n  }), \"Operation\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_ope,\n    onClose: handleClose_ope,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"Select Operation\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: take_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_ope,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setSelect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Exam\",\n    onClick: handleClickOpen_exa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 71\n    }\n  }), \"Exam\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_exa,\n    onClose: handleClose_exa,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, \"Select Exam\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: take_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_exa,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setSelect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Other\",\n    onClick: handleClickOpen_oth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 72\n    }\n  }), \"Other\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_oth,\n    onClose: handleClose_oth,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, \"Select Other\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: take_items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_oth,\n    columns: columns,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setSelect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Custom\",\n    onClick: handleClickOpen_cust,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 74\n    }\n  }), \"Custom\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_cust,\n    onClose: handleClose_cust,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, \"Select Other\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: confirm_cust,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 200,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    onSubmit: confirm_cust,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Description\",\n    style: {\n      marginBottom: 50\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Description\",\n    onChange: e => handleDescription(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Item_quantity\",\n    style: {\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"standard-required\",\n    label: \"Item_quantity\",\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => handleItemQ(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default DrawerActivity;","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/DrawerActivity.tsx"],"names":["React","useEffect","useState","DataGrid","Button","Dialog","ListItem","List","DialogContent","DialogTitle","AddIcon","FormControl","TextField","DrawerActivity","prices","items","setItems","open_med","setOpen_med","open_ope","setOpen_ope","open_exa","setOpen_exa","open_oth","setOpen_oth","open_cust","setOpen_cust","handleClickOpen_med","handleClose_med","handleClickOpen_ope","handleClose_ope","handleClickOpen_exa","handleClose_exa","handleClickOpen_oth","handleClose_oth","handleClickOpen_cust","handleClose_cust","columns","field","headerName","width","editable","select","setSelect","rows_med","id","group","description","map","m","i","push","list","shift","rows_ope","forEach","rows_exa","rows_oth","undefined","console","log","temp","take_items","j","some","it","hashCode","x","itemQuantity","pre","find","p","description_cust","setDescription_cust","itemQ_cust","setItemQ_cust","handleDescription","e","preventDefault","currentTarget","value","handleItemQ","Number","confirm_cust","height","marginBottom","shrink"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from \"react\";\nimport { DataGrid, GridSelectionModel, GridColDef, GridRowId, GridRowData } from '@material-ui/data-grid';\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport { PricesState, Item } from \"./types\";\nimport \"./styles.scss\";\nimport { prepareCopy } from \"immer/dist/internal\";\nimport { BillItemsDTO } from \"../../../generated\";\n\n\nconst DrawerActivity: FunctionComponent<PricesState> = ({\n    prices,\n    items,\n    setItems,\n}) => {\n\n    const [open_med, setOpen_med] = React.useState(false);\n    const [open_ope, setOpen_ope] = React.useState(false);\n    const [open_exa, setOpen_exa] = React.useState(false);\n    const [open_oth, setOpen_oth] = React.useState(false);\n    const [open_cust, setOpen_cust] = React.useState(false);\n\n    //\n    //management open/close modals\n    //\n    const handleClickOpen_med = () => {\n        setOpen_med(true);\n    };\n    const handleClose_med = () => {\n        setOpen_med(false);\n    };\n\n    const handleClickOpen_ope = () => {\n        setOpen_ope(true);\n    };\n    const handleClose_ope = () => {\n        setOpen_ope(false);\n    };\n\n    const handleClickOpen_exa = () => {\n        setOpen_exa(true);\n    };\n    const handleClose_exa = () => {\n        setOpen_exa(false);\n    };\n\n    const handleClickOpen_oth = () => {\n        setOpen_oth(true);\n    };\n    const handleClose_oth = () => {\n        setOpen_oth(false);\n    };\n\n    const handleClickOpen_cust = () => {\n        setOpen_cust(true);\n    };\n    const handleClose_cust = () => {\n        setOpen_cust(false);\n    };\n\n    //\n    //management modals' columns and rows\n    //\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    type Row = [{\n        id: number | undefined,\n        group: string | undefined,\n        description: string | undefined\n    }];\n\n    //this catches the ids of the prices (because the row's id is the relative id of the item in prices) \n    const [select, setSelect] = React.useState<GridRowId[]>();\n\n    //create rows for MED\n    let rows_med: Row = [{ id: 0, group: '', description: '' }];\n\n    prices?.map((m, i) => {\n        if (m.group === \"MED\")\n            rows_med.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift(); //delete the first row used for definition\n\n    //create rows for OPE\n    let rows_ope: Row = [{ id: 0, group: '', description: '' }];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OPE\")\n            rows_ope.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_ope?.shift(); //delete the first row used for definition\n\n    //create rows for EXA\n    let rows_exa: Row = [{ id: 0, group: '', description: '' }];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"EXA\")\n            rows_exa.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_exa?.shift(); //delete the first row used for definition\n\n    //create rows for OTH\n    let rows_oth: Row = [{ id: 0, group: '', description: '' }];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OTH\")\n            rows_oth.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_oth?.shift(); //delete the first row used for definition\n\n    useEffect(() => {\n        if(items !== undefined)\n            console.log(items)\n    },[items])\n\n    let temp : BillItemsDTO;\n\n    //fill the array of Items to send to father who will display them\n    const take_items = () => {\n        select?.forEach(function (i, j) {\n            //if-else case to check if item is already in the bill\n            if ((items?.some(it => it.hashCode === i)) === true) {\n                items.forEach(function (x) {\n                    if(x.itemQuantity !== undefined && x.hashCode === i)\n                    {\n                        ++x.itemQuantity;\n                    }\n                })\n            }\n            else {\n                setItems(pre =>\n                    [...pre,\n                    {\n                        \"hashCode\": prices?.find(p => p.id == i)?.id,\n                        \"id\": 1,\n                        \"price\": true,\n                        \"billId\": 1,\n                        \"priceId\": \"test\",\n                        \"itemDescription\": prices?.find(p => p.id == i)?.list?.description,\n                        \"itemAmount\": 1,\n                        \"itemQuantity\": 1,\n                        \"itemDisplayCode\": \"test\",\n                        \"itemId\": \"1\",\n                    }])\n            }\n        })\n        setOpen_med(false);\n        setOpen_ope(false);\n        setOpen_oth(false);\n        setOpen_exa(false);\n    }\n\n    //\n    //Manage Custom insert\n    //\n\n    const [description_cust, setDescription_cust] = useState('');\n    const [itemQ_cust, setItemQ_cust] = useState(0);\n\n\n    const handleDescription = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        e.preventDefault();\n        setDescription_cust(e.currentTarget.value);\n    }\n\n    const handleItemQ = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        e.preventDefault();\n        setItemQ_cust(Number(e.currentTarget.value));\n    }\n\n    const confirm_cust = () => {\n        if (itemQ_cust !== 0 && description_cust !== '')\n            setItems(pre =>\n                [...pre,\n                {\n                    \"hashCode\": 1,\n                    \"id\": 1,\n                    \"price\": true,\n                    \"billId\": 1,\n                    \"priceId\": \"test\",\n                    \"itemDescription\": description_cust,\n                    \"itemAmount\": 1,\n                    \"itemQuantity\": itemQ_cust,\n                    \"itemDisplayCode\": \"test\",\n                    \"itemId\": \"1\",\n\n                }])\n        else {\n            setItemQ_cust(0);\n            setDescription_cust('');\n        }\n        setOpen_cust(false);\n    }\n\n\n    return (\n        <List className=\"billListDrawer\">\n            <ListItem button key=\"Medical\" onClick={handleClickOpen_med}><AddIcon></AddIcon>Medical</ListItem>\n            <Dialog className=\"billItemDrawer\" open={open_med} onClose={handleClose_med} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Medical</DialogTitle>\n                <Button onClick={take_items}>Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_med}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => setSelect(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ListItem button key=\"Operation\" onClick={handleClickOpen_ope}><AddIcon></AddIcon>Operation</ListItem>\n            <Dialog open={open_ope} onClose={handleClose_ope} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Operation</DialogTitle>\n                <Button onClick={take_items} >Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_ope}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => setSelect(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ListItem button key=\"Exam\" onClick={handleClickOpen_exa}><AddIcon></AddIcon>Exam</ListItem>\n            <Dialog open={open_exa} onClose={handleClose_exa} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Exam</DialogTitle>\n                <Button onClick={take_items}>Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_exa}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => setSelect(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ListItem button key=\"Other\" onClick={handleClickOpen_oth}><AddIcon></AddIcon>Other</ListItem>\n            <Dialog open={open_oth} onClose={handleClose_oth} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Other</DialogTitle>\n                <Button onClick={take_items}>Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 400, width: 450 }}>\n                        <DataGrid\n                            rows={rows_oth}\n                            columns={columns}\n                            checkboxSelection\n                            disableSelectionOnClick\n                            onSelectionModelChange={e => setSelect(e)}\n                        />\n                    </div>\n                </DialogContent>\n            </Dialog>\n            <ListItem button key=\"Custom\" onClick={handleClickOpen_cust}><AddIcon></AddIcon>Custom</ListItem>\n            <Dialog open={open_cust} onClose={handleClose_cust} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Select Other</DialogTitle>\n                <Button onClick={confirm_cust}>Confirm</Button>\n                <DialogContent>\n                    <div style={{ height: 200, width: 450 }}>\n                        <FormControl onSubmit={confirm_cust}>\n                            <div className=\"Description\" style={{ marginBottom: 50 }}>\n                                <TextField required id=\"standard-required\" label=\"Description\" onChange={e => handleDescription(e)} />\n                            </div>\n                            <div className=\"Item_quantity\" style={{ marginBottom: 10 }}>\n                                <TextField required id=\"standard-required\" label=\"Item_quantity\" type=\"number\"\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }} onChange={e => handleItemQ(e)} />\n                            </div>\n                        </FormControl>\n                    </div>\n                </DialogContent>\n            </Dialog>\n        </List>\n    )\n}\n\n\nexport default DrawerActivity;"]},"metadata":{},"sourceType":"module"}