{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class MedStockMovementTypeControllerApi extends BaseAPI {\n  /**\n   * deleteMedicaldsrstockmovType\n   */\n  deleteMedicaldsrstockmovTypeUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteMedicaldsrstockmovTypeUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/medstockmovementtype/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getMedicaldsrstockmovTypeUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/medstockmovementtype',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getMovementTypeUsingGET({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'getMovementTypeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/medstockmovementtype/{code}'.replace('{code}', encodeURI(code)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  isCodeUsedUsingGET({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'isCodeUsedUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/medstockmovementtype/check/{code}'.replace('{code}', encodeURI(code)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newMedicaldsrstockmovTypeUsingPOST({\n    medicaldsrstockmovType\n  }, opts) {\n    throwIfNullOrUndefined(medicaldsrstockmovType, 'medicaldsrstockmovType', 'newMedicaldsrstockmovTypeUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/medstockmovementtype',\n      method: 'POST',\n      headers,\n      body: medicaldsrstockmovType\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateMedicaldsrstockmovTypeUsingPUT({\n    medicaldsrstockmovTypeDTO\n  }, opts) {\n    throwIfNullOrUndefined(medicaldsrstockmovTypeDTO, 'medicaldsrstockmovTypeDTO', 'updateMedicaldsrstockmovTypeUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/medstockmovementtype',\n      method: 'PUT',\n      headers,\n      body: medicaldsrstockmovTypeDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/generated/apis/MedStockMovementTypeControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","MedStockMovementTypeControllerApi","deleteMedicaldsrstockmovTypeUsingDELETE","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getMedicaldsrstockmovTypeUsingGET","getMovementTypeUsingGET","isCodeUsedUsingGET","newMedicaldsrstockmovTypeUsingPOST","medicaldsrstockmovType","body","updateMedicaldsrstockmovTypeUsingPUT","medicaldsrstockmovTypeDTO"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    MovementTypeDTO,\n} from '../models';\n\nexport interface DeleteMedicaldsrstockmovTypeUsingDELETERequest {\n    code: string;\n}\n\nexport interface GetMovementTypeUsingGETRequest {\n    code: string;\n}\n\nexport interface IsCodeUsedUsingGETRequest {\n    code: string;\n}\n\nexport interface NewMedicaldsrstockmovTypeUsingPOSTRequest {\n    medicaldsrstockmovType: MovementTypeDTO;\n}\n\nexport interface UpdateMedicaldsrstockmovTypeUsingPUTRequest {\n    medicaldsrstockmovTypeDTO: MovementTypeDTO;\n}\n\n/**\n * no description\n */\nexport class MedStockMovementTypeControllerApi extends BaseAPI {\n\n    /**\n     * deleteMedicaldsrstockmovType\n     */\n    deleteMedicaldsrstockmovTypeUsingDELETE({ code }: DeleteMedicaldsrstockmovTypeUsingDELETERequest): Observable<boolean>\n    deleteMedicaldsrstockmovTypeUsingDELETE({ code }: DeleteMedicaldsrstockmovTypeUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    deleteMedicaldsrstockmovTypeUsingDELETE({ code }: DeleteMedicaldsrstockmovTypeUsingDELETERequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteMedicaldsrstockmovTypeUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<boolean>({\n            url: '/medstockmovementtype/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getMedicaldsrstockmovType\n     */\n    getMedicaldsrstockmovTypeUsingGET(): Observable<Array<MovementTypeDTO>>\n    getMedicaldsrstockmovTypeUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<MovementTypeDTO>>>\n    getMedicaldsrstockmovTypeUsingGET(opts?: OperationOpts): Observable<Array<MovementTypeDTO> | RawAjaxResponse<Array<MovementTypeDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<MovementTypeDTO>>({\n            url: '/medstockmovementtype',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getMovementType\n     */\n    getMovementTypeUsingGET({ code }: GetMovementTypeUsingGETRequest): Observable<MovementTypeDTO>\n    getMovementTypeUsingGET({ code }: GetMovementTypeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<MovementTypeDTO>>\n    getMovementTypeUsingGET({ code }: GetMovementTypeUsingGETRequest, opts?: OperationOpts): Observable<MovementTypeDTO | RawAjaxResponse<MovementTypeDTO>> {\n        throwIfNullOrUndefined(code, 'code', 'getMovementTypeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<MovementTypeDTO>({\n            url: '/medstockmovementtype/{code}'.replace('{code}', encodeURI(code)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * isCodeUsed\n     */\n    isCodeUsedUsingGET({ code }: IsCodeUsedUsingGETRequest): Observable<boolean>\n    isCodeUsedUsingGET({ code }: IsCodeUsedUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    isCodeUsedUsingGET({ code }: IsCodeUsedUsingGETRequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(code, 'code', 'isCodeUsedUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<boolean>({\n            url: '/medstockmovementtype/check/{code}'.replace('{code}', encodeURI(code)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newMedicaldsrstockmovType\n     */\n    newMedicaldsrstockmovTypeUsingPOST({ medicaldsrstockmovType }: NewMedicaldsrstockmovTypeUsingPOSTRequest): Observable<void>\n    newMedicaldsrstockmovTypeUsingPOST({ medicaldsrstockmovType }: NewMedicaldsrstockmovTypeUsingPOSTRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>\n    newMedicaldsrstockmovTypeUsingPOST({ medicaldsrstockmovType }: NewMedicaldsrstockmovTypeUsingPOSTRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {\n        throwIfNullOrUndefined(medicaldsrstockmovType, 'medicaldsrstockmovType', 'newMedicaldsrstockmovTypeUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<void>({\n            url: '/medstockmovementtype',\n            method: 'POST',\n            headers,\n            body: medicaldsrstockmovType,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateMedicaldsrstockmovType\n     */\n    updateMedicaldsrstockmovTypeUsingPUT({ medicaldsrstockmovTypeDTO }: UpdateMedicaldsrstockmovTypeUsingPUTRequest): Observable<void>\n    updateMedicaldsrstockmovTypeUsingPUT({ medicaldsrstockmovTypeDTO }: UpdateMedicaldsrstockmovTypeUsingPUTRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>>\n    updateMedicaldsrstockmovTypeUsingPUT({ medicaldsrstockmovTypeDTO }: UpdateMedicaldsrstockmovTypeUsingPUTRequest, opts?: OperationOpts): Observable<void | RawAjaxResponse<void>> {\n        throwIfNullOrUndefined(medicaldsrstockmovTypeDTO, 'medicaldsrstockmovTypeDTO', 'updateMedicaldsrstockmovTypeUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<void>({\n            url: '/medstockmovementtype',\n            method: 'PUT',\n            headers,\n            body: medicaldsrstockmovTypeDTO,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}