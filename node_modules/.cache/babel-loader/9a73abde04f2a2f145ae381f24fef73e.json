{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport \"./styles.scss\";\nimport { createBill, createBillReset } from \"../../../state/bills/actions\";\nimport { searchPatient, getPatientSuccess } from \"../../../state/patients/actions\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  getMed,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute,\n  patientSearchResults\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n  const [activityTransitionState, setActivityTransitionState] = useState(\"IDLE\");\n  let p;\n  useEffect(() => {\n    if (activityTransitionState === \"TO_PATIENT_DETAILS\") {\n      getPatientSuccess(p);\n    }\n  }, [activityTransitionState, getPatientSuccess, patient]);\n\n  const test = () => {\n    console.log(searchPatient);\n    console.log(getPatientSuccess);\n    console.log(patientSearchResults);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, \"inserisci qualcosa\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, \"utente\"))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\",\n  getMed: state.medicals.medicalsOrderByName.data,\n  patientSearchResults: state.patients.searchResults.data\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useState","AppHeader","Footer","useTranslation","connect","createBill","createBillReset","searchPatient","getPatientSuccess","NewBillActivity","userCredentials","isLoading","hasSucceeded","getMed","hasFailed","billHomeRoute","patientSearchResults","t","breadcrumbMap","activityTransitionState","setActivityTransitionState","p","patient","test","console","log","mapStateToProps","state","main","authentication","data","bills","status","medicals","medicalsOrderByName","patients","searchResults","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,SAAnC,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAqC,aAArC;AAUA,OAAO,eAAP;AAGA,SACIC,UADJ,EAEIC,eAFJ,QAGO,8BAHP;AAKA,SACIC,aADJ,EAEIC,iBAFJ,QAGS,iCAHT;;AAcA,MAAMC,eAA0C,GAAG,CAAC;AAChDC,EAAAA,eADgD;AAEhDC,EAAAA,SAFgD;AAGhDC,EAAAA,YAHgD;AAIhDC,EAAAA,MAJgD;AAKhDR,EAAAA,UALgD;AAMhDC,EAAAA,eANgD;AAOhDQ,EAAAA,SAPgD;AAQhDC,EAAAA,aARgD;AAShDC,EAAAA;AATgD,CAAD,KAU7C;AACF,QAAM;AAAEC,IAAAA;AAAF,MAAQd,cAAc,EAA5B;AAEA,QAAMe,aAAa,GAAG;AAClB,KAACD,CAAC,CAAC,eAAD,CAAF,GAAsB,GADJ;AAElB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB,UAFF;AAGlB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB;AAHF,GAAtB;AAMA,QAAM,CAACE,uBAAD,EAA0BC,0BAA1B,IACNpB,QAAQ,CAA2B,MAA3B,CADR;AAGA,MAAIqB,CAAJ;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,uBAAuB,KAAK,oBAAhC,EAAsD;AACpDX,MAAAA,iBAAiB,CAACa,CAAD,CAAjB;AACD;AACF,GAJM,EAIJ,CAACF,uBAAD,EAA0BX,iBAA1B,EAA6Cc,OAA7C,CAJI,CAAT;;AAOA,QAAMC,IAAI,GAAG,MAAM;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,aAAZ;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,iBAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYT,oBAAZ;AACH,GAJD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAEN,eADrB;AAEI,IAAA,aAAa,EAAEQ,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,CAAC,CAAC,aAAD,CAAlC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAO,IAAA,EAAE,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAQ,IAAA,OAAO,EAAEM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,CADJ,CAFJ,CADJ,CALJ,eAiBI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADJ;AAqBH,CA3DD;;AA8DA,MAAMG,eAAe,GAAIC,KAAD,KAAiC;AACrDjB,EAAAA,eAAe,EAAEiB,KAAK,CAACC,IAAN,CAAWC,cAAX,CAA0BC,IADU;AAErDnB,EAAAA,SAAS,EAAEgB,KAAK,CAACI,KAAN,CAAY1B,UAAZ,CAAuB2B,MAAvB,KAAkC,SAFQ;AAGrDpB,EAAAA,YAAY,EAAEe,KAAK,CAACI,KAAN,CAAY1B,UAAZ,CAAuB2B,MAAvB,KAAkC,SAHK;AAIrDlB,EAAAA,SAAS,EAAEa,KAAK,CAACI,KAAN,CAAY1B,UAAZ,CAAuB2B,MAAvB,KAAkC,MAJQ;AAKrDnB,EAAAA,MAAM,EAAEc,KAAK,CAACM,QAAN,CAAeC,mBAAf,CAAmCJ,IALU;AAMrDd,EAAAA,oBAAoB,EAAEW,KAAK,CAACQ,QAAN,CAAeC,aAAf,CAA6BN;AANE,CAAjC,CAAxB;;AAYA,MAAMO,kBAAkC,GAAG;AACvChC,EAAAA,UADuC;AAEvCC,EAAAA;AAFuC,CAA3C;AAKA,eAAeF,OAAO,CAACsB,eAAD,EAAkBW,kBAAlB,CAAP,CAA6C5B,eAA7C,CAAf","sourcesContent":["import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { IState } from \"../../../types\";\nimport { useFormik } from \"formik\";\nimport TextField from \"../../accessories/textField/TextField\";\nimport { BillDTO, PatientDTO } from \"../../../generated\";\nimport { FullBillDTO } from \"../../../generated\";\nimport { scrollToElement } from \"../../../libraries/uiUtils/scrollToElement\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport \"./styles.scss\";\nimport SearchIcon from \"../../../assets/SearchIcon\";\n\nimport {\n    createBill,\n    createBillReset,\n} from \"../../../state/bills/actions\";\n\nimport {\n    searchPatient,\n    getPatientSuccess,\n  } from \"../../../state/patients/actions\";\n\nimport {\n    IDispatchProps,\n    IStateProps,\n    TActivityTransitionState,\n    TProps,\n} from \"./types\";\nimport patientDTO from \"../../../mockServer/fixtures/patientDTO\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    getMed,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n    patientSearchResults,\n}) => {\n    const { t } = useTranslation();\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n\n    const [activityTransitionState, setActivityTransitionState] =\n    useState<TActivityTransitionState>(\"IDLE\");\n\n    let p: PatientDTO;\n\n    useEffect(() => {\n        if (activityTransitionState === \"TO_PATIENT_DETAILS\") {\n          getPatientSuccess(p);\n        }\n      }, [activityTransitionState, getPatientSuccess, patient]);\n    \n\n    const test = () => {\n        console.log(searchPatient);\n        console.log(getPatientSuccess);\n        console.log(patientSearchResults);\n    }\n\n\n    return (\n        <div className=\"new_Bill\">\n            <AppHeader\n                userCredentials={userCredentials}\n                breadcrumbMap={breadcrumbMap}\n            />\n            <div className=\"newBill__background\">\n                <div className=\"newBill__content\">\n                    <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                    <div className=\"newBill__panel\">\n                        <div className=\"table\">\n                            <label>inserisci qualcosa</label>\n                            <input id=\"test\"></input>\n                            <button onClick={test}>utente</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    isLoading: state.bills.createBill.status === \"LOADING\",\n    hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n    hasFailed: state.bills.createBill.status === \"FAIL\",\n    getMed: state.medicals.medicalsOrderByName.data,\n    patientSearchResults: state.patients.searchResults.data,\n});\n\n\n\n\nconst mapDispatchToProps: IDispatchProps = {\n    createBill,\n    createBillReset,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}