{"ast":null,"code":"var _jsxFileName = \"/home/zak/projects/OH_R/openhospital-ui/src/components/activities/dashboardActivity/DashboardActivity.tsx\";\nimport React, { useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport PlusIcon from \"../../../assets/PlusIcon\";\nimport SearchIcon from \"../../../assets/SearchIcon\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport LargeButton from \"../../accessories/largeButton/LargeButton\";\nimport \"./styles.scss\";\n\nconst DashboardActivity = ({\n  userCredentials,\n  newPatientRoute,\n  searchPatientRoute\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\"\n  };\n  const [activityTransitionState, setActivityTransitionState] = useState(\"IDLE\");\n\n  switch (activityTransitionState) {\n    case \"TO_NEW_PATIENT\":\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: newPatientRoute,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      });\n\n    case \"TO_SEARCH_PATIENT\":\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: searchPatientRoute,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 14\n        }\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(AppHeader, {\n        userCredentials: userCredentials ? userCredentials : {},\n        breadcrumbMap: breadcrumbMap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__greeter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Trans, {\n        i18nKey: \"dashboard.welcomename\",\n        values: {\n          name: userCredentials === null || userCredentials === void 0 ? void 0 : userCredentials.displayName\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__actions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__actions__button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(LargeButton, {\n        handleClick: () => setActivityTransitionState(\"TO_NEW_PATIENT\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"largeButton__inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(PlusIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"largeButton__inner__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, t(\"dashboard.newpatient\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard__actions__button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(LargeButton, {\n        handleClick: () => setActivityTransitionState(\"TO_SEARCH_PATIENT\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"largeButton__inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        width: \"43\",\n        height: \"43\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"largeButton__inner__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, t(\"dashboard.searchpatients\"))))))), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }));\n  }\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data\n});\n\nexport default connect(mapStateToProps)(DashboardActivity);","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/activities/dashboardActivity/DashboardActivity.tsx"],"names":["React","useState","Trans","useTranslation","connect","Redirect","PlusIcon","SearchIcon","AppHeader","Footer","LargeButton","DashboardActivity","userCredentials","newPatientRoute","searchPatientRoute","t","breadcrumbMap","activityTransitionState","setActivityTransitionState","name","displayName","mapStateToProps","state","main","authentication","data"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,eAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAO,eAAP;;AAGA,MAAMC,iBAA4C,GAAG,CAAC;AACpDC,EAAAA,eADoD;AAEpDC,EAAAA,eAFoD;AAGpDC,EAAAA;AAHoD,CAAD,KAI/C;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAQZ,cAAc,EAA5B;AAEA,QAAMa,aAAa,GAAG;AACpB,KAACD,CAAC,CAAC,eAAD,CAAF,GAAsB;AADF,GAAtB;AAIA,QAAM,CAACE,uBAAD,EAA0BC,0BAA1B,IACJjB,QAAQ,CAA2B,MAA3B,CADV;;AAGA,UAAQgB,uBAAR;AACE,SAAK,gBAAL;AACE,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEJ,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF,SAAK,mBAAL;AACE,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACF;AACE,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,eAAe,EAAEF,eAAe,GAAGA,eAAH,GAAqB,EADvD;AAEE,QAAA,aAAa,EAAEI,aAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAKE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AACE,QAAA,OAAO,EAAC,uBADV;AAEE,QAAA,MAAM,EAAE;AAAEG,UAAAA,IAAI,EAAEP,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEQ;AAAzB,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAOE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAE,MACXF,0BAA0B,CAAC,gBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,CAAC,CAAC,sBAAD,CADJ,CAFF,CALF,CADF,CADF,eAeE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAE,MACXG,0BAA0B,CAAC,mBAAD,CAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,IAAlB;AAAuB,QAAA,MAAM,EAAC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,CAAC,CAAC,0BAAD,CADJ,CAFF,CALF,CADF,CAfF,CAPF,CALF,eA2CE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA3CF,CADF;AANJ;AAsDD,CApED;;AAsEA,MAAMM,eAAe,GAAIC,KAAD,KAAiC;AACvDV,EAAAA,eAAe,EAAEU,KAAK,CAACC,IAAN,CAAWC,cAAX,CAA0BC;AADY,CAAjC,CAAxB;;AAIA,eAAerB,OAAO,CAACiB,eAAD,CAAP,CAAyBV,iBAAzB,CAAf","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport { Trans, useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport PlusIcon from \"../../../assets/PlusIcon\";\nimport SearchIcon from \"../../../assets/SearchIcon\";\nimport { IState } from \"../../../types\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport LargeButton from \"../../accessories/largeButton/LargeButton\";\nimport \"./styles.scss\";\nimport { IStateProps, TProps, TActivityTransitionState } from \"./types\";\n\nconst DashboardActivity: FunctionComponent<TProps> = ({\n  userCredentials,\n  newPatientRoute,\n  searchPatientRoute,\n}) => {\n  const { t } = useTranslation();\n\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n  };\n\n  const [activityTransitionState, setActivityTransitionState] =\n    useState<TActivityTransitionState>(\"IDLE\");\n\n  switch (activityTransitionState) {\n    case \"TO_NEW_PATIENT\":\n      return <Redirect to={newPatientRoute} />;\n    case \"TO_SEARCH_PATIENT\":\n      return <Redirect to={searchPatientRoute} />;\n    default:\n      return (\n        <div className=\"dashboard\">\n          <AppHeader\n            userCredentials={userCredentials ? userCredentials : {}}\n            breadcrumbMap={breadcrumbMap}\n          />\n          <div className=\"dashboard__background\">\n            <div className=\"dashboard__greeter\">\n              <Trans\n                i18nKey=\"dashboard.welcomename\"\n                values={{ name: userCredentials?.displayName }}\n              />\n            </div>\n            <div className=\"dashboard__actions\">\n              <div className=\"dashboard__actions__button\">\n                <LargeButton\n                  handleClick={() =>\n                    setActivityTransitionState(\"TO_NEW_PATIENT\")\n                  }\n                >\n                  <div className=\"largeButton__inner\">\n                    <PlusIcon />\n                    <div className=\"largeButton__inner__label\">\n                      {t(\"dashboard.newpatient\")}\n                    </div>\n                  </div>\n                </LargeButton>\n              </div>\n              <div className=\"dashboard__actions__button\">\n                <LargeButton\n                  handleClick={() =>\n                    setActivityTransitionState(\"TO_SEARCH_PATIENT\")\n                  }\n                >\n                  <div className=\"largeButton__inner\">\n                    <SearchIcon width=\"43\" height=\"43\" />\n                    <div className=\"largeButton__inner__label\">\n                      {t(\"dashboard.searchpatients\")}\n                    </div>\n                  </div>\n                </LargeButton>\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      );\n  }\n};\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n  userCredentials: state.main.authentication.data,\n});\n\nexport default connect(mapStateToProps)(DashboardActivity);\n"]},"metadata":{},"sourceType":"module"}