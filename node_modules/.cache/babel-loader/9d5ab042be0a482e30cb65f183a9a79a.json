{"ast":null,"code":"var _jsxFileName = \"/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/table/Table.tsx\";\nimport React from \"react\";\nimport { IconButton, Table as MaterialComponent, TablePagination, TableSortLabel } from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Edit, Delete, Print } from \"@material-ui/icons\";\nimport \"./styles.scss\";\nimport TableBodyRow from \"./TableBodyRow\";\nimport { defaultComparator } from \"../../../libraries/sortUtils/sortUtils\";\n\nconst Table = ({\n  rowData,\n  tableHeader,\n  labelData,\n  isCollapsabile,\n  rowsPerPage,\n  columnsOrder,\n  compareRows = defaultComparator,\n  onEdit,\n  onDelete,\n  onPrint,\n  onView\n}) => {\n  const [order, setOrder] = React.useState(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"date\"); //keyof -> DTO\n\n  const [page, setPage] = React.useState(0);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const createSortHandler = property => event => {\n    handleRequestSort(event, property);\n  };\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const renderIcon = type => {\n    switch (type) {\n      case \"edit\":\n        return /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          onClick: onEdit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Edit, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        }));\n\n      case \"delete\":\n        return /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          onClick: onDelete,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Delete, {\n          color: \"secondary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }));\n\n      case \"print\":\n        return /*#__PURE__*/React.createElement(IconButton, {\n          size: \"small\",\n          onClick: onPrint,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Print, {\n          color: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        }));\n    }\n  };\n\n  const renderActions = () => {\n    if (onEdit || onDelete || onPrint || onView) {\n      return /*#__PURE__*/React.createElement(TableCell, {\n        scope: \"row\",\n        align: \"right\",\n        size: \"small\",\n        style: {\n          minWidth: 125\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, onEdit ? renderIcon(\"edit\") : \"\", onPrint ? renderIcon(\"print\") : \"\", onDelete ? renderIcon(\"delete\") : \"\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MaterialComponent, {\n    className: \"table\",\n    \"aria-label\": \"simple table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    className: \"table_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, isCollapsabile ? /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }) : \"\", tableHeader.map((h, i) => /*#__PURE__*/React.createElement(TableCell, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, columnsOrder.includes(h) ? /*#__PURE__*/React.createElement(TableSortLabel, {\n    active: orderBy === h,\n    direction: orderBy === h ? order : \"asc\",\n    onClick: createSortHandler(h),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, labelData[h]) : labelData[h])), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, \"\\xA0\"))), /*#__PURE__*/React.createElement(TableBody, {\n    className: \"table_body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, [...rowData].sort(compareRows(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => /*#__PURE__*/React.createElement(TableBodyRow, {\n    row: row,\n    key: index,\n    rowIndex: index,\n    labelData: labelData,\n    tableHeader: tableHeader,\n    renderActions: renderActions,\n    isCollapsabile: isCollapsabile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }))))), rowData.length > rowsPerPage ? /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: rowData.length,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [rowsPerPage],\n    page: page,\n    onChangePage: handleChangePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }) : \"\");\n};\n\nexport default Table;","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/table/Table.tsx"],"names":["React","IconButton","Table","MaterialComponent","TablePagination","TableSortLabel","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Edit","Delete","Print","TableBodyRow","defaultComparator","rowData","tableHeader","labelData","isCollapsabile","rowsPerPage","columnsOrder","compareRows","onEdit","onDelete","onPrint","onView","order","setOrder","useState","orderBy","setOrderBy","page","setPage","handleChangePage","event","newPage","createSortHandler","property","handleRequestSort","isAsc","renderIcon","type","renderActions","minWidth","map","h","i","includes","sort","slice","row","index","length"],"mappings":"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","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport { TOrder } from \"../../../libraries/sortUtils/types\";\nimport {\n  IconButton,\n  Table as MaterialComponent,\n  TablePagination,\n  TableSortLabel,\n} from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Edit, Delete, Print } from \"@material-ui/icons\";\nimport \"./styles.scss\";\nimport TableBodyRow from \"./TableBodyRow\";\nimport { IProps, TActions } from \"./types\";\nimport { defaultComparator } from \"../../../libraries/sortUtils/sortUtils\";\n\nconst Table: FunctionComponent<IProps> = ({\n  rowData,\n  tableHeader,\n  labelData,\n  isCollapsabile,\n  rowsPerPage,\n  columnsOrder,\n  compareRows = defaultComparator,\n  onEdit,\n  onDelete,\n  onPrint,\n  onView,\n}) => {\n  const [order, setOrder] = React.useState<TOrder>(\"desc\");\n  const [orderBy, setOrderBy] = React.useState(\"date\"); //keyof -> DTO\n  const [page, setPage] = React.useState(0);\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const createSortHandler =\n    (property: any) => (event: React.MouseEvent<unknown>) => {\n      handleRequestSort(event, property);\n    };\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: any\n  ) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const renderIcon = (type: TActions) => {\n    switch (type) {\n      case \"edit\":\n        return (\n          <IconButton size=\"small\" onClick={onEdit}>\n            <Edit />\n          </IconButton>\n        );\n      case \"delete\":\n        return (\n          <IconButton size=\"small\" onClick={onDelete}>\n            <Delete color=\"secondary\" />\n          </IconButton>\n        );\n      case \"print\":\n        return (\n          <IconButton size=\"small\" onClick={onPrint}>\n            <Print color=\"primary\" />\n          </IconButton>\n        );\n    }\n  };\n\n  const renderActions = () => {\n    if (onEdit || onDelete || onPrint || onView) {\n      return (\n        <TableCell\n          scope=\"row\"\n          align=\"right\"\n          size=\"small\"\n          style={{ minWidth: 125 }}\n        >\n          {onEdit ? renderIcon(\"edit\") : \"\"}\n          {onPrint ? renderIcon(\"print\") : \"\"}\n          {onDelete ? renderIcon(\"delete\") : \"\"}\n        </TableCell>\n      );\n    }\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <MaterialComponent className=\"table\" aria-label=\"simple table\">\n          <TableHead className=\"table_header\">\n            <TableRow>\n              {isCollapsabile ? <TableCell /> : \"\"}\n              {tableHeader.map((h: string, i) => (\n                <TableCell key={i}>\n                  {columnsOrder.includes(h) ? (\n                    <TableSortLabel\n                      active={orderBy === h}\n                      direction={orderBy === h ? order : \"asc\"}\n                      onClick={createSortHandler(h)}\n                    >\n                      {labelData[h]}\n                    </TableSortLabel>\n                  ) : (\n                    labelData[h]\n                  )}\n                </TableCell>\n              ))}\n              <TableCell>&nbsp;</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody className=\"table_body\">\n            {[...rowData]\n              .sort(compareRows(order, orderBy))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => (\n                <TableBodyRow\n                  row={row}\n                  key={index}\n                  rowIndex={index}\n                  labelData={labelData}\n                  tableHeader={tableHeader}\n                  renderActions={renderActions}\n                  isCollapsabile={isCollapsabile}\n                />\n              ))}\n          </TableBody>\n        </MaterialComponent>\n      </TableContainer>\n      {rowData.length > rowsPerPage ? (\n        <TablePagination\n          component=\"div\"\n          count={rowData.length}\n          rowsPerPage={rowsPerPage}\n          rowsPerPageOptions={[rowsPerPage]}\n          page={page}\n          onChangePage={handleChangePage}\n        />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}