{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { scrollToElement } from \"../../../libraries/uiUtils/scrollToElement\";\nimport \"./styles.scss\";\nimport { createBill, createBillReset } from \"../../../state/bills/actions\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n\n  const onSubmit = bill => {\n    createBill(bill);\n  };\n\n  const [activityTransitionState, setActivityTransitionState] = useState(\"IDLE\");\n  useEffect(() => {\n    if (activityTransitionState === \"TO_NEW_BILL_RESET\" || activityTransitionState === \"TO_BILL_HOME\") {\n      createBillReset();\n      setShouldResetForm(true);\n    }\n  }, [activityTransitionState, createBillReset]);\n  const infoBoxRef = useRef(null);\n  useEffect(() => {\n    if (hasFailed) {\n      scrollToElement(infoBoxRef.current);\n    }\n  }, [hasFailed]);\n  const [shouldResetForm, setShouldResetForm] = useState(false);\n\n  const resetFormCallback = () => {\n    setShouldResetForm(false);\n    setActivityTransitionState(\"IDLE\");\n    scrollToElement(null);\n  };\n\n  switch (activityTransitionState) {\n    case \"TO_BILL_HOME\":\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: billHomeRoute,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"new_Bill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppHeader, {\n        userCredentials: userCredentials,\n        breadcrumbMap: breadcrumbMap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, \"inserimento bill\")))), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }));\n  }\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\"\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useRef","useState","AppHeader","Footer","useTranslation","connect","Redirect","scrollToElement","createBill","createBillReset","NewBillActivity","userCredentials","isLoading","hasSucceeded","hasFailed","billHomeRoute","t","breadcrumbMap","onSubmit","bill","activityTransitionState","setActivityTransitionState","setShouldResetForm","infoBoxRef","current","shouldResetForm","resetFormCallback","mapStateToProps","state","main","authentication","data","bills","status","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { IState } from \"../../../types\";\nimport { useFormik } from \"formik\";\nimport { Divider, TextField } from '@material-ui/core';\nimport { BillDTO } from \"../../../generated\";\nimport { FullBillDTO } from \"../../../generated\";\nimport { scrollToElement } from \"../../../libraries/uiUtils/scrollToElement\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport \"./styles.scss\";\nimport {\n    createBill,\n    createBillReset,\n} from \"../../../state/bills/actions\";\nimport {\n    IDispatchProps,\n    IStateProps,\n    TActivityTransitionState,\n    TProps,\n} from \"./types\";\n\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n}) => {\n    const { t } = useTranslation();\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n\n    const onSubmit = (bill: FullBillDTO) => {\n        createBill(bill);\n    };\n\n    const [activityTransitionState, setActivityTransitionState] =\n        useState<TActivityTransitionState>(\"IDLE\");\n\n    useEffect(() => {\n        if (\n            activityTransitionState === \"TO_NEW_BILL_RESET\" ||\n            activityTransitionState === \"TO_BILL_HOME\"\n        ) {\n            createBillReset();\n            setShouldResetForm(true);\n        }\n    }, [activityTransitionState, createBillReset]);\n\n\n    const infoBoxRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (hasFailed) {\n            scrollToElement(infoBoxRef.current);\n        }\n    }, [hasFailed]);\n\n    const [shouldResetForm, setShouldResetForm] = useState(false);\n\n    const resetFormCallback = () => {\n        setShouldResetForm(false);\n        setActivityTransitionState(\"IDLE\");\n        scrollToElement(null);\n    };\n\n    switch (activityTransitionState) {\n        case \"TO_BILL_HOME\":\n            return <Redirect to={billHomeRoute} />;\n        default:\n            return (\n                <div className=\"new_Bill\">\n                    <AppHeader\n                        userCredentials={userCredentials}\n                        breadcrumbMap={breadcrumbMap}\n                    />\n                    <div className=\"newBill__background\">\n                        <div className=\"newBill__content\">\n                            <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                            <div className=\"newBill__panel\">\n                                <h3>inserimento bill</h3>\n                            </div>\n                        </div>\n                    </div>\n                    <Footer />\n                </div>\n            );\n    }\n}\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    isLoading: state.bills.createBill.status === \"LOADING\",\n    hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n    hasFailed: state.bills.createBill.status === \"FAIL\",\n});\n\nconst mapDispatchToProps: IDispatchProps = {\n    createBill,\n    createBillReset,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}