{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class DischargeTypeControllerApi extends BaseAPI {\n  /**\n   * deleteDischargeType\n   */\n  deleteDischargeTypeUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteDischargeTypeUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/dischargetypes/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDischargeTypesUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/dischargetypes',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newDischargeTypeUsingPOST({\n    dischTypeDTO\n  }, opts) {\n    throwIfNullOrUndefined(dischTypeDTO, 'dischTypeDTO', 'newDischargeTypeUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/dischargetypes',\n      method: 'POST',\n      headers,\n      body: dischTypeDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateDischargeTypetUsingPUT({\n    dischTypeDTO\n  }, opts) {\n    throwIfNullOrUndefined(dischTypeDTO, 'dischTypeDTO', 'updateDischargeTypetUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/dischargetypes',\n      method: 'PUT',\n      headers,\n      body: dischTypeDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/generated/apis/DischargeTypeControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","DischargeTypeControllerApi","deleteDischargeTypeUsingDELETE","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getDischargeTypesUsingGET","newDischargeTypeUsingPOST","dischTypeDTO","body","updateDischargeTypetUsingPUT"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    DischargeTypeDTO,\n} from '../models';\n\nexport interface DeleteDischargeTypeUsingDELETERequest {\n    code: string;\n}\n\nexport interface NewDischargeTypeUsingPOSTRequest {\n    dischTypeDTO: DischargeTypeDTO;\n}\n\nexport interface UpdateDischargeTypetUsingPUTRequest {\n    dischTypeDTO: DischargeTypeDTO;\n}\n\n/**\n * no description\n */\nexport class DischargeTypeControllerApi extends BaseAPI {\n\n    /**\n     * deleteDischargeType\n     */\n    deleteDischargeTypeUsingDELETE({ code }: DeleteDischargeTypeUsingDELETERequest): Observable<boolean>\n    deleteDischargeTypeUsingDELETE({ code }: DeleteDischargeTypeUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    deleteDischargeTypeUsingDELETE({ code }: DeleteDischargeTypeUsingDELETERequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteDischargeTypeUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<boolean>({\n            url: '/dischargetypes/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDischargeTypes\n     */\n    getDischargeTypesUsingGET(): Observable<Array<DischargeTypeDTO>>\n    getDischargeTypesUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<DischargeTypeDTO>>>\n    getDischargeTypesUsingGET(opts?: OperationOpts): Observable<Array<DischargeTypeDTO> | RawAjaxResponse<Array<DischargeTypeDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DischargeTypeDTO>>({\n            url: '/dischargetypes',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newDischargeType\n     */\n    newDischargeTypeUsingPOST({ dischTypeDTO }: NewDischargeTypeUsingPOSTRequest): Observable<string>\n    newDischargeTypeUsingPOST({ dischTypeDTO }: NewDischargeTypeUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<string>>\n    newDischargeTypeUsingPOST({ dischTypeDTO }: NewDischargeTypeUsingPOSTRequest, opts?: OperationOpts): Observable<string | RawAjaxResponse<string>> {\n        throwIfNullOrUndefined(dischTypeDTO, 'dischTypeDTO', 'newDischargeTypeUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<string>({\n            url: '/dischargetypes',\n            method: 'POST',\n            headers,\n            body: dischTypeDTO,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateDischargeTypet\n     */\n    updateDischargeTypetUsingPUT({ dischTypeDTO }: UpdateDischargeTypetUsingPUTRequest): Observable<string>\n    updateDischargeTypetUsingPUT({ dischTypeDTO }: UpdateDischargeTypetUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<string>>\n    updateDischargeTypetUsingPUT({ dischTypeDTO }: UpdateDischargeTypetUsingPUTRequest, opts?: OperationOpts): Observable<string | RawAjaxResponse<string>> {\n        throwIfNullOrUndefined(dischTypeDTO, 'dischTypeDTO', 'updateDischargeTypetUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<string>({\n            url: '/dischargetypes',\n            method: 'PUT',\n            headers,\n            body: dischTypeDTO,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}