{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport \"./styles.scss\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { DataGrid } from '@material-ui/data-grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport { createBill, createBillReset, getBill } from \"../../../state/bills/actions\";\nimport { getPrices, getPriceLists } from \"../../../state/prices/actions\";\nimport { getMedicals } from \"../../../state/medicals/actions\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute,\n  med,\n  getMedicals,\n  getMedStat,\n  bill,\n  getBill,\n  prices,\n  getPrices,\n  priceLists,\n  getPriceLists\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n  useEffect(() => {\n    getMedicals();\n  }, []);\n  useEffect(() => {\n    getPrices();\n  }, []); //\n  //Gestione Dialog\n  //\n\n  const [open_med, setOpen_med] = React.useState(false);\n\n  const handleClickOpen_med = () => {\n    setOpen_med(true);\n  };\n\n  const handleClose_med = () => {\n    setOpen_med(false);\n  };\n\n  const [open_ope, setOpen_ope] = React.useState(false);\n\n  const handleClickOpen_ope = () => {\n    setOpen_ope(true);\n  };\n\n  const handleClose_ope = () => {\n    setOpen_ope(false);\n  };\n\n  const [open_exa, setOpen_exa] = React.useState(false);\n\n  const handleClickOpen_exa = () => {\n    setOpen_exa(true);\n  };\n\n  const handleClose_exa = () => {\n    setOpen_exa(false);\n  };\n\n  const [open_oth, setOpen_oth] = React.useState(false);\n\n  const handleClickOpen_oth = () => {\n    setOpen_oth(true);\n  };\n\n  const handleClose_oth = () => {\n    setOpen_oth(false);\n  };\n\n  const [open_cust, setOpen_cust] = React.useState(false);\n\n  const handleClickOpen_cust = () => {\n    setOpen_cust(true);\n  };\n\n  const handleClose_cust = () => {\n    setOpen_cust(false);\n  }; //\n  //\n  //\n  //test useState\n  //\n\n\n  const [selectionModel, setSelectionModel] = React.useState([]);\n  let item = [];\n  const [items, setItems] = React.useState([]);\n  const [medicals, setMedicals] = React.useState([]);\n  const [operations, setOperations] = React.useState([]);\n  const [exams, setExams] = React.useState([]);\n  const [others, setOthers] = React.useState([]);\n  const [custom, setCustom] = React.useState();\n\n  const get_items_m = () => {\n    medicals === null || medicals === void 0 ? void 0 : medicals.forEach(function (i, j) {\n      if (!items.includes(i)) setItems(prevItems => [...prevItems, i]);\n    });\n  };\n\n  const get_items_o = () => {\n    operations === null || operations === void 0 ? void 0 : operations.forEach(function (i, j) {\n      if (!items.includes(i)) setItems(prevItems => [...prevItems, i]);\n    });\n  };\n\n  const get_items_e = () => {\n    exams === null || exams === void 0 ? void 0 : exams.forEach(function (i, j) {\n      if (!items.includes(i)) setItems(prevItems => [...prevItems, i]);\n    });\n  };\n\n  const get_items_ot = () => {\n    others === null || others === void 0 ? void 0 : others.forEach(function (i, j) {\n      if (!items.includes(i)) setItems(prevItems => [...prevItems, i]);\n    });\n  };\n\n  const get_items_cust = () => {\n    const i = 2;\n    setItems(prevItems => [...prevItems, i]);\n  };\n\n  const delete_item = e => {\n    console.log(e);\n    setItems(items.filter(item => e !== item));\n  };\n\n  const get_input = e => {\n    const a = e.target.id;\n    console.log(a); //setCustom({id:1, description:'ciao'});\n  };\n\n  const test = e => {\n    e.preventDefault();\n    console.log(e);\n  }; //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid MED//\n  //  //  //  //  //  //\n\n\n  const columns_med = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_med = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list;\n\n    if (m.group === \"MED\") rows_med.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list = m.list) === null || _m$list === void 0 ? void 0 : _m$list.description\n    });\n  });\n  rows_med.shift(); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid OPE//\n  //  //  //  //  //  //\n\n  const columns_ope = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_ope = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list2;\n\n    if (m.group === \"OPE\") rows_ope.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list2 = m.list) === null || _m$list2 === void 0 ? void 0 : _m$list2.description\n    });\n  });\n  rows_ope.shift(); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid EXA//\n  //  //  //  //  //  //\n\n  const columns_exa = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_exa = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list3;\n\n    if (m.group === \"EXA\") rows_exa.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list3 = m.list) === null || _m$list3 === void 0 ? void 0 : _m$list3.description\n    });\n  });\n  rows_exa.shift(); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid OTH//\n  //  //  //  //  //  //\n\n  const columns_oth = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_oth = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list4;\n\n    if (m.group === \"OTH\") rows_oth.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list4 = m.list) === null || _m$list4 === void 0 ? void 0 : _m$list4.description\n    });\n  });\n  rows_oth.shift(); //\n  //\n  //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 21\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Date_Pat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TextData, {\n    className: \"bill_Date\",\n    id: \"date\",\n    label: \"Data\",\n    type: \"date\",\n    defaultValue: \"\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"bill_SelectPat\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 37\n    }\n  }, \"find Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_InputPat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 67\n    }\n  }, \"Patient\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 89\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"patient_input\",\n    value: \"Mario Rossi\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 102\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    className: \"bill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Medical\",\n    onClick: handleClickOpen_med,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 102\n    }\n  }), \"Medical\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_med,\n    onClose: handleClose_med,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 45\n    }\n  }, \"Select Medical\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: get_items_m,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 45\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_med,\n    columns: columns_med,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setMedicals(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 53\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Medical\",\n    onClick: handleClickOpen_ope,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 102\n    }\n  }), \"Operation\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_ope,\n    onClose: handleClose_ope,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 45\n    }\n  }, \"Select Operation\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: get_items_o,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 45\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_ope,\n    columns: columns_ope,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setOperations(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 53\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Exam\",\n    onClick: handleClickOpen_exa,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 99\n    }\n  }), \"Exam\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_exa,\n    onClose: handleClose_exa,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 45\n    }\n  }, \"Select Exam\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: get_items_e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 45\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_exa,\n    columns: columns_exa,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setExams(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 53\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Other\",\n    onClick: handleClickOpen_oth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 100\n    }\n  }), \"Other\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_oth,\n    onClose: handleClose_oth,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 45\n    }\n  }, \"Select Other\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: get_items_ot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 45\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 450\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    rows: rows_oth,\n    columns: columns_oth,\n    checkboxSelection: true,\n    disableSelectionOnClick: true,\n    onSelectionModelChange: e => setOthers(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 53\n    }\n  }))))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Custom\",\n    onClick: handleClickOpen_cust,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 98\n    }\n  }), \"Custom\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open_cust,\n    onClose: handleClose_cust,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 41\n    }\n  }, \"Add custom Item\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => test(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"description\",\n    label: \"Description\",\n    onChange: e => get_input(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"amount\",\n    label: \"Amount\",\n    onChange: e => get_input(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 49\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 49\n    }\n  }, \"Confirm\")))), /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(SaveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 66\n    }\n  }), \"SAVE\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 49\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 49\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 49\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 49\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 41\n    }\n  }, items === null || items === void 0 ? void 0 : items.map((x, y) => {\n    var _prices$find, _prices$find$list, _prices$find2, _prices$find2$list, _prices$find3;\n\n    return /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 57\n      }\n    }, (prices === null || prices === void 0 ? void 0 : (_prices$find = prices.find(p => p.id == x)) === null || _prices$find === void 0 ? void 0 : (_prices$find$list = _prices$find.list) === null || _prices$find$list === void 0 ? void 0 : _prices$find$list.description) === \"\" ? others : prices === null || prices === void 0 ? void 0 : (_prices$find2 = prices.find(p => p.id == x)) === null || _prices$find2 === void 0 ? void 0 : (_prices$find2$list = _prices$find2.list) === null || _prices$find2$list === void 0 ? void 0 : _prices$find2$list.description), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 57\n      }\n    }, prices === null || prices === void 0 ? void 0 : (_prices$find3 = prices.find(p => p.id == x)) === null || _prices$find3 === void 0 ? void 0 : _prices$find3.price), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 68\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 76\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 103\n      }\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => delete_item(x),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 61\n      }\n    }, \"X\")));\n  }))))))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\",\n  bill: state.bills.getBill.data,\n  med: state.medicals.medicalsOrderByName.data,\n  prices: state.prices.getPrices.data,\n  getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n  priceLists: state.prices.getPriceLists.data\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset,\n  getMedicals,\n  getBill,\n  getPrices,\n  getPriceLists\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","AppHeader","Footer","Button","Table","TextData","TableBody","TableCell","TableContainer","TableHead","TableRow","Divider","ListItem","List","Paper","useTranslation","connect","Dialog","DataGrid","DialogContent","DialogTitle","AddIcon","SaveIcon","TextField","createBill","createBillReset","getBill","getPrices","getPriceLists","getMedicals","NewBillActivity","userCredentials","isLoading","hasSucceeded","hasFailed","billHomeRoute","med","getMedStat","bill","prices","priceLists","t","breadcrumbMap","open_med","setOpen_med","useState","handleClickOpen_med","handleClose_med","open_ope","setOpen_ope","handleClickOpen_ope","handleClose_ope","open_exa","setOpen_exa","handleClickOpen_exa","handleClose_exa","open_oth","setOpen_oth","handleClickOpen_oth","handleClose_oth","open_cust","setOpen_cust","handleClickOpen_cust","handleClose_cust","selectionModel","setSelectionModel","item","items","setItems","medicals","setMedicals","operations","setOperations","exams","setExams","others","setOthers","custom","setCustom","get_items_m","forEach","i","j","includes","prevItems","get_items_o","get_items_e","get_items_ot","get_items_cust","delete_item","e","console","log","filter","get_input","a","target","id","test","preventDefault","columns_med","field","headerName","width","editable","rows_med","m","group","push","description","list","shift","columns_ope","rows_ope","columns_exa","rows_exa","columns_oth","rows_oth","shrink","height","map","x","y","find","p","price","mapStateToProps","state","main","authentication","data","bills","status","medicalsOrderByName","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { IState } from \"../../../types\";\nimport \"./styles.scss\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { DataGrid, GridSelectionModel, GridColDef, GridRowId } from '@material-ui/data-grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    createBill,\n    createBillReset,\n    getBill,\n} from \"../../../state/bills/actions\";\nimport {\n    getPrices,\n    getPriceLists\n} from \"../../../state/prices/actions\"\nimport {\n    getMedicals,\n} from \"../../../state/medicals/actions\"\nimport {\n    IDispatchProps,\n    IStateProps,\n    TProps,\n} from \"./types\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n    med,\n    getMedicals,\n    getMedStat,\n    bill,\n    getBill,\n    prices,\n    getPrices,\n    priceLists,\n    getPriceLists\n}) => {\n    const { t } = useTranslation();\n    type Custom = {\n        id: number,\n        description: string,\n        amount: string,\n    }\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n    useEffect(() => {\n        getMedicals();\n    }, []);\n\n    useEffect(() => {\n        getPrices();\n    }, [])\n    //\n    //Gestione Dialog\n    //\n    const [open_med, setOpen_med] = React.useState(false);\n\n    const handleClickOpen_med = () => {\n        setOpen_med(true);\n    };\n\n    const handleClose_med = () => {\n        setOpen_med(false);\n    };\n\n    const [open_ope, setOpen_ope] = React.useState(false);\n\n    const handleClickOpen_ope = () => {\n        setOpen_ope(true);\n    };\n\n    const handleClose_ope = () => {\n        setOpen_ope(false);\n    };\n\n    const [open_exa, setOpen_exa] = React.useState(false);\n\n    const handleClickOpen_exa = () => {\n        setOpen_exa(true);\n    };\n\n    const handleClose_exa = () => {\n        setOpen_exa(false);\n    };\n\n    const [open_oth, setOpen_oth] = React.useState(false);\n\n    const handleClickOpen_oth = () => {\n        setOpen_oth(true);\n    };\n\n    const handleClose_oth = () => {\n        setOpen_oth(false);\n    };\n\n    const [open_cust, setOpen_cust] = React.useState(false);\n\n    const handleClickOpen_cust = () => {\n        setOpen_cust(true);\n    };\n\n    const handleClose_cust = () => {\n        setOpen_cust(false);\n    };\n    //\n    //\n\n    //\n    //test useState\n    //\n    const [selectionModel, setSelectionModel] = React.useState<GridSelectionModel>([]);\n    let item: Array<{}> = [];\n    const [items, setItems] = React.useState<GridSelectionModel>([]);\n    const [medicals, setMedicals] = React.useState<GridSelectionModel>([]);\n    const [operations, setOperations] = React.useState<GridSelectionModel>([]);\n    const [exams, setExams] = React.useState<GridSelectionModel>([]);\n    const [others, setOthers] = React.useState<GridSelectionModel>([]);\n    const [custom, setCustom] = React.useState<Custom>();\n    const get_items_m = () => {\n        medicals?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_o = () => {\n        operations?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_e = () => {\n        exams?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_ot = () => {\n        others?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n\n    const get_items_cust = () => {\n        const i: GridRowId = 2;\n        setItems(prevItems => [...prevItems, i]);\n    }\n\n    const delete_item = (e: GridRowId) => {\n        console.log(e);\n        setItems(items.filter(item => e !== item));\n    }\n\n\n\n    const get_input = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const a = e.target.id as string;\n        console.log(a);\n\n        //setCustom({id:1, description:'ciao'});\n    }\n\n    const test = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        console.log(e);\n    }\n    //\n    //\n\n\n    //  //  //  //  //  //\n    // Gestione Grid MED//\n    //  //  //  //  //  //\n    const columns_med: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_med = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"MED\")\n            rows_med.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OPE//\n    //  //  //  //  //  //\n    const columns_ope: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_ope = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OPE\")\n            rows_ope.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_ope.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid EXA//\n    //  //  //  //  //  //\n    const columns_exa: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_exa = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"EXA\")\n            rows_exa.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_exa.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OTH//\n    //  //  //  //  //  //\n    const columns_oth: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_oth = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OTH\")\n            rows_oth.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_oth.shift();\n    //\n    //\n\n\n    //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n\n\n    return (\n        <div className=\"new_Bill\">\n            <AppHeader\n                userCredentials={userCredentials}\n                breadcrumbMap={breadcrumbMap}\n            />\n            <div className=\"newBill__background\">\n                <div className=\"newBill__content\">\n                    <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                    <div className=\"newBill__panel\">\n                        <form>\n                            <div className=\"newBill_Head\">\n                                <div className=\"newBill_Date_Pat\">\n                                    <TextData\n                                        className='bill_Date'\n                                        id=\"date\"\n                                        label=\"Data\"\n                                        type=\"date\"\n                                        defaultValue=\"\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                    />\n                                    <Button className='bill_SelectPat' variant=\"outlined\">find Patient</Button>\n                                </div>\n                                <div className=\"newBill_InputPat\"><label>Patient</label><span></span><input className=\"patient_input\" value=\"Mario Rossi\" disabled></input></div>\n                            </div>\n                            <Divider />\n                            <div className=\"newBill_Drawer\">\n                                <List className=\"bill_Drawer\">\n                                    <div>\n                                        <ListItem button key=\"Medical\" onClick={handleClickOpen_med}><AddIcon></AddIcon>Medical</ListItem>\n                                        <Dialog open={open_med} onClose={handleClose_med} aria-labelledby=\"form-dialog-title\">\n                                            <DialogTitle id=\"form-dialog-title\">Select Medical</DialogTitle>\n                                            <Button onClick={get_items_m}>Confirm</Button>\n                                            <DialogContent>\n                                                <div style={{ height: 400, width: 450 }}>\n                                                    <DataGrid\n                                                        rows={rows_med}\n                                                        columns={columns_med}\n                                                        checkboxSelection\n                                                        disableSelectionOnClick\n                                                        onSelectionModelChange={e => setMedicals(e)}\n                                                    />\n                                                </div>\n                                            </DialogContent>\n                                        </Dialog>\n                                    </div>\n                                    <div>\n                                        <ListItem button key=\"Medical\" onClick={handleClickOpen_ope}><AddIcon></AddIcon>Operation</ListItem>\n                                        <Dialog open={open_ope} onClose={handleClose_ope} aria-labelledby=\"form-dialog-title\">\n                                            <DialogTitle id=\"form-dialog-title\">Select Operation</DialogTitle>\n                                            <Button onClick={get_items_o}>Confirm</Button>\n                                            <DialogContent>\n                                                <div style={{ height: 400, width: 450 }}>\n                                                    <DataGrid\n                                                        rows={rows_ope}\n                                                        columns={columns_ope}\n                                                        checkboxSelection\n                                                        disableSelectionOnClick\n                                                        onSelectionModelChange={e => setOperations(e)}\n                                                    />\n                                                </div>\n                                            </DialogContent>\n                                        </Dialog>\n                                    </div>\n                                    <div>\n                                        <ListItem button key=\"Exam\" onClick={handleClickOpen_exa}><AddIcon></AddIcon>Exam</ListItem>\n                                        <Dialog open={open_exa} onClose={handleClose_exa} aria-labelledby=\"form-dialog-title\">\n                                            <DialogTitle id=\"form-dialog-title\">Select Exam</DialogTitle>\n                                            <Button onClick={get_items_e}>Confirm</Button>\n                                            <DialogContent>\n                                                <div style={{ height: 400, width: 450 }}>\n                                                    <DataGrid\n                                                        rows={rows_exa}\n                                                        columns={columns_exa}\n                                                        checkboxSelection\n                                                        disableSelectionOnClick\n                                                        onSelectionModelChange={e => setExams(e)}\n                                                    />\n                                                </div>\n                                            </DialogContent>\n                                        </Dialog>\n                                    </div>\n                                    <div>\n                                        <ListItem button key=\"Other\" onClick={handleClickOpen_oth}><AddIcon></AddIcon>Other</ListItem>\n                                        <Dialog open={open_oth} onClose={handleClose_oth} aria-labelledby=\"form-dialog-title\">\n                                            <DialogTitle id=\"form-dialog-title\">Select Other</DialogTitle>\n                                            <Button onClick={get_items_ot}>Confirm</Button>\n                                            <DialogContent>\n                                                <div style={{ height: 400, width: 450 }}>\n                                                    <DataGrid\n                                                        rows={rows_oth}\n                                                        columns={columns_oth}\n                                                        checkboxSelection\n                                                        disableSelectionOnClick\n                                                        onSelectionModelChange={e => setOthers(e)}\n                                                    />\n                                                </div>\n                                            </DialogContent>\n                                        </Dialog>\n                                    </div>\n                                    <ListItem button key=\"Custom\" onClick={handleClickOpen_cust}><AddIcon></AddIcon>Custom</ListItem>\n                                    <Dialog open={open_cust} onClose={handleClose_cust} aria-labelledby=\"form-dialog-title\">\n                                        <DialogTitle id=\"form-dialog-title\">Add custom Item</DialogTitle>\n                                        <DialogContent>\n                                            <form onSubmit={e => test(e)}>\n                                                <TextField required id=\"description\" label=\"Description\" onChange={(e) => get_input(e)} />\n                                                <TextField required id=\"amount\" label=\"Amount\" onChange={(e) => get_input(e)} />\n                                                <Button type=\"submit\">Confirm</Button>\n                                            </form>\n                                        </DialogContent>\n                                    </Dialog>\n                                    <ListItem button key=\"Other\"><SaveIcon></SaveIcon>SAVE</ListItem>\n                                </List>\n                            </div>\n                            <div className=\"newBill_Rows\">\n                                <TableContainer component={Paper}>\n                                    <Table size=\"small\" aria-label=\"a dense table\">\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Description</TableCell>\n                                                <TableCell>Amount</TableCell>\n                                                <TableCell>Qty</TableCell>\n                                                <TableCell>Delete</TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {items?.map((x, y) => {\n                                                return (\n                                                    <TableRow>\n                                                        <TableCell>{(prices?.find(p => p.id == x)?.list?.description === \"\") ? others : prices?.find(p => p.id == x)?.list?.description}</TableCell>\n                                                        <TableCell>{prices?.find(p => p.id == x)?.price}</TableCell>\n                                                        <TableCell><select><option value=\"1\"></option><option value=\"2\"></option></select></TableCell>\n                                                        <TableCell>\n                                                            <Button onClick={() => delete_item(x)}>X</Button>\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            })}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    isLoading: state.bills.createBill.status === \"LOADING\",\n    hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n    hasFailed: state.bills.createBill.status === \"FAIL\",\n    bill: state.bills.getBill.data,\n    med: state.medicals.medicalsOrderByName.data,\n    prices: state.prices.getPrices.data,\n    getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n    priceLists: state.prices.getPriceLists.data\n});\n\n\n\n\nconst mapDispatchToProps: IDispatchProps = {\n    createBill,\n    createBillReset,\n    getMedicals,\n    getBill,\n    getPrices,\n    getPriceLists\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}