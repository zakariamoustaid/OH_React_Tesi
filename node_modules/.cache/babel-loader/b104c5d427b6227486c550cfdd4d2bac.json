{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class AgeTypeControllerApi extends BaseAPI {\n  /**\n   * getAgeTypeByIndex\n   */\n  getAgeTypeByIndexUsingGET({\n    index\n  }, opts) {\n    throwIfNullOrUndefined(index, 'index', 'getAgeTypeByIndexUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/agetypes/{index}'.replace('{index}', encodeURI(index)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getAgeTypeCodeByAgeUsingGET({\n    age\n  }, opts) {\n    throwIfNullOrUndefined(age, 'age', 'getAgeTypeCodeByAgeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {\n      // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n      'age': age\n    };\n    return this.request({\n      url: '/agetypes/code',\n      method: 'GET',\n      headers,\n      query\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getAllAgeTypesUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/agetypes',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateAgeTypeUsingPUT({\n    ageTypeDTO\n  }, opts) {\n    throwIfNullOrUndefined(ageTypeDTO, 'ageTypeDTO', 'updateAgeTypeUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/agetypes',\n      method: 'PUT',\n      headers,\n      body: ageTypeDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/generated/apis/AgeTypeControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","AgeTypeControllerApi","getAgeTypeByIndexUsingGET","index","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getAgeTypeCodeByAgeUsingGET","age","query","getAllAgeTypesUsingGET","updateAgeTypeUsingPUT","ageTypeDTO","body"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    AgeType,\n    AgeTypeDTO,\n} from '../models';\n\nexport interface GetAgeTypeByIndexUsingGETRequest {\n    index: number;\n}\n\nexport interface GetAgeTypeCodeByAgeUsingGETRequest {\n    age: number;\n}\n\nexport interface UpdateAgeTypeUsingPUTRequest {\n    ageTypeDTO: AgeTypeDTO;\n}\n\n/**\n * no description\n */\nexport class AgeTypeControllerApi extends BaseAPI {\n\n    /**\n     * getAgeTypeByIndex\n     */\n    getAgeTypeByIndexUsingGET({ index }: GetAgeTypeByIndexUsingGETRequest): Observable<AgeType>\n    getAgeTypeByIndexUsingGET({ index }: GetAgeTypeByIndexUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<AgeType>>\n    getAgeTypeByIndexUsingGET({ index }: GetAgeTypeByIndexUsingGETRequest, opts?: OperationOpts): Observable<AgeType | RawAjaxResponse<AgeType>> {\n        throwIfNullOrUndefined(index, 'index', 'getAgeTypeByIndexUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<AgeType>({\n            url: '/agetypes/{index}'.replace('{index}', encodeURI(index)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getAgeTypeCodeByAge\n     */\n    getAgeTypeCodeByAgeUsingGET({ age }: GetAgeTypeCodeByAgeUsingGETRequest): Observable<{ [key: string]: string; }>\n    getAgeTypeCodeByAgeUsingGET({ age }: GetAgeTypeCodeByAgeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<{ [key: string]: string; }>>\n    getAgeTypeCodeByAgeUsingGET({ age }: GetAgeTypeCodeByAgeUsingGETRequest, opts?: OperationOpts): Observable<{ [key: string]: string; } | RawAjaxResponse<{ [key: string]: string; }>> {\n        throwIfNullOrUndefined(age, 'age', 'getAgeTypeCodeByAgeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n            'age': age,\n        };\n\n        return this.request<{ [key: string]: string; }>({\n            url: '/agetypes/code',\n            method: 'GET',\n            headers,\n            query,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getAllAgeTypes\n     */\n    getAllAgeTypesUsingGET(): Observable<Array<AgeTypeDTO>>\n    getAllAgeTypesUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<AgeTypeDTO>>>\n    getAllAgeTypesUsingGET(opts?: OperationOpts): Observable<Array<AgeTypeDTO> | RawAjaxResponse<Array<AgeTypeDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<AgeTypeDTO>>({\n            url: '/agetypes',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateAgeType\n     */\n    updateAgeTypeUsingPUT({ ageTypeDTO }: UpdateAgeTypeUsingPUTRequest): Observable<AgeTypeDTO>\n    updateAgeTypeUsingPUT({ ageTypeDTO }: UpdateAgeTypeUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<AgeTypeDTO>>\n    updateAgeTypeUsingPUT({ ageTypeDTO }: UpdateAgeTypeUsingPUTRequest, opts?: OperationOpts): Observable<AgeTypeDTO | RawAjaxResponse<AgeTypeDTO>> {\n        throwIfNullOrUndefined(ageTypeDTO, 'ageTypeDTO', 'updateAgeTypeUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<AgeTypeDTO>({\n            url: '/agetypes',\n            method: 'PUT',\n            headers,\n            body: ageTypeDTO,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}