{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class VaccineTypeControllerApi extends BaseAPI {\n  /**\n   * checkVaccineTypeCode\n   */\n  checkVaccineTypeCodeUsingGET({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'checkVaccineTypeCodeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/vaccinetype/check/{code}'.replace('{code}', encodeURI(code)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  deleteVaccineTypeUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteVaccineTypeUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/vaccinetype/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getVaccineTypeUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/vaccinetype',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newVaccineTypeUsingPOST({\n    newVaccineType\n  }, opts) {\n    throwIfNullOrUndefined(newVaccineType, 'newVaccineType', 'newVaccineTypeUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/vaccinetype',\n      method: 'POST',\n      headers,\n      body: newVaccineType\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateVaccineTypeUsingPUT({\n    updateVaccineType\n  }, opts) {\n    throwIfNullOrUndefined(updateVaccineType, 'updateVaccineType', 'updateVaccineTypeUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/vaccinetype',\n      method: 'PUT',\n      headers,\n      body: updateVaccineType\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/generated/apis/VaccineTypeControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","VaccineTypeControllerApi","checkVaccineTypeCodeUsingGET","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","deleteVaccineTypeUsingDELETE","getVaccineTypeUsingGET","newVaccineTypeUsingPOST","newVaccineType","body","updateVaccineTypeUsingPUT","updateVaccineType"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    ResponseEntity,\n    VaccineTypeDTO,\n} from '../models';\n\nexport interface CheckVaccineTypeCodeUsingGETRequest {\n    code: string;\n}\n\nexport interface DeleteVaccineTypeUsingDELETERequest {\n    code: string;\n}\n\nexport interface NewVaccineTypeUsingPOSTRequest {\n    newVaccineType: VaccineTypeDTO;\n}\n\nexport interface UpdateVaccineTypeUsingPUTRequest {\n    updateVaccineType: VaccineTypeDTO;\n}\n\n/**\n * no description\n */\nexport class VaccineTypeControllerApi extends BaseAPI {\n\n    /**\n     * checkVaccineTypeCode\n     */\n    checkVaccineTypeCodeUsingGET({ code }: CheckVaccineTypeCodeUsingGETRequest): Observable<boolean>\n    checkVaccineTypeCodeUsingGET({ code }: CheckVaccineTypeCodeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    checkVaccineTypeCodeUsingGET({ code }: CheckVaccineTypeCodeUsingGETRequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(code, 'code', 'checkVaccineTypeCodeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<boolean>({\n            url: '/vaccinetype/check/{code}'.replace('{code}', encodeURI(code)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * deleteVaccineType\n     */\n    deleteVaccineTypeUsingDELETE({ code }: DeleteVaccineTypeUsingDELETERequest): Observable<ResponseEntity>\n    deleteVaccineTypeUsingDELETE({ code }: DeleteVaccineTypeUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    deleteVaccineTypeUsingDELETE({ code }: DeleteVaccineTypeUsingDELETERequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteVaccineTypeUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/vaccinetype/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getVaccineType\n     */\n    getVaccineTypeUsingGET(): Observable<Array<VaccineTypeDTO>>\n    getVaccineTypeUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<VaccineTypeDTO>>>\n    getVaccineTypeUsingGET(opts?: OperationOpts): Observable<Array<VaccineTypeDTO> | RawAjaxResponse<Array<VaccineTypeDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<VaccineTypeDTO>>({\n            url: '/vaccinetype',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newVaccineType\n     */\n    newVaccineTypeUsingPOST({ newVaccineType }: NewVaccineTypeUsingPOSTRequest): Observable<ResponseEntity>\n    newVaccineTypeUsingPOST({ newVaccineType }: NewVaccineTypeUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    newVaccineTypeUsingPOST({ newVaccineType }: NewVaccineTypeUsingPOSTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(newVaccineType, 'newVaccineType', 'newVaccineTypeUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/vaccinetype',\n            method: 'POST',\n            headers,\n            body: newVaccineType,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateVaccineType\n     */\n    updateVaccineTypeUsingPUT({ updateVaccineType }: UpdateVaccineTypeUsingPUTRequest): Observable<ResponseEntity>\n    updateVaccineTypeUsingPUT({ updateVaccineType }: UpdateVaccineTypeUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>\n    updateVaccineTypeUsingPUT({ updateVaccineType }: UpdateVaccineTypeUsingPUTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {\n        throwIfNullOrUndefined(updateVaccineType, 'updateVaccineType', 'updateVaccineTypeUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<ResponseEntity>({\n            url: '/vaccinetype',\n            method: 'PUT',\n            headers,\n            body: updateVaccineType,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}