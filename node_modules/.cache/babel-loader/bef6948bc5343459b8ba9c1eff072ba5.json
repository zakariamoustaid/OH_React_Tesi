{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';\n\n/**\n * no description\n */\nexport class DiseaseControllerApi extends BaseAPI {\n  /**\n   * deleteDisease\n   */\n  deleteDiseaseUsingDELETE({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'deleteDiseaseUsingDELETE');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/{code}'.replace('{code}', encodeURI(code)),\n      method: 'DELETE',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getAllDiseasesUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/all',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseaseByCodeUsingGET({\n    code\n  }, opts) {\n    throwIfNullOrUndefined(code, 'code', 'getDiseaseByCodeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/{code}'.replace('{code}', encodeURI(code)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesIpdInByCodeUsingGET({\n    typecode\n  }, opts) {\n    throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesIpdInByCodeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/ipd/in/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesIpdInUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/ipd/in',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesIpdOutByCodeUsingGET({\n    typecode\n  }, opts) {\n    throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesIpdOutByCodeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/ipd/out/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesIpdOutUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/ipd/out',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesOpdByCodeUsingGET({\n    typecode\n  }, opts) {\n    throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesOpdByCodeUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/opd/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesOpdUsingGET(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/opd',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesUsingGET({\n    typecode\n  }, opts) {\n    throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/both/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getDiseasesUsingGET1(opts) {\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases/both',\n      method: 'GET',\n      headers\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  newDiseaseUsingPOST({\n    diseaseDTO\n  }, opts) {\n    throwIfNullOrUndefined(diseaseDTO, 'diseaseDTO', 'newDiseaseUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases',\n      method: 'POST',\n      headers,\n      body: diseaseDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  updateDiseaseUsingPUT({\n    diseaseDTO\n  }, opts) {\n    throwIfNullOrUndefined(diseaseDTO, 'diseaseDTO', 'updateDiseaseUsingPUT');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/diseases',\n      method: 'PUT',\n      headers,\n      body: diseaseDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/generated/apis/DiseaseControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","encodeURI","DiseaseControllerApi","deleteDiseaseUsingDELETE","code","opts","headers","configuration","apiKey","request","url","replace","method","responseOpts","getAllDiseasesUsingGET","getDiseaseByCodeUsingGET","getDiseasesIpdInByCodeUsingGET","typecode","getDiseasesIpdInUsingGET","getDiseasesIpdOutByCodeUsingGET","getDiseasesIpdOutUsingGET","getDiseasesOpdByCodeUsingGET","getDiseasesOpdUsingGET","getDiseasesUsingGET","getDiseasesUsingGET1","newDiseaseUsingPOST","diseaseDTO","body","updateDiseaseUsingPUT"],"mappings":"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","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    DiseaseDTO,\n} from '../models';\n\nexport interface DeleteDiseaseUsingDELETERequest {\n    code: number;\n}\n\nexport interface GetDiseaseByCodeUsingGETRequest {\n    code: number;\n}\n\nexport interface GetDiseasesIpdInByCodeUsingGETRequest {\n    typecode: string;\n}\n\nexport interface GetDiseasesIpdOutByCodeUsingGETRequest {\n    typecode: string;\n}\n\nexport interface GetDiseasesOpdByCodeUsingGETRequest {\n    typecode: string;\n}\n\nexport interface GetDiseasesUsingGETRequest {\n    typecode: string;\n}\n\nexport interface NewDiseaseUsingPOSTRequest {\n    diseaseDTO: DiseaseDTO;\n}\n\nexport interface UpdateDiseaseUsingPUTRequest {\n    diseaseDTO: DiseaseDTO;\n}\n\n/**\n * no description\n */\nexport class DiseaseControllerApi extends BaseAPI {\n\n    /**\n     * deleteDisease\n     */\n    deleteDiseaseUsingDELETE({ code }: DeleteDiseaseUsingDELETERequest): Observable<{ [key: string]: boolean; }>\n    deleteDiseaseUsingDELETE({ code }: DeleteDiseaseUsingDELETERequest, opts?: OperationOpts): Observable<RawAjaxResponse<{ [key: string]: boolean; }>>\n    deleteDiseaseUsingDELETE({ code }: DeleteDiseaseUsingDELETERequest, opts?: OperationOpts): Observable<{ [key: string]: boolean; } | RawAjaxResponse<{ [key: string]: boolean; }>> {\n        throwIfNullOrUndefined(code, 'code', 'deleteDiseaseUsingDELETE');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<{ [key: string]: boolean; }>({\n            url: '/diseases/{code}'.replace('{code}', encodeURI(code)),\n            method: 'DELETE',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getAllDiseases\n     */\n    getAllDiseasesUsingGET(): Observable<Array<DiseaseDTO>>\n    getAllDiseasesUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getAllDiseasesUsingGET(opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/all',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseaseByCode\n     */\n    getDiseaseByCodeUsingGET({ code }: GetDiseaseByCodeUsingGETRequest): Observable<DiseaseDTO>\n    getDiseaseByCodeUsingGET({ code }: GetDiseaseByCodeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<DiseaseDTO>>\n    getDiseaseByCodeUsingGET({ code }: GetDiseaseByCodeUsingGETRequest, opts?: OperationOpts): Observable<DiseaseDTO | RawAjaxResponse<DiseaseDTO>> {\n        throwIfNullOrUndefined(code, 'code', 'getDiseaseByCodeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<DiseaseDTO>({\n            url: '/diseases/{code}'.replace('{code}', encodeURI(code)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseasesIpdInByCode\n     */\n    getDiseasesIpdInByCodeUsingGET({ typecode }: GetDiseasesIpdInByCodeUsingGETRequest): Observable<Array<DiseaseDTO>>\n    getDiseasesIpdInByCodeUsingGET({ typecode }: GetDiseasesIpdInByCodeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesIpdInByCodeUsingGET({ typecode }: GetDiseasesIpdInByCodeUsingGETRequest, opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesIpdInByCodeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/ipd/in/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseasesIpdIn\n     */\n    getDiseasesIpdInUsingGET(): Observable<Array<DiseaseDTO>>\n    getDiseasesIpdInUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesIpdInUsingGET(opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/ipd/in',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseasesIpdOutByCode\n     */\n    getDiseasesIpdOutByCodeUsingGET({ typecode }: GetDiseasesIpdOutByCodeUsingGETRequest): Observable<Array<DiseaseDTO>>\n    getDiseasesIpdOutByCodeUsingGET({ typecode }: GetDiseasesIpdOutByCodeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesIpdOutByCodeUsingGET({ typecode }: GetDiseasesIpdOutByCodeUsingGETRequest, opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesIpdOutByCodeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/ipd/out/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseasesIpdOut\n     */\n    getDiseasesIpdOutUsingGET(): Observable<Array<DiseaseDTO>>\n    getDiseasesIpdOutUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesIpdOutUsingGET(opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/ipd/out',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseasesOpdByCode\n     */\n    getDiseasesOpdByCodeUsingGET({ typecode }: GetDiseasesOpdByCodeUsingGETRequest): Observable<Array<DiseaseDTO>>\n    getDiseasesOpdByCodeUsingGET({ typecode }: GetDiseasesOpdByCodeUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesOpdByCodeUsingGET({ typecode }: GetDiseasesOpdByCodeUsingGETRequest, opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesOpdByCodeUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/opd/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseasesOpd\n     */\n    getDiseasesOpdUsingGET(): Observable<Array<DiseaseDTO>>\n    getDiseasesOpdUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesOpdUsingGET(opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/opd',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseases\n     */\n    getDiseasesUsingGET({ typecode }: GetDiseasesUsingGETRequest): Observable<Array<DiseaseDTO>>\n    getDiseasesUsingGET({ typecode }: GetDiseasesUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesUsingGET({ typecode }: GetDiseasesUsingGETRequest, opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        throwIfNullOrUndefined(typecode, 'typecode', 'getDiseasesUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/both/{typecode}'.replace('{typecode}', encodeURI(typecode)),\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getDiseases\n     */\n    getDiseasesUsingGET1(): Observable<Array<DiseaseDTO>>\n    getDiseasesUsingGET1(opts?: OperationOpts): Observable<RawAjaxResponse<Array<DiseaseDTO>>>\n    getDiseasesUsingGET1(opts?: OperationOpts): Observable<Array<DiseaseDTO> | RawAjaxResponse<Array<DiseaseDTO>>> {\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<Array<DiseaseDTO>>({\n            url: '/diseases/both',\n            method: 'GET',\n            headers,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * newDisease\n     */\n    newDiseaseUsingPOST({ diseaseDTO }: NewDiseaseUsingPOSTRequest): Observable<DiseaseDTO>\n    newDiseaseUsingPOST({ diseaseDTO }: NewDiseaseUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<DiseaseDTO>>\n    newDiseaseUsingPOST({ diseaseDTO }: NewDiseaseUsingPOSTRequest, opts?: OperationOpts): Observable<DiseaseDTO | RawAjaxResponse<DiseaseDTO>> {\n        throwIfNullOrUndefined(diseaseDTO, 'diseaseDTO', 'newDiseaseUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<DiseaseDTO>({\n            url: '/diseases',\n            method: 'POST',\n            headers,\n            body: diseaseDTO,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * updateDisease\n     */\n    updateDiseaseUsingPUT({ diseaseDTO }: UpdateDiseaseUsingPUTRequest): Observable<DiseaseDTO>\n    updateDiseaseUsingPUT({ diseaseDTO }: UpdateDiseaseUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<DiseaseDTO>>\n    updateDiseaseUsingPUT({ diseaseDTO }: UpdateDiseaseUsingPUTRequest, opts?: OperationOpts): Observable<DiseaseDTO | RawAjaxResponse<DiseaseDTO>> {\n        throwIfNullOrUndefined(diseaseDTO, 'diseaseDTO', 'updateDiseaseUsingPUT');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<DiseaseDTO>({\n            url: '/diseases',\n            method: 'PUT',\n            headers,\n            body: diseaseDTO,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}