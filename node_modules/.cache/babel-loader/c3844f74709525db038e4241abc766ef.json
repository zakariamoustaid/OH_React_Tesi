{"ast":null,"code":"import opdDTO from \"../fixtures/opdDTO\";\nexport const opdRoutes = server => {\n  server.namespace(\"/opds\", () => {\n    server.post(\"/\").intercept((req, res) => {\n      const body = req.jsonBody();\n\n      switch (body.patientCode && body.date) {\n        case \"fail\":\n          res.status(400);\n          break;\n\n        default:\n          res.status(201);\n          break;\n      }\n    });\n    server.get(\"/patient/:pcode\").intercept((req, res) => {\n      const code = req.params.code;\n\n      switch (code) {\n        case \"1000\":\n          res.status(400);\n          break;\n\n        case \"200000\":\n          res.status(204);\n          res.body = null;\n          break;\n\n        default:\n          res.status(200).json([opdDTO, opdDTO, opdDTO, opdDTO]);\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/mockServer/routes/opd.js"],"names":["opdDTO","opdRoutes","server","namespace","post","intercept","req","res","body","jsonBody","patientCode","date","status","get","code","params","json"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,oBAAnB;AACA,OAAO,MAAMC,SAAS,GAAIC,MAAD,IAAY;AACjCA,EAAAA,MAAM,CAACC,SAAP,CAAiB,OAAjB,EAA0B,MAAM;AAC5BD,IAAAA,MAAM,CAACE,IAAP,CAAY,GAAZ,EAAiBC,SAAjB,CAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACrC,YAAMC,IAAI,GAAGF,GAAG,CAACG,QAAJ,EAAb;;AACA,cAAQD,IAAI,CAACE,WAAL,IAAoBF,IAAI,CAACG,IAAjC;AACI,aAAK,MAAL;AACIJ,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA;;AACJ;AACIL,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA;AANR;AAQH,KAVD;AAWAV,IAAAA,MAAM,CAACW,GAAP,CAAW,iBAAX,EAA8BR,SAA9B,CAAwC,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClD,YAAMO,IAAI,GAAGR,GAAG,CAACS,MAAJ,CAAWD,IAAxB;;AACA,cAAQA,IAAR;AACI,aAAK,MAAL;AACIP,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA;;AACJ,aAAK,QAAL;AACIL,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACAL,UAAAA,GAAG,CAACC,IAAJ,GAAW,IAAX;AACA;;AACJ;AACID,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB,CAAChB,MAAD,EAASA,MAAT,EAAiBA,MAAjB,EAAyBA,MAAzB,CAArB;AATR;AAWH,KAbD;AAcH,GA1BD;AA2BH,CA5BM","sourcesContent":["import opdDTO from \"../fixtures/opdDTO\";\nexport const opdRoutes = (server) => {\n    server.namespace(\"/opds\", () => {\n        server.post(\"/\").intercept((req, res) => {\n            const body = req.jsonBody();\n            switch (body.patientCode && body.date) {\n                case \"fail\":\n                    res.status(400);\n                    break;\n                default:\n                    res.status(201);\n                    break;\n            }\n        });\n        server.get(\"/patient/:pcode\").intercept((req, res) => {\n            const code = req.params.code;\n            switch (code) {\n                case \"1000\":\n                    res.status(400);\n                    break;\n                case \"200000\":\n                    res.status(204);\n                    res.body = null;\n                    break;\n                default:\n                    res.status(200).json([opdDTO, opdDTO, opdDTO, opdDTO]);\n            }\n        });\n    });\n};"]},"metadata":{},"sourceType":"module"}