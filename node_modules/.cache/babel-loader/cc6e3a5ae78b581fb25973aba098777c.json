{"ast":null,"code":"// tslint:disable\n\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { BaseAPI, throwIfNullOrUndefined } from '../runtime';\n\n/**\n * no description\n */\nexport class SmsControllerApi extends BaseAPI {\n  /**\n   * deleteSms\n   */\n  deleteSmsUsingPOST({\n    smsDTOList\n  }, opts) {\n    throwIfNullOrUndefined(smsDTOList, 'smsDTOList', 'deleteSmsUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    return this.request({\n      url: '/sms/delete',\n      method: 'POST',\n      headers,\n      body: smsDTOList\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  getAllUsingGET({\n    dateFrom,\n    dateTo\n  }, opts) {\n    throwIfNullOrUndefined(dateFrom, 'dateFrom', 'getAllUsingGET');\n    throwIfNullOrUndefined(dateTo, 'dateTo', 'getAllUsingGET');\n    const headers = { ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {\n      // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n      'dateFrom': dateFrom,\n      'dateTo': dateTo\n    };\n    return this.request({\n      url: '/sms',\n      method: 'GET',\n      headers,\n      query\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n  saveSmsUsingPOST({\n    smsDTO,\n    split\n  }, opts) {\n    throwIfNullOrUndefined(smsDTO, 'smsDTO', 'saveSmsUsingPOST');\n    const headers = {\n      'Content-Type': 'application/json',\n      ...(this.configuration.apiKey && {\n        'Authorization': this.configuration.apiKey('Authorization')\n      }) // JWT authentication\n\n    };\n    const query = {};\n\n    if (split != null) {\n      query['split'] = split;\n    }\n\n    return this.request({\n      url: '/sms',\n      method: 'POST',\n      headers,\n      query,\n      body: smsDTO\n    }, opts === null || opts === void 0 ? void 0 : opts.responseOpts);\n  }\n\n}","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/generated/apis/SmsControllerApi.ts"],"names":["BaseAPI","throwIfNullOrUndefined","SmsControllerApi","deleteSmsUsingPOST","smsDTOList","opts","headers","configuration","apiKey","request","url","method","body","responseOpts","getAllUsingGET","dateFrom","dateTo","query","saveSmsUsingPOST","smsDTO","split"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,OAAT,EAA0CC,sBAA1C,QAAwG,YAAxG;;AAmBA;AACA;AACA;AACA,OAAO,MAAMC,gBAAN,SAA+BF,OAA/B,CAAuC;AAE1C;AACJ;AACA;AAGIG,EAAAA,kBAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAA4CC,IAA5C,EAAkH;AAChIJ,IAAAA,sBAAsB,CAACG,UAAD,EAAa,YAAb,EAA2B,oBAA3B,CAAtB;AAEA,UAAME,OAAoB,GAAG;AACzB,sBAAgB,kBADS;AAEzB,UAAI,KAAKC,aAAL,CAAmBC,MAAnB,IAA6B;AAAE,yBAAiB,KAAKD,aAAL,CAAmBC,MAAnB,CAA0B,eAA1B;AAAnB,OAAjC,CAFyB,CAE0E;;AAF1E,KAA7B;AAKA,WAAO,KAAKC,OAAL,CAAsB;AACzBC,MAAAA,GAAG,EAAE,aADoB;AAEzBC,MAAAA,MAAM,EAAE,MAFiB;AAGzBL,MAAAA,OAHyB;AAIzBM,MAAAA,IAAI,EAAER;AAJmB,KAAtB,EAKJC,IALI,aAKJA,IALI,uBAKJA,IAAI,CAAEQ,YALF,CAAP;AAMH;;AAODC,EAAAA,cAAc,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,EAA8CX,IAA9C,EAAgI;AAC1IJ,IAAAA,sBAAsB,CAACc,QAAD,EAAW,UAAX,EAAuB,gBAAvB,CAAtB;AACAd,IAAAA,sBAAsB,CAACe,MAAD,EAAS,QAAT,EAAmB,gBAAnB,CAAtB;AAEA,UAAMV,OAAoB,GAAG,EACzB,IAAI,KAAKC,aAAL,CAAmBC,MAAnB,IAA6B;AAAE,yBAAiB,KAAKD,aAAL,CAAmBC,MAAnB,CAA0B,eAA1B;AAAnB,OAAjC,CADyB,CAC0E;;AAD1E,KAA7B;AAIA,UAAMS,KAAgB,GAAG;AAAE;AACvB,kBAAYF,QADS;AAErB,gBAAUC;AAFW,KAAzB;AAKA,WAAO,KAAKP,OAAL,CAA4B;AAC/BC,MAAAA,GAAG,EAAE,MAD0B;AAE/BC,MAAAA,MAAM,EAAE,KAFuB;AAG/BL,MAAAA,OAH+B;AAI/BW,MAAAA;AAJ+B,KAA5B,EAKJZ,IALI,aAKJA,IALI,uBAKJA,IAAI,CAAEQ,YALF,CAAP;AAMH;;AAODK,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,EAA6Cf,IAA7C,EAAmH;AAC/HJ,IAAAA,sBAAsB,CAACkB,MAAD,EAAS,QAAT,EAAmB,kBAAnB,CAAtB;AAEA,UAAMb,OAAoB,GAAG;AACzB,sBAAgB,kBADS;AAEzB,UAAI,KAAKC,aAAL,CAAmBC,MAAnB,IAA6B;AAAE,yBAAiB,KAAKD,aAAL,CAAmBC,MAAnB,CAA0B,eAA1B;AAAnB,OAAjC,CAFyB,CAE0E;;AAF1E,KAA7B;AAKA,UAAMS,KAAgB,GAAG,EAAzB;;AAEA,QAAIG,KAAK,IAAI,IAAb,EAAmB;AAAEH,MAAAA,KAAK,CAAC,OAAD,CAAL,GAAiBG,KAAjB;AAAyB;;AAE9C,WAAO,KAAKX,OAAL,CAAsB;AACzBC,MAAAA,GAAG,EAAE,MADoB;AAEzBC,MAAAA,MAAM,EAAE,MAFiB;AAGzBL,MAAAA,OAHyB;AAIzBW,MAAAA,KAJyB;AAKzBL,MAAAA,IAAI,EAAEO;AALmB,KAAtB,EAMJd,IANI,aAMJA,IANI,uBAMJA,IAAI,CAAEQ,YANF,CAAP;AAOH;;AAzEyC","sourcesContent":["// tslint:disable\n/**\n * OH 2.0 Api Documentation\n * OH 2.0 Api Documentation\n *\n * The version of the OpenAPI document: 1.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { Observable } from 'rxjs';\nimport { BaseAPI, HttpHeaders, HttpQuery, throwIfNullOrUndefined, OperationOpts, RawAjaxResponse } from '../runtime';\nimport {\n    SmsDTO,\n} from '../models';\n\nexport interface DeleteSmsUsingPOSTRequest {\n    smsDTOList: Array<SmsDTO>;\n}\n\nexport interface GetAllUsingGETRequest {\n    dateFrom: string;\n    dateTo: string;\n}\n\nexport interface SaveSmsUsingPOSTRequest {\n    smsDTO: SmsDTO;\n    split?: boolean;\n}\n\n/**\n * no description\n */\nexport class SmsControllerApi extends BaseAPI {\n\n    /**\n     * deleteSms\n     */\n    deleteSmsUsingPOST({ smsDTOList }: DeleteSmsUsingPOSTRequest): Observable<boolean>\n    deleteSmsUsingPOST({ smsDTOList }: DeleteSmsUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    deleteSmsUsingPOST({ smsDTOList }: DeleteSmsUsingPOSTRequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(smsDTOList, 'smsDTOList', 'deleteSmsUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        return this.request<boolean>({\n            url: '/sms/delete',\n            method: 'POST',\n            headers,\n            body: smsDTOList,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * getAll\n     */\n    getAllUsingGET({ dateFrom, dateTo }: GetAllUsingGETRequest): Observable<Array<SmsDTO>>\n    getAllUsingGET({ dateFrom, dateTo }: GetAllUsingGETRequest, opts?: OperationOpts): Observable<RawAjaxResponse<Array<SmsDTO>>>\n    getAllUsingGET({ dateFrom, dateTo }: GetAllUsingGETRequest, opts?: OperationOpts): Observable<Array<SmsDTO> | RawAjaxResponse<Array<SmsDTO>>> {\n        throwIfNullOrUndefined(dateFrom, 'dateFrom', 'getAllUsingGET');\n        throwIfNullOrUndefined(dateTo, 'dateTo', 'getAllUsingGET');\n\n        const headers: HttpHeaders = {\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined\n            'dateFrom': dateFrom,\n            'dateTo': dateTo,\n        };\n\n        return this.request<Array<SmsDTO>>({\n            url: '/sms',\n            method: 'GET',\n            headers,\n            query,\n        }, opts?.responseOpts);\n    };\n\n    /**\n     * saveSms\n     */\n    saveSmsUsingPOST({ smsDTO, split }: SaveSmsUsingPOSTRequest): Observable<boolean>\n    saveSmsUsingPOST({ smsDTO, split }: SaveSmsUsingPOSTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<boolean>>\n    saveSmsUsingPOST({ smsDTO, split }: SaveSmsUsingPOSTRequest, opts?: OperationOpts): Observable<boolean | RawAjaxResponse<boolean>> {\n        throwIfNullOrUndefined(smsDTO, 'smsDTO', 'saveSmsUsingPOST');\n\n        const headers: HttpHeaders = {\n            'Content-Type': 'application/json',\n            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication\n        };\n\n        const query: HttpQuery = {};\n\n        if (split != null) { query['split'] = split; }\n\n        return this.request<boolean>({\n            url: '/sms',\n            method: 'POST',\n            headers,\n            query,\n            body: smsDTO,\n        }, opts?.responseOpts);\n    };\n\n}\n"]},"metadata":{},"sourceType":"module"}