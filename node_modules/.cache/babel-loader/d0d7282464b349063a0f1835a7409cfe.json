{"ast":null,"code":"var _jsxFileName = \"/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/profilePicture/ProfilePicture.tsx\";\nimport { Dialog, DialogContent, DialogContentText, DialogActions, Button } from \"@material-ui/core\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport profilePicturePlaceholder from \"../../../assets/profilePicturePlaceholder.png\";\nimport \"./styles.scss\";\nimport { handlePictureSelection, preprocessImage } from \"./utils\";\nexport const ProfilePicture = ({\n  isEditable,\n  preLoadedPicture,\n  onChange,\n  shouldReset,\n  resetCallback\n}) => {\n  const [picture, setPicture] = useState({\n    preview: profilePicturePlaceholder,\n    original: \"\"\n  });\n  const [showError, setShowError] = React.useState(\"\");\n\n  const handleCloseError = () => {\n    setShowError(\"\");\n  };\n\n  useEffect(() => {\n    if (preLoadedPicture) {\n      preprocessImage(setPicture, preLoadedPicture);\n    }\n  }, [preLoadedPicture]);\n  useEffect(() => {\n    if (onChange) {\n      onChange(picture.original);\n    }\n  }, [onChange, picture.original]);\n  const pictureInputRef = useRef(null);\n\n  const editPicture = () => {\n    var _pictureInputRef$curr;\n\n    return (_pictureInputRef$curr = pictureInputRef.current) === null || _pictureInputRef$curr === void 0 ? void 0 : _pictureInputRef$curr.click();\n  };\n\n  const removePicture = () => {\n    setPicture({\n      preview: profilePicturePlaceholder,\n      original: \"\"\n    });\n\n    if (pictureInputRef.current) {\n      pictureInputRef.current.value = \"\";\n    }\n  };\n\n  useEffect(() => {\n    if (shouldReset && resetCallback) {\n      removePicture();\n      resetCallback();\n    }\n  }, [shouldReset, resetCallback]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profilePicture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"profilePicture_input\",\n    ref: pictureInputRef,\n    style: {\n      display: \"none\"\n    },\n    disabled: !isEditable,\n    type: \"file\",\n    onChange: handlePictureSelection(setPicture, setShowError, 360000),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profilePicture_mask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: picture.preview,\n    alt: \"profilePicture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })), isEditable && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profilePicture_removeIcon\",\n    onClick: removePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeleteRoundedIcon, {\n    fontSize: \"small\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profilePicture_editIcon\",\n    onClick: editPicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditRoundedIcon, {\n    fontSize: \"small\",\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }))), showError ? /*#__PURE__*/React.createElement(Dialog, {\n    open: !!showError,\n    onClose: handleCloseError,\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, showError), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleCloseError,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Ok\")))) : \"\");\n};","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/profilePicture/ProfilePicture.tsx"],"names":["Dialog","DialogContent","DialogContentText","DialogActions","Button","DeleteRoundedIcon","EditRoundedIcon","React","Fragment","useEffect","useRef","useState","profilePicturePlaceholder","handlePictureSelection","preprocessImage","ProfilePicture","isEditable","preLoadedPicture","onChange","shouldReset","resetCallback","picture","setPicture","preview","original","showError","setShowError","handleCloseError","pictureInputRef","editPicture","current","click","removePicture","value","display","color"],"mappings":"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","sourcesContent":["import {\n  Dialog,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n} from \"@material-ui/core\";\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\nimport React, {\n  Fragment,\n  FunctionComponent,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport profilePicturePlaceholder from \"../../../assets/profilePicturePlaceholder.png\";\nimport \"./styles.scss\";\nimport { IProps } from \"./types\";\nimport { handlePictureSelection, preprocessImage } from \"./utils\";\n\nexport const ProfilePicture: FunctionComponent<IProps> = ({\n  isEditable,\n  preLoadedPicture,\n  onChange,\n  shouldReset,\n  resetCallback,\n}) => {\n  const [picture, setPicture] = useState({\n    preview: profilePicturePlaceholder,\n    original: \"\",\n  });\n\n  const [showError, setShowError] = React.useState(\"\");\n\n  const handleCloseError = () => {\n    setShowError(\"\");\n  };\n\n  useEffect(() => {\n    if (preLoadedPicture) {\n      preprocessImage(setPicture, preLoadedPicture);\n    }\n  }, [preLoadedPicture]);\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(picture.original);\n    }\n  }, [onChange, picture.original]);\n\n  const pictureInputRef = useRef<HTMLInputElement>(null);\n\n  const editPicture = () => pictureInputRef.current?.click();\n\n  const removePicture = () => {\n    setPicture({\n      preview: profilePicturePlaceholder,\n      original: \"\",\n    });\n    if (pictureInputRef.current) {\n      pictureInputRef.current.value = \"\";\n    }\n  };\n\n  useEffect(() => {\n    if (shouldReset && resetCallback) {\n      removePicture();\n      resetCallback();\n    }\n  }, [shouldReset, resetCallback]);\n\n  return (\n    <div className=\"profilePicture\">\n      <input\n        id=\"profilePicture_input\"\n        ref={pictureInputRef}\n        style={{ display: \"none\" }}\n        disabled={!isEditable}\n        type=\"file\"\n        onChange={handlePictureSelection(setPicture, setShowError, 360000)}\n      />\n      <div className=\"profilePicture_mask\">\n        <img src={picture.preview} alt=\"profilePicture\" />\n      </div>\n      {isEditable && (\n        <Fragment>\n          <div className=\"profilePicture_removeIcon\" onClick={removePicture}>\n            <DeleteRoundedIcon fontSize=\"small\" style={{ color: \"white\" }} />\n          </div>\n          <div className=\"profilePicture_editIcon\" onClick={editPicture}>\n            <EditRoundedIcon fontSize=\"small\" style={{ color: \"white\" }} />\n          </div>\n        </Fragment>\n      )}\n      {showError ? (\n        <Dialog\n          open={!!showError}\n          onClose={handleCloseError}\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              {showError}\n            </DialogContentText>\n            <DialogActions>\n              <Button onClick={handleCloseError} color=\"primary\">\n                Ok\n              </Button>\n            </DialogActions>\n          </DialogContent>\n        </Dialog>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}