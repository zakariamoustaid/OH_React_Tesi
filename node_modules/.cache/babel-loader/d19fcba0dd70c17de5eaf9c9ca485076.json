{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/accessories/privateRoute/PrivateRoute.tsx\";\nimport React from \"react\";\nimport { Redirect, Route, useLocation } from \"react-router-dom\";\nimport { isAuthenticated } from \"../../../libraries/authUtils/isAuthenticated\";\nimport { useAuthentication } from \"../../../libraries/authUtils/useAuthentication\";\n\nconst PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  const location = useLocation();\n  useAuthentication();\n  return isAuthenticated() ? /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }), children) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/login\",\n      state: {\n        from: location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/accessories/privateRoute/PrivateRoute.tsx"],"names":["React","Redirect","Route","useLocation","isAuthenticated","useAuthentication","PrivateRoute","children","rest","location","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,KAAnB,EAAsCC,WAAtC,QAAyD,kBAAzD;AACA,SAASC,eAAT,QAAgC,8CAAhC;AACA,SAASC,iBAAT,QAAkC,gDAAlC;;AAEA,MAAMC,YAA2C,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAC7E,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAE,EAAAA,iBAAiB;AAEjB,SAAOD,eAAe,kBACpB,oBAAC,KAAD,oBAAWI,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAkBD,QAAlB,CADoB,gBAGpB,oBAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFG,MAAAA,QAAQ,EAAE,QADR;AAEFC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH;AAAR;AAFL,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF;AAUD,CAdD;;AAgBA,eAAeH,YAAf","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport { Redirect, Route, RouteProps, useLocation } from \"react-router-dom\";\nimport { isAuthenticated } from \"../../../libraries/authUtils/isAuthenticated\";\nimport { useAuthentication } from \"../../../libraries/authUtils/useAuthentication\";\n\nconst PrivateRoute: FunctionComponent<RouteProps> = ({ children, ...rest }) => {\n  const location = useLocation();\n  useAuthentication();\n\n  return isAuthenticated() ? (\n    <Route {...rest}>{children}</Route>\n  ) : (\n    <Redirect\n      to={{\n        pathname: \"/login\",\n        state: { from: location },\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}