{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_.._util_root,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\n\nfunction getCORSRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else if (!!root.XDomainRequest) {\n    return new root.XDomainRequest();\n  } else {\n    throw new Error('CORS is not supported by your browser');\n  }\n}\n\nfunction getXMLHttpRequest() {\n  if (root.XMLHttpRequest) {\n    return new root.XMLHttpRequest();\n  } else {\n    var progId = void 0;\n\n    try {\n      var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n\n      for (var i = 0; i < 3; i++) {\n        try {\n          progId = progIds[i];\n\n          if (new root.ActiveXObject(progId)) {\n            break;\n          }\n        } catch (e) {}\n      }\n\n      return new root.ActiveXObject(progId);\n    } catch (e) {\n      throw new Error('XMLHttpRequest is not supported by your browser');\n    }\n  }\n}\n\nexport function ajaxGet(url, headers) {\n  if (headers === void 0) {\n    headers = null;\n  }\n\n  return new AjaxObservable({\n    method: 'GET',\n    url: url,\n    headers: headers\n  });\n}\nexport function ajaxPost(url, body, headers) {\n  return new AjaxObservable({\n    method: 'POST',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexport function ajaxDelete(url, headers) {\n  return new AjaxObservable({\n    method: 'DELETE',\n    url: url,\n    headers: headers\n  });\n}\nexport function ajaxPut(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PUT',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nexport function ajaxPatch(url, body, headers) {\n  return new AjaxObservable({\n    method: 'PATCH',\n    url: url,\n    body: body,\n    headers: headers\n  });\n}\nvar mapResponse = /*@__PURE__*/map(function (x, index) {\n  return x.response;\n});\nexport function ajaxGetJSON(url, headers) {\n  return mapResponse(new AjaxObservable({\n    method: 'GET',\n    url: url,\n    responseType: 'json',\n    headers: headers\n  }));\n}\n\nvar AjaxObservable = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AjaxObservable, _super);\n\n  function AjaxObservable(urlOrRequest) {\n    var _this = _super.call(this) || this;\n\n    var request = {\n      async: true,\n      createXHR: function () {\n        return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n      },\n      crossDomain: true,\n      withCredentials: false,\n      headers: {},\n      method: 'GET',\n      responseType: 'json',\n      timeout: 0\n    };\n\n    if (typeof urlOrRequest === 'string') {\n      request.url = urlOrRequest;\n    } else {\n      for (var prop in urlOrRequest) {\n        if (urlOrRequest.hasOwnProperty(prop)) {\n          request[prop] = urlOrRequest[prop];\n        }\n      }\n    }\n\n    _this.request = request;\n    return _this;\n  }\n\n  AjaxObservable.prototype._subscribe = function (subscriber) {\n    return new AjaxSubscriber(subscriber, this.request);\n  };\n\n  AjaxObservable.create = function () {\n    var create = function (urlOrRequest) {\n      return new AjaxObservable(urlOrRequest);\n    };\n\n    create.get = ajaxGet;\n    create.post = ajaxPost;\n    create.delete = ajaxDelete;\n    create.put = ajaxPut;\n    create.patch = ajaxPatch;\n    create.getJSON = ajaxGetJSON;\n    return create;\n  }();\n\n  return AjaxObservable;\n}(Observable);\n\nexport { AjaxObservable };\n\nvar AjaxSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AjaxSubscriber, _super);\n\n  function AjaxSubscriber(destination, request) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.request = request;\n    _this.done = false;\n    var headers = request.headers = request.headers || {};\n\n    if (!request.crossDomain && !_this.getHeader(headers, 'X-Requested-With')) {\n      headers['X-Requested-With'] = 'XMLHttpRequest';\n    }\n\n    var contentTypeHeader = _this.getHeader(headers, 'Content-Type');\n\n    if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n      headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n    }\n\n    request.body = _this.serializeBody(request.body, _this.getHeader(request.headers, 'Content-Type'));\n\n    _this.send();\n\n    return _this;\n  }\n\n  AjaxSubscriber.prototype.next = function (e) {\n    this.done = true;\n\n    var _a = this,\n        xhr = _a.xhr,\n        request = _a.request,\n        destination = _a.destination;\n\n    var result;\n\n    try {\n      result = new AjaxResponse(e, xhr, request);\n    } catch (err) {\n      return destination.error(err);\n    }\n\n    destination.next(result);\n  };\n\n  AjaxSubscriber.prototype.send = function () {\n    var _a = this,\n        request = _a.request,\n        _b = _a.request,\n        user = _b.user,\n        method = _b.method,\n        url = _b.url,\n        async = _b.async,\n        password = _b.password,\n        headers = _b.headers,\n        body = _b.body;\n\n    try {\n      var xhr = this.xhr = request.createXHR();\n      this.setupEvents(xhr, request);\n\n      if (user) {\n        xhr.open(method, url, async, user, password);\n      } else {\n        xhr.open(method, url, async);\n      }\n\n      if (async) {\n        xhr.timeout = request.timeout;\n        xhr.responseType = request.responseType;\n      }\n\n      if ('withCredentials' in xhr) {\n        xhr.withCredentials = !!request.withCredentials;\n      }\n\n      this.setHeaders(xhr, headers);\n\n      if (body) {\n        xhr.send(body);\n      } else {\n        xhr.send();\n      }\n    } catch (err) {\n      this.error(err);\n    }\n  };\n\n  AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n    if (!body || typeof body === 'string') {\n      return body;\n    } else if (root.FormData && body instanceof root.FormData) {\n      return body;\n    }\n\n    if (contentType) {\n      var splitIndex = contentType.indexOf(';');\n\n      if (splitIndex !== -1) {\n        contentType = contentType.substring(0, splitIndex);\n      }\n    }\n\n    switch (contentType) {\n      case 'application/x-www-form-urlencoded':\n        return Object.keys(body).map(function (key) {\n          return encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key]);\n        }).join('&');\n\n      case 'application/json':\n        return JSON.stringify(body);\n\n      default:\n        return body;\n    }\n  };\n\n  AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n    for (var key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  };\n\n  AjaxSubscriber.prototype.getHeader = function (headers, headerName) {\n    for (var key in headers) {\n      if (key.toLowerCase() === headerName.toLowerCase()) {\n        return headers[key];\n      }\n    }\n\n    return undefined;\n  };\n\n  AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n    var progressSubscriber = request.progressSubscriber;\n\n    function xhrTimeout(e) {\n      var _a = xhrTimeout,\n          subscriber = _a.subscriber,\n          progressSubscriber = _a.progressSubscriber,\n          request = _a.request;\n\n      if (progressSubscriber) {\n        progressSubscriber.error(e);\n      }\n\n      var error;\n\n      try {\n        error = new AjaxTimeoutError(this, request);\n      } catch (err) {\n        error = err;\n      }\n\n      subscriber.error(error);\n    }\n\n    xhr.ontimeout = xhrTimeout;\n    xhrTimeout.request = request;\n    xhrTimeout.subscriber = this;\n    xhrTimeout.progressSubscriber = progressSubscriber;\n\n    if (xhr.upload && 'withCredentials' in xhr) {\n      if (progressSubscriber) {\n        var xhrProgress_1;\n\n        xhrProgress_1 = function (e) {\n          var progressSubscriber = xhrProgress_1.progressSubscriber;\n          progressSubscriber.next(e);\n        };\n\n        if (root.XDomainRequest) {\n          xhr.onprogress = xhrProgress_1;\n        } else {\n          xhr.upload.onprogress = xhrProgress_1;\n        }\n\n        xhrProgress_1.progressSubscriber = progressSubscriber;\n      }\n\n      var xhrError_1;\n\n      xhrError_1 = function (e) {\n        var _a = xhrError_1,\n            progressSubscriber = _a.progressSubscriber,\n            subscriber = _a.subscriber,\n            request = _a.request;\n\n        if (progressSubscriber) {\n          progressSubscriber.error(e);\n        }\n\n        var error;\n\n        try {\n          error = new AjaxError('ajax error', this, request);\n        } catch (err) {\n          error = err;\n        }\n\n        subscriber.error(error);\n      };\n\n      xhr.onerror = xhrError_1;\n      xhrError_1.request = request;\n      xhrError_1.subscriber = this;\n      xhrError_1.progressSubscriber = progressSubscriber;\n    }\n\n    function xhrReadyStateChange(e) {\n      return;\n    }\n\n    xhr.onreadystatechange = xhrReadyStateChange;\n    xhrReadyStateChange.subscriber = this;\n    xhrReadyStateChange.progressSubscriber = progressSubscriber;\n    xhrReadyStateChange.request = request;\n\n    function xhrLoad(e) {\n      var _a = xhrLoad,\n          subscriber = _a.subscriber,\n          progressSubscriber = _a.progressSubscriber,\n          request = _a.request;\n\n      if (this.readyState === 4) {\n        var status_1 = this.status === 1223 ? 204 : this.status;\n        var response = this.responseType === 'text' ? this.response || this.responseText : this.response;\n\n        if (status_1 === 0) {\n          status_1 = response ? 200 : 0;\n        }\n\n        if (status_1 < 400) {\n          if (progressSubscriber) {\n            progressSubscriber.complete();\n          }\n\n          subscriber.next(e);\n          subscriber.complete();\n        } else {\n          if (progressSubscriber) {\n            progressSubscriber.error(e);\n          }\n\n          var error = void 0;\n\n          try {\n            error = new AjaxError('ajax error ' + status_1, this, request);\n          } catch (err) {\n            error = err;\n          }\n\n          subscriber.error(error);\n        }\n      }\n    }\n\n    xhr.onload = xhrLoad;\n    xhrLoad.subscriber = this;\n    xhrLoad.progressSubscriber = progressSubscriber;\n    xhrLoad.request = request;\n  };\n\n  AjaxSubscriber.prototype.unsubscribe = function () {\n    var _a = this,\n        done = _a.done,\n        xhr = _a.xhr;\n\n    if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n      xhr.abort();\n    }\n\n    _super.prototype.unsubscribe.call(this);\n  };\n\n  return AjaxSubscriber;\n}(Subscriber);\n\nexport { AjaxSubscriber };\n\nvar AjaxResponse = /*@__PURE__*/function () {\n  function AjaxResponse(originalEvent, xhr, request) {\n    this.originalEvent = originalEvent;\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n  }\n\n  return AjaxResponse;\n}();\n\nexport { AjaxResponse };\n\nvar AjaxErrorImpl = /*@__PURE__*/function () {\n  function AjaxErrorImpl(message, xhr, request) {\n    Error.call(this);\n    this.message = message;\n    this.name = 'AjaxError';\n    this.xhr = xhr;\n    this.request = request;\n    this.status = xhr.status;\n    this.responseType = xhr.responseType || request.responseType;\n    this.response = parseXhrResponse(this.responseType, xhr);\n    return this;\n  }\n\n  AjaxErrorImpl.prototype = /*@__PURE__*/Object.create(Error.prototype);\n  return AjaxErrorImpl;\n}();\n\nexport var AjaxError = AjaxErrorImpl;\n\nfunction parseJson(xhr) {\n  if ('response' in xhr) {\n    return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n  } else {\n    return JSON.parse(xhr.responseText || 'null');\n  }\n}\n\nfunction parseXhrResponse(responseType, xhr) {\n  switch (responseType) {\n    case 'json':\n      return parseJson(xhr);\n\n    case 'xml':\n      return xhr.responseXML;\n\n    case 'text':\n    default:\n      return 'response' in xhr ? xhr.response : xhr.responseText;\n  }\n}\n\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n  AjaxError.call(this, 'ajax timeout', xhr, request);\n  this.name = 'AjaxTimeoutError';\n  return this;\n}\n\nexport var AjaxTimeoutError = AjaxTimeoutErrorImpl;","map":{"version":3,"sources":["../../../../src/internal/observable/dom/AjaxObservable.ts"],"names":[],"mappings":"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","sourcesContent":["/** PURE_IMPORTS_START tslib,_.._util_root,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { root } from '../../util/root';\nimport { Observable } from '../../Observable';\nimport { Subscriber } from '../../Subscriber';\nimport { map } from '../../operators/map';\nfunction getCORSRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else if (!!root.XDomainRequest) {\n        return new root.XDomainRequest();\n    }\n    else {\n        throw new Error('CORS is not supported by your browser');\n    }\n}\nfunction getXMLHttpRequest() {\n    if (root.XMLHttpRequest) {\n        return new root.XMLHttpRequest();\n    }\n    else {\n        var progId = void 0;\n        try {\n            var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];\n            for (var i = 0; i < 3; i++) {\n                try {\n                    progId = progIds[i];\n                    if (new root.ActiveXObject(progId)) {\n                        break;\n                    }\n                }\n                catch (e) {\n                }\n            }\n            return new root.ActiveXObject(progId);\n        }\n        catch (e) {\n            throw new Error('XMLHttpRequest is not supported by your browser');\n        }\n    }\n}\nexport function ajaxGet(url, headers) {\n    if (headers === void 0) {\n        headers = null;\n    }\n    return new AjaxObservable({ method: 'GET', url: url, headers: headers });\n}\nexport function ajaxPost(url, body, headers) {\n    return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });\n}\nexport function ajaxDelete(url, headers) {\n    return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });\n}\nexport function ajaxPut(url, body, headers) {\n    return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });\n}\nexport function ajaxPatch(url, body, headers) {\n    return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });\n}\nvar mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });\nexport function ajaxGetJSON(url, headers) {\n    return mapResponse(new AjaxObservable({\n        method: 'GET',\n        url: url,\n        responseType: 'json',\n        headers: headers\n    }));\n}\nvar AjaxObservable = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxObservable, _super);\n    function AjaxObservable(urlOrRequest) {\n        var _this = _super.call(this) || this;\n        var request = {\n            async: true,\n            createXHR: function () {\n                return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();\n            },\n            crossDomain: true,\n            withCredentials: false,\n            headers: {},\n            method: 'GET',\n            responseType: 'json',\n            timeout: 0\n        };\n        if (typeof urlOrRequest === 'string') {\n            request.url = urlOrRequest;\n        }\n        else {\n            for (var prop in urlOrRequest) {\n                if (urlOrRequest.hasOwnProperty(prop)) {\n                    request[prop] = urlOrRequest[prop];\n                }\n            }\n        }\n        _this.request = request;\n        return _this;\n    }\n    AjaxObservable.prototype._subscribe = function (subscriber) {\n        return new AjaxSubscriber(subscriber, this.request);\n    };\n    AjaxObservable.create = (function () {\n        var create = function (urlOrRequest) {\n            return new AjaxObservable(urlOrRequest);\n        };\n        create.get = ajaxGet;\n        create.post = ajaxPost;\n        create.delete = ajaxDelete;\n        create.put = ajaxPut;\n        create.patch = ajaxPatch;\n        create.getJSON = ajaxGetJSON;\n        return create;\n    })();\n    return AjaxObservable;\n}(Observable));\nexport { AjaxObservable };\nvar AjaxSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AjaxSubscriber, _super);\n    function AjaxSubscriber(destination, request) {\n        var _this = _super.call(this, destination) || this;\n        _this.request = request;\n        _this.done = false;\n        var headers = request.headers = request.headers || {};\n        if (!request.crossDomain && !_this.getHeader(headers, 'X-Requested-With')) {\n            headers['X-Requested-With'] = 'XMLHttpRequest';\n        }\n        var contentTypeHeader = _this.getHeader(headers, 'Content-Type');\n        if (!contentTypeHeader && !(root.FormData && request.body instanceof root.FormData) && typeof request.body !== 'undefined') {\n            headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n        }\n        request.body = _this.serializeBody(request.body, _this.getHeader(request.headers, 'Content-Type'));\n        _this.send();\n        return _this;\n    }\n    AjaxSubscriber.prototype.next = function (e) {\n        this.done = true;\n        var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;\n        var result;\n        try {\n            result = new AjaxResponse(e, xhr, request);\n        }\n        catch (err) {\n            return destination.error(err);\n        }\n        destination.next(result);\n    };\n    AjaxSubscriber.prototype.send = function () {\n        var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;\n        try {\n            var xhr = this.xhr = request.createXHR();\n            this.setupEvents(xhr, request);\n            if (user) {\n                xhr.open(method, url, async, user, password);\n            }\n            else {\n                xhr.open(method, url, async);\n            }\n            if (async) {\n                xhr.timeout = request.timeout;\n                xhr.responseType = request.responseType;\n            }\n            if ('withCredentials' in xhr) {\n                xhr.withCredentials = !!request.withCredentials;\n            }\n            this.setHeaders(xhr, headers);\n            if (body) {\n                xhr.send(body);\n            }\n            else {\n                xhr.send();\n            }\n        }\n        catch (err) {\n            this.error(err);\n        }\n    };\n    AjaxSubscriber.prototype.serializeBody = function (body, contentType) {\n        if (!body || typeof body === 'string') {\n            return body;\n        }\n        else if (root.FormData && body instanceof root.FormData) {\n            return body;\n        }\n        if (contentType) {\n            var splitIndex = contentType.indexOf(';');\n            if (splitIndex !== -1) {\n                contentType = contentType.substring(0, splitIndex);\n            }\n        }\n        switch (contentType) {\n            case 'application/x-www-form-urlencoded':\n                return Object.keys(body).map(function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(body[key]); }).join('&');\n            case 'application/json':\n                return JSON.stringify(body);\n            default:\n                return body;\n        }\n    };\n    AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {\n        for (var key in headers) {\n            if (headers.hasOwnProperty(key)) {\n                xhr.setRequestHeader(key, headers[key]);\n            }\n        }\n    };\n    AjaxSubscriber.prototype.getHeader = function (headers, headerName) {\n        for (var key in headers) {\n            if (key.toLowerCase() === headerName.toLowerCase()) {\n                return headers[key];\n            }\n        }\n        return undefined;\n    };\n    AjaxSubscriber.prototype.setupEvents = function (xhr, request) {\n        var progressSubscriber = request.progressSubscriber;\n        function xhrTimeout(e) {\n            var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (progressSubscriber) {\n                progressSubscriber.error(e);\n            }\n            var error;\n            try {\n                error = new AjaxTimeoutError(this, request);\n            }\n            catch (err) {\n                error = err;\n            }\n            subscriber.error(error);\n        }\n        xhr.ontimeout = xhrTimeout;\n        xhrTimeout.request = request;\n        xhrTimeout.subscriber = this;\n        xhrTimeout.progressSubscriber = progressSubscriber;\n        if (xhr.upload && 'withCredentials' in xhr) {\n            if (progressSubscriber) {\n                var xhrProgress_1;\n                xhrProgress_1 = function (e) {\n                    var progressSubscriber = xhrProgress_1.progressSubscriber;\n                    progressSubscriber.next(e);\n                };\n                if (root.XDomainRequest) {\n                    xhr.onprogress = xhrProgress_1;\n                }\n                else {\n                    xhr.upload.onprogress = xhrProgress_1;\n                }\n                xhrProgress_1.progressSubscriber = progressSubscriber;\n            }\n            var xhrError_1;\n            xhrError_1 = function (e) {\n                var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;\n                if (progressSubscriber) {\n                    progressSubscriber.error(e);\n                }\n                var error;\n                try {\n                    error = new AjaxError('ajax error', this, request);\n                }\n                catch (err) {\n                    error = err;\n                }\n                subscriber.error(error);\n            };\n            xhr.onerror = xhrError_1;\n            xhrError_1.request = request;\n            xhrError_1.subscriber = this;\n            xhrError_1.progressSubscriber = progressSubscriber;\n        }\n        function xhrReadyStateChange(e) {\n            return;\n        }\n        xhr.onreadystatechange = xhrReadyStateChange;\n        xhrReadyStateChange.subscriber = this;\n        xhrReadyStateChange.progressSubscriber = progressSubscriber;\n        xhrReadyStateChange.request = request;\n        function xhrLoad(e) {\n            var _a = xhrLoad, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;\n            if (this.readyState === 4) {\n                var status_1 = this.status === 1223 ? 204 : this.status;\n                var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);\n                if (status_1 === 0) {\n                    status_1 = response ? 200 : 0;\n                }\n                if (status_1 < 400) {\n                    if (progressSubscriber) {\n                        progressSubscriber.complete();\n                    }\n                    subscriber.next(e);\n                    subscriber.complete();\n                }\n                else {\n                    if (progressSubscriber) {\n                        progressSubscriber.error(e);\n                    }\n                    var error = void 0;\n                    try {\n                        error = new AjaxError('ajax error ' + status_1, this, request);\n                    }\n                    catch (err) {\n                        error = err;\n                    }\n                    subscriber.error(error);\n                }\n            }\n        }\n        xhr.onload = xhrLoad;\n        xhrLoad.subscriber = this;\n        xhrLoad.progressSubscriber = progressSubscriber;\n        xhrLoad.request = request;\n    };\n    AjaxSubscriber.prototype.unsubscribe = function () {\n        var _a = this, done = _a.done, xhr = _a.xhr;\n        if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {\n            xhr.abort();\n        }\n        _super.prototype.unsubscribe.call(this);\n    };\n    return AjaxSubscriber;\n}(Subscriber));\nexport { AjaxSubscriber };\nvar AjaxResponse = /*@__PURE__*/ (function () {\n    function AjaxResponse(originalEvent, xhr, request) {\n        this.originalEvent = originalEvent;\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n    }\n    return AjaxResponse;\n}());\nexport { AjaxResponse };\nvar AjaxErrorImpl = /*@__PURE__*/ (function () {\n    function AjaxErrorImpl(message, xhr, request) {\n        Error.call(this);\n        this.message = message;\n        this.name = 'AjaxError';\n        this.xhr = xhr;\n        this.request = request;\n        this.status = xhr.status;\n        this.responseType = xhr.responseType || request.responseType;\n        this.response = parseXhrResponse(this.responseType, xhr);\n        return this;\n    }\n    AjaxErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return AjaxErrorImpl;\n})();\nexport var AjaxError = AjaxErrorImpl;\nfunction parseJson(xhr) {\n    if ('response' in xhr) {\n        return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');\n    }\n    else {\n        return JSON.parse(xhr.responseText || 'null');\n    }\n}\nfunction parseXhrResponse(responseType, xhr) {\n    switch (responseType) {\n        case 'json':\n            return parseJson(xhr);\n        case 'xml':\n            return xhr.responseXML;\n        case 'text':\n        default:\n            return ('response' in xhr) ? xhr.response : xhr.responseText;\n    }\n}\nfunction AjaxTimeoutErrorImpl(xhr, request) {\n    AjaxError.call(this, 'ajax timeout', xhr, request);\n    this.name = 'AjaxTimeoutError';\n    return this;\n}\nexport var AjaxTimeoutError = AjaxTimeoutErrorImpl;\n//# sourceMappingURL=AjaxObservable.js.map\n"]},"metadata":{},"sourceType":"module"}