{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport \"./styles.scss\";\nimport { createBill, createBillReset, getBill } from \"../../../state/bills/actions\";\nimport { getPrices, getPriceLists } from \"../../../state/prices/actions\";\nimport { getMedicals } from \"../../../state/medicals/actions\";\nimport DrawerActivity from \"./DrawerActivity\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute,\n  med,\n  getMedicals,\n  getMedStat,\n  bill,\n  getBill,\n  prices,\n  getPrices,\n  priceLists,\n  getPriceLists\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n  useEffect(() => {\n    getMedicals();\n  }, []);\n  useEffect(() => {\n    getPrices();\n  }, []); //  //  //  //  //\n  // GET PATIENT  //\n  //  //  //  //  //\n\n  const [tok, setToken] = useState('');\n  fetch(\"https://www.open-hospital.org/oh11-api/auth/login?password=admin&username=admin\", {\n    method: 'POST',\n    headers: {\n      \"Accept\": \"*/*\"\n    }\n  }).then(res => res.json()).then(data => setToken(data.token));\n  console.log(tok);\n  const [patient, setPatient] = useState();\n  useEffect(() => {\n    const url = \"https://www.open-hospital.org/oh-api/patients?page=1&size=1\";\n    const auth = tok;\n    const acc = \"application/json\";\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Accept: acc,\n            Authorization: auth\n          }\n        });\n        const json = await response.json();\n        setPatient(json[0]);\n        console.log(\"TTHIS\" + auth + tok);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const patient_data = (patient === null || patient === void 0 ? void 0 : patient.firstName) + \" \" + (patient === null || patient === void 0 ? void 0 : patient.secondName); //  //  //\n  //  END //\n  //  //  //\n  //\n  //Gestione Dialog\n  //\n\n  const [open_med, setOpen_med] = React.useState(false);\n\n  const handleClickOpen_med = () => {\n    setOpen_med(true);\n  };\n\n  const handleClose_med = () => {\n    setOpen_med(false);\n  };\n\n  const [open_ope, setOpen_ope] = React.useState(false);\n\n  const handleClickOpen_ope = () => {\n    setOpen_ope(true);\n  };\n\n  const handleClose_ope = () => {\n    setOpen_ope(false);\n  };\n\n  const [open_exa, setOpen_exa] = React.useState(false);\n\n  const handleClickOpen_exa = () => {\n    setOpen_exa(true);\n  };\n\n  const handleClose_exa = () => {\n    setOpen_exa(false);\n  };\n\n  const [open_oth, setOpen_oth] = React.useState(false);\n\n  const handleClickOpen_oth = () => {\n    setOpen_oth(true);\n  };\n\n  const handleClose_oth = () => {\n    setOpen_oth(false);\n  };\n\n  const [open_cust, setOpen_cust] = React.useState(false);\n\n  const handleClickOpen_cust = () => {\n    setOpen_cust(true);\n  };\n\n  const handleClose_cust = () => {\n    setOpen_cust(false);\n  }; //\n  //\n  //\n  //test useState\n  //\n\n\n  const [selectionModel, setSelectionModel] = React.useState([]);\n  const [items, setItems] = React.useState([]);\n  const [medicals, setMedicals] = React.useState([]);\n  const [operations, setOperations] = React.useState([]);\n  const [exams, setExams] = React.useState([]);\n  const [others, setOthers] = React.useState([]);\n  const [custom, setCustom] = React.useState();\n\n  const take_items = () => {\n    medicals === null || medicals === void 0 ? void 0 : medicals.forEach(function (i, j) {\n      if (items.some(it => it.id === i) === true) {\n        items === null || items === void 0 ? void 0 : items.forEach(function (x) {\n          if (x.id === i) console.log('ciao');\n        });\n      } else {\n        //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n        setItems(pre => {\n          var _prices$find, _prices$find2, _prices$find3, _prices$find3$list, _prices$find4;\n\n          return [...pre, {\n            \"hashCode\": prices === null || prices === void 0 ? void 0 : (_prices$find = prices.find(p => p.id == i)) === null || _prices$find === void 0 ? void 0 : _prices$find.id,\n            \"id\": 1,\n            \"price\": true,\n            \"billId\": 1,\n            \"priceId\": prices === null || prices === void 0 ? void 0 : (_prices$find2 = prices.find(p => p.id == i)) === null || _prices$find2 === void 0 ? void 0 : _prices$find2.id,\n            \"itemDescription\": prices === null || prices === void 0 ? void 0 : (_prices$find3 = prices.find(p => p.id == i)) === null || _prices$find3 === void 0 ? void 0 : (_prices$find3$list = _prices$find3.list) === null || _prices$find3$list === void 0 ? void 0 : _prices$find3$list.description,\n            \"itemAmount\": 1,\n            \"itemQuantity\": 1,\n            \"itemDisplayCode\": \"1\",\n            \"itemId\": prices === null || prices === void 0 ? void 0 : (_prices$find4 = prices.find(p => p.id == i)) === null || _prices$find4 === void 0 ? void 0 : _prices$find4.id\n          }];\n        });\n      }\n    });\n  };\n  /*\n  const get_items_o = () => {\n      operations?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n  const get_items_e = () => {\n      exams?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n  const get_items_ot = () => {\n      others?.forEach(function (i, j) {\n          if (!(items.includes(i)))\n              setItems(prevItems => [...prevItems, i]);\n      })\n  }\n   const get_items_cust = () => {\n      const i: GridRowId = 2;\n      setItems(prevItems => [...prevItems, i]);\n  }\n   const delete_item = (e: GridRowId) => {\n      console.log(e);\n      setItems(items.filter(item => e !== item));\n  }\n  */\n\n\n  const get_input = e => {\n    const a = e.target.id;\n    console.log(a); //setCustom({id:1, description:'ciao'});\n  };\n\n  const get_cust = e => {\n    e.preventDefault();\n    const desc = e.currentTarget.elements[0].value;\n    const amo = e.currentTarget.elements[1].value;\n    setCustom({\n      id: 1,\n      description: desc,\n      amount: amo\n    });\n    console.log(custom);\n  };\n\n  const test = e => {\n    var _ref;\n\n    e.preventDefault();\n    console.log((_ref = e.currentTarget.elements[4]) === null || _ref === void 0 ? void 0 : _ref.value);\n  }; //\n  //\n  //  //  //  //  //  //\n  //  gestione select //\n  //  //  //  //  //  //\n\n\n  const [quantity, setQuantity] = React.useState('1');\n\n  const handleChangeSelect = event => {\n    setQuantity(event.target.value);\n  }; //  //  //  //  //  //\n  // Gestione Grid MED//\n  //  //  //  //  //  //\n\n\n  const columns_med = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  let rows_med = [{\n    id: 0,\n    group: '',\n    description: ''\n  }];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list;\n\n    if (m.group === \"MED\") rows_med.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list = m.list) === null || _m$list === void 0 ? void 0 : _m$list.description\n    });\n  });\n  rows_med === null || rows_med === void 0 ? void 0 : rows_med.shift(); //  //  //  //  //  //\n  //  GESTIONE ROWS   //\n  //  //  //  //  //  //\n\n  const [row, setRow] = useState(''); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid OPE//\n  //  //  //  //  //  //\n\n  const columns_ope = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_ope = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list2;\n\n    if (m.group === \"OPE\") rows_ope.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list2 = m.list) === null || _m$list2 === void 0 ? void 0 : _m$list2.description\n    });\n  });\n  rows_ope.shift(); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid EXA//\n  //  //  //  //  //  //\n\n  const columns_exa = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_exa = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list3;\n\n    if (m.group === \"EXA\") rows_exa.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list3 = m.list) === null || _m$list3 === void 0 ? void 0 : _m$list3.description\n    });\n  });\n  rows_exa.shift(); //\n  //\n  //  //  //  //  //  //\n  // Gestione Grid OTH//\n  //  //  //  //  //  //\n\n  const columns_oth = [{\n    field: 'id',\n    headerName: 'ID',\n    width: 90\n  }, {\n    field: 'group',\n    headerName: 'Group',\n    width: 125,\n    editable: true\n  }, {\n    field: 'description',\n    headerName: 'Description',\n    width: 170,\n    editable: true\n  }];\n  const rows_oth = [{}];\n  prices === null || prices === void 0 ? void 0 : prices.forEach(function (m, i) {\n    var _m$list4;\n\n    if (m.group === \"OTH\") rows_oth.push({\n      id: m.id,\n      group: m.group,\n      description: (_m$list4 = m.list) === null || _m$list4 === void 0 ? void 0 : _m$list4.description\n    });\n  });\n  rows_oth.shift(); //\n  //\n  //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n\n  /*const getPat = () => {\n      fetch(\"https://www.open-hospital.org/oh-api/patients?page=1&size=1\", {\n          headers: {\n              \"Accept\": \"application/json\",\n              \"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJhZG1pbiIsImV4cCI6MTYyOTc1Mzg1Mn0.lvhqMqq1a9fNtHM_s4pJhU9hH9sTyPKvVNvzPhSIOGfi3oLD4jCJjCNh1e66ZmaIDzA5qVAYEZbc4vFcnG-Egw\",\n          }\n      }).then(res => res.json()).then(data => setPatient(data));\n  }\n      /*const getPat = () => {\n          //get a patient\n      }*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 25\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => test(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Date_Pat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextData, {\n    className: \"bill_Date\",\n    id: \"date\",\n    label: \"Data\",\n    type: \"date\",\n    defaultValue: \"\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"bill_SelectPat\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 41\n    }\n  }, \"find Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_InputPat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 71\n    }\n  }, \"Patient\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 93\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"patient_input\",\n    value: patient_data,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 106\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 53\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 53\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 53\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 53\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 45\n    }\n  }, items === null || items === void 0 ? void 0 : items.map((x, y) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 61\n      }\n    }, x.itemDescription), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 61\n      }\n    }, x.price), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 61\n      }\n    }, x.itemQuantity));\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DrawerActivity, {\n    prices: prices,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 17\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\",\n  bill: state.bills.getBill.data,\n  med: state.medicals.medicalsOrderByName.data,\n  prices: state.prices.getPrices.data,\n  getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n  priceLists: state.prices.getPriceLists.data\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset,\n  getMedicals,\n  getBill,\n  getPrices,\n  getPriceLists\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useState","AppHeader","Footer","Button","Table","TextData","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useTranslation","connect","createBill","createBillReset","getBill","getPrices","getPriceLists","getMedicals","DrawerActivity","NewBillActivity","userCredentials","isLoading","hasSucceeded","hasFailed","billHomeRoute","med","getMedStat","bill","prices","priceLists","t","breadcrumbMap","tok","setToken","fetch","method","headers","then","res","json","data","token","console","log","patient","setPatient","url","auth","acc","fetchData","response","Accept","Authorization","error","patient_data","firstName","secondName","open_med","setOpen_med","handleClickOpen_med","handleClose_med","open_ope","setOpen_ope","handleClickOpen_ope","handleClose_ope","open_exa","setOpen_exa","handleClickOpen_exa","handleClose_exa","open_oth","setOpen_oth","handleClickOpen_oth","handleClose_oth","open_cust","setOpen_cust","handleClickOpen_cust","handleClose_cust","selectionModel","setSelectionModel","items","setItems","medicals","setMedicals","operations","setOperations","exams","setExams","others","setOthers","custom","setCustom","take_items","forEach","i","j","some","it","id","x","pre","find","p","list","description","get_input","e","a","target","get_cust","preventDefault","desc","currentTarget","elements","value","amo","amount","test","quantity","setQuantity","handleChangeSelect","event","columns_med","field","headerName","width","editable","rows_med","group","m","push","shift","row","setRow","columns_ope","rows_ope","columns_exa","rows_exa","columns_oth","rows_oth","shrink","map","y","itemDescription","price","itemQuantity","mapStateToProps","state","main","authentication","bills","status","medicalsOrderByName","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgDC,SAAhD,EAAmEC,QAAnE,QAAmF,OAAnF;AAKA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAIA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,eAAP;AAWA,SACIC,UADJ,EAEIC,eAFJ,EAGIC,OAHJ,QAIO,8BAJP;AAKA,SACIC,SADJ,EAEIC,aAFJ,QAGO,+BAHP;AAIA,SACIC,WADJ,QAEO,iCAFP;AAWA,OAAOC,cAAP,MAA2B,kBAA3B;;AAGA,MAAMC,eAA0C,GAAG,CAAC;AAChDC,EAAAA,eADgD;AAEhDC,EAAAA,SAFgD;AAGhDC,EAAAA,YAHgD;AAIhDV,EAAAA,UAJgD;AAKhDC,EAAAA,eALgD;AAMhDU,EAAAA,SANgD;AAOhDC,EAAAA,aAPgD;AAQhDC,EAAAA,GARgD;AAShDR,EAAAA,WATgD;AAUhDS,EAAAA,UAVgD;AAWhDC,EAAAA,IAXgD;AAYhDb,EAAAA,OAZgD;AAahDc,EAAAA,MAbgD;AAchDb,EAAAA,SAdgD;AAehDc,EAAAA,UAfgD;AAgBhDb,EAAAA;AAhBgD,CAAD,KAiB7C;AACF,QAAM;AAAEc,IAAAA;AAAF,MAAQpB,cAAc,EAA5B;AAOA,QAAMqB,aAAa,GAAG;AAClB,KAACD,CAAC,CAAC,eAAD,CAAF,GAAsB,GADJ;AAElB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB,UAFF;AAGlB,KAACA,CAAC,CAAC,aAAD,CAAF,GAAoB;AAHF,GAAtB;AAKAjC,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT,CAjBE,CAqBF;AACA;AACA;;AA6BA,QAAM,CAACiB,GAAD,EAAMC,QAAN,IAAkBnC,QAAQ,CAAC,EAAD,CAAhC;AACAoC,EAAAA,KAAK,CAAC,iFAAD,EAAoF;AACrFC,IAAAA,MAAM,EAAE,MAD6E;AAErFC,IAAAA,OAAO,EAAE;AACL,gBAAU;AADL;AAF4E,GAApF,CAAL,CAKGC,IALH,CAKQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALf,EAK2BF,IAL3B,CAKgCG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAACC,KAAN,CALhD;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AAEA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwB/C,QAAQ,EAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiD,GAAG,GAAG,6DAAZ;AACA,UAAMC,IAAI,GAAGf,GAAb;AACA,UAAMgB,GAAG,GAAG,kBAAZ;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC1B,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACY,GAAD,EAAM;AAAEX,UAAAA,MAAM,EAAC,KAAT;AAAgBC,UAAAA,OAAO,EAAE;AAAEe,YAAAA,MAAM,EAAEH,GAAV;AAAeI,YAAAA,aAAa,EAAEL;AAA9B;AAAzB,SAAN,CAA5B;AACA,cAAMR,IAAI,GAAG,MAAMW,QAAQ,CAACX,IAAT,EAAnB;AACAM,QAAAA,UAAU,CAACN,IAAI,CAAC,CAAD,CAAL,CAAV;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAQI,IAAR,GAAaf,GAAzB;AAEH,OAND,CAME,OAAOqB,KAAP,EAAc;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBU,KAArB;AACH;AACJ,KAVD;;AAWAJ,IAAAA,SAAS;AACZ,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMK,YAAY,GAAG,CAAAV,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEW,SAAT,IAAqB,GAArB,IAA2BX,OAA3B,aAA2BA,OAA3B,uBAA2BA,OAAO,CAAEY,UAApC,CAArB,CAlFE,CAoFF;AACA;AACA;AAGA;AACA;AACA;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9D,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhC;;AAEA,QAAM6D,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC1BF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BlE,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhC;;AAEA,QAAMiE,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC1BF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BtE,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhC;;AAEA,QAAMqE,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC1BF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B1E,KAAK,CAACE,QAAN,CAAe,KAAf,CAAhC;;AAEA,QAAMyE,mBAAmB,GAAG,MAAM;AAC9BD,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAIA,QAAME,eAAe,GAAG,MAAM;AAC1BF,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4B9E,KAAK,CAACE,QAAN,CAAe,KAAf,CAAlC;;AAEA,QAAM6E,oBAAoB,GAAG,MAAM;AAC/BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAFD;;AAIA,QAAME,gBAAgB,GAAG,MAAM;AAC3BF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,GAFD,CA1IE,CA6IF;AACA;AAEA;AACA;AACA;;;AAEA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsClF,KAAK,CAACE,QAAN,CAAmC,EAAnC,CAA5C;AAEA,QAAM,CAACiF,KAAD,EAAQC,QAAR,IAAoBpF,KAAK,CAACE,QAAN,CAAuB,EAAvB,CAA1B;AACA,QAAM,CAACmF,QAAD,EAAWC,WAAX,IAA0BtF,KAAK,CAACE,QAAN,CAAmC,EAAnC,CAAhC;AACA,QAAM,CAACqF,UAAD,EAAaC,aAAb,IAA8BxF,KAAK,CAACE,QAAN,CAAmC,EAAnC,CAApC;AACA,QAAM,CAACuF,KAAD,EAAQC,QAAR,IAAoB1F,KAAK,CAACE,QAAN,CAAmC,EAAnC,CAA1B;AACA,QAAM,CAACyF,MAAD,EAASC,SAAT,IAAsB5F,KAAK,CAACE,QAAN,CAAmC,EAAnC,CAA5B;AACA,QAAM,CAAC2F,MAAD,EAASC,SAAT,IAAsB9F,KAAK,CAACE,QAAN,EAA5B;;AAEA,QAAM6F,UAAU,GAAG,MAAM;AAErBV,IAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEW,OAAV,CAAkB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9B,UAAKf,KAAK,CAACgB,IAAN,CAAWC,EAAE,IAAIA,EAAE,CAACC,EAAH,KAAUJ,CAA3B,CAAD,KAAoC,IAAxC,EAA8C;AAC1Cd,QAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEa,OAAP,CAAe,UAAUM,CAAV,EAAa;AACxB,cAAIA,CAAC,CAACD,EAAF,KAASJ,CAAb,EACInD,OAAO,CAACC,GAAR,CAAY,MAAZ;AACP,SAHD;AAIH,OALD,MAMK;AACD;AACAqC,QAAAA,QAAQ,CAACmB,GAAG;AAAA;;AAAA,iBACR,CAAC,GAAGA,GAAJ,EACA;AACI,wBAAYvE,MAAZ,aAAYA,MAAZ,uCAAYA,MAAM,CAAEwE,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACJ,EAAF,IAAQJ,CAA1B,CAAZ,iDAAY,aAA8BI,EAD9C;AAEI,kBAAM,CAFV;AAGI,qBAAS,IAHb;AAII,sBAAU,CAJd;AAKI,uBAAWrE,MAAX,aAAWA,MAAX,wCAAWA,MAAM,CAAEwE,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACJ,EAAF,IAAQJ,CAA1B,CAAX,kDAAW,cAA8BI,EAL7C;AAMI,+BAAmBrE,MAAnB,aAAmBA,MAAnB,wCAAmBA,MAAM,CAAEwE,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACJ,EAAF,IAAQJ,CAA1B,CAAnB,wEAAmB,cAA8BS,IAAjD,uDAAmB,mBAAoCC,WAN3D;AAOI,0BAAc,CAPlB;AAQI,4BAAgB,CARpB;AASI,+BAAmB,GATvB;AAUI,sBAAU3E,MAAV,aAAUA,MAAV,wCAAUA,MAAM,CAAEwE,IAAR,CAAaC,CAAC,IAAIA,CAAC,CAACJ,EAAF,IAAQJ,CAA1B,CAAV,kDAAU,cAA8BI;AAV5C,WADA,CADQ;AAAA,SAAJ,CAAR;AAcH;AACJ,KAxBD;AAyBH,GA3BD;AA4BA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKI,QAAMO,SAAS,GAAIC,CAAD,IAA4D;AAC1E,UAAMC,CAAC,GAAGD,CAAC,CAACE,MAAF,CAASV,EAAnB;AACAvD,IAAAA,OAAO,CAACC,GAAR,CAAY+D,CAAZ,EAF0E,CAI1E;AACH,GALD;;AAOA,QAAME,QAAQ,GAAIH,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,IAAI,GAAIL,CAAC,CAACM,aAAF,CAAgBC,QAAhB,CAAyB,CAAzB,CAAD,CAAkDC,KAA/D;AACA,UAAMC,GAAG,GAAIT,CAAC,CAACM,aAAF,CAAgBC,QAAhB,CAAyB,CAAzB,CAAD,CAAkDC,KAA9D;AACAvB,IAAAA,SAAS,CAAC;AAAEO,MAAAA,EAAE,EAAE,CAAN;AAASM,MAAAA,WAAW,EAAEO,IAAtB;AAA4BK,MAAAA,MAAM,EAAED;AAApC,KAAD,CAAT;AACAxE,IAAAA,OAAO,CAACC,GAAR,CAAY8C,MAAZ;AAEH,GAPD;;AASA,QAAM2B,IAAI,GAAIX,CAAD,IAAyC;AAAA;;AAClDA,IAAAA,CAAC,CAACI,cAAF;AACAnE,IAAAA,OAAO,CAACC,GAAR,SAAa8D,CAAC,CAACM,aAAF,CAAgBC,QAAhB,CAAyB,CAAzB,CAAb,yCAAY,KAAmDC,KAA/D;AACH,GAHD,CAzOE,CA6OF;AACA;AAEA;AACA;AACA;;;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0B1H,KAAK,CAACE,QAAN,CAAe,GAAf,CAAhC;;AACA,QAAMyH,kBAAkB,GAAIC,KAAD,IAAkD;AACzEF,IAAAA,WAAW,CAACE,KAAK,CAACb,MAAN,CAAaM,KAAd,CAAX;AACH,GAFD,CApPE,CAyPF;AACA;AACA;;;AACA,QAAMQ,WAAW,GAAG,CAChB;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GADgB,EAEhB;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,UAAU,EAAE,OAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAFgB,EAQhB;AACIH,IAAAA,KAAK,EAAE,aADX;AAEIC,IAAAA,UAAU,EAAE,aAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GARgB,CAApB;AAsBA,MAAIC,QAAa,GAAG,CAAC;AAAE7B,IAAAA,EAAE,EAAE,CAAN;AAAS8B,IAAAA,KAAK,EAAE,EAAhB;AAAoBxB,IAAAA,WAAW,EAAE;AAAjC,GAAD,CAApB;AAEA3E,EAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEgE,OAAR,CAAgB,UAAUoC,CAAV,EAAanC,CAAb,EAAgB;AAAA;;AAC5B,QAAImC,CAAC,CAACD,KAAF,KAAY,KAAhB,EACID,QAAQ,CAACG,IAAT,CAAc;AAAEhC,MAAAA,EAAE,EAAE+B,CAAC,CAAC/B,EAAR;AAAY8B,MAAAA,KAAK,EAAEC,CAAC,CAACD,KAArB;AAA4BxB,MAAAA,WAAW,aAAEyB,CAAC,CAAC1B,IAAJ,4CAAE,QAAQC;AAAjD,KAAd;AACP,GAHD;AAIAuB,EAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,KAAV,GAxRE,CA0RF;AACA;AACA;;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBtI,QAAQ,CAAC,EAAD,CAA9B,CA7RE,CA8RF;AACA;AAEA;AACA;AACA;;AACA,QAAMuI,WAAyB,GAAG,CAC9B;AAAEX,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAD8B,EAE9B;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,UAAU,EAAE,OAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAF8B,EAQ9B;AACIH,IAAAA,KAAK,EAAE,aADX;AAEIC,IAAAA,UAAU,EAAE,aAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAR8B,CAAlC;AAgBA,QAAMS,QAAQ,GAAG,CAAC,EAAD,CAAjB;AAEA1G,EAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEgE,OAAR,CAAgB,UAAUoC,CAAV,EAAanC,CAAb,EAAgB;AAAA;;AAC5B,QAAImC,CAAC,CAACD,KAAF,KAAY,KAAhB,EACIO,QAAQ,CAACL,IAAT,CAAc;AAAEhC,MAAAA,EAAE,EAAE+B,CAAC,CAAC/B,EAAR;AAAY8B,MAAAA,KAAK,EAAEC,CAAC,CAACD,KAArB;AAA4BxB,MAAAA,WAAW,cAAEyB,CAAC,CAAC1B,IAAJ,6CAAE,SAAQC;AAAjD,KAAd;AACP,GAHD;AAIA+B,EAAAA,QAAQ,CAACJ,KAAT,GA1TE,CA2TF;AACA;AAEA;AACA;AACA;;AACA,QAAMK,WAAyB,GAAG,CAC9B;AAAEb,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAD8B,EAE9B;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,UAAU,EAAE,OAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAF8B,EAQ9B;AACIH,IAAAA,KAAK,EAAE,aADX;AAEIC,IAAAA,UAAU,EAAE,aAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAR8B,CAAlC;AAgBA,QAAMW,QAAQ,GAAG,CAAC,EAAD,CAAjB;AAEA5G,EAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEgE,OAAR,CAAgB,UAAUoC,CAAV,EAAanC,CAAb,EAAgB;AAAA;;AAC5B,QAAImC,CAAC,CAACD,KAAF,KAAY,KAAhB,EACIS,QAAQ,CAACP,IAAT,CAAc;AAAEhC,MAAAA,EAAE,EAAE+B,CAAC,CAAC/B,EAAR;AAAY8B,MAAAA,KAAK,EAAEC,CAAC,CAACD,KAArB;AAA4BxB,MAAAA,WAAW,cAAEyB,CAAC,CAAC1B,IAAJ,6CAAE,SAAQC;AAAjD,KAAd;AACP,GAHD;AAIAiC,EAAAA,QAAQ,CAACN,KAAT,GAvVE,CAwVF;AACA;AAEA;AACA;AACA;;AACA,QAAMO,WAAyB,GAAG,CAC9B;AAAEf,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,UAAU,EAAE,IAA3B;AAAiCC,IAAAA,KAAK,EAAE;AAAxC,GAD8B,EAE9B;AACIF,IAAAA,KAAK,EAAE,OADX;AAEIC,IAAAA,UAAU,EAAE,OAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAF8B,EAQ9B;AACIH,IAAAA,KAAK,EAAE,aADX;AAEIC,IAAAA,UAAU,EAAE,aAFhB;AAGIC,IAAAA,KAAK,EAAE,GAHX;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAR8B,CAAlC;AAgBA,QAAMa,QAAQ,GAAG,CAAC,EAAD,CAAjB;AAEA9G,EAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEgE,OAAR,CAAgB,UAAUoC,CAAV,EAAanC,CAAb,EAAgB;AAAA;;AAC5B,QAAImC,CAAC,CAACD,KAAF,KAAY,KAAhB,EACIW,QAAQ,CAACT,IAAT,CAAc;AAAEhC,MAAAA,EAAE,EAAE+B,CAAC,CAAC/B,EAAR;AAAY8B,MAAAA,KAAK,EAAEC,CAAC,CAACD,KAArB;AAA4BxB,MAAAA,WAAW,cAAEyB,CAAC,CAAC1B,IAAJ,6CAAE,SAAQC;AAAjD,KAAd;AACP,GAHD;AAIAmC,EAAAA,QAAQ,CAACR,KAAT,GApXE,CAqXF;AACA;AAIA;;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEQ,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAE9G,eADrB;AAEI,IAAA,aAAa,EAAEW,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,CAAC,CAAC,aAAD,CAAlC,CADJ,eAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAE2E,CAAC,IAAIW,IAAI,CAACX,CAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AACI,IAAA,SAAS,EAAC,WADd;AAEI,IAAA,EAAE,EAAC,MAFP;AAGI,IAAA,KAAK,EAAC,MAHV;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,YAAY,EAAC,EALjB;AAMI,IAAA,eAAe,EAAE;AACbkC,MAAAA,MAAM,EAAE;AADK,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAWI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAiD,IAAA,OAAO,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlC,eAAwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxD,eAAqE;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,KAAK,EAAErF,YAAxC;AAAsD,IAAA,QAAQ,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArE,CAdJ,CADJ,eAiBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAE7C,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAW,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,eAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,CADJ,CADJ,eASI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKsE,KADL,aACKA,KADL,uBACKA,KAAK,CAAE6D,GAAP,CAAW,CAAC1C,CAAD,EAAI2C,CAAJ,KAAU;AAClB,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY3C,CAAC,CAAC4C,eAAd,CADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY5C,CAAC,CAAC6C,KAAd,CAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY7C,CAAC,CAAC8C,YAAd,CAHJ,CADJ;AAOH,GARA,CADL,CATJ,CADJ,CADJ,CAjBJ,CADJ,eA6CI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEpH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CA7CJ,CAFJ,CADJ,CALJ,eA2DI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3DJ,CADJ;AA+DH,CAvdL;;AA0dI,MAAMqH,eAAe,GAAIC,KAAD,KAAiC;AACrD9H,EAAAA,eAAe,EAAE8H,KAAK,CAACC,IAAN,CAAWC,cAAX,CAA0B5G,IADU;AAErDnB,EAAAA,SAAS,EAAE6H,KAAK,CAACG,KAAN,CAAYzI,UAAZ,CAAuB0I,MAAvB,KAAkC,SAFQ;AAGrDhI,EAAAA,YAAY,EAAE4H,KAAK,CAACG,KAAN,CAAYzI,UAAZ,CAAuB0I,MAAvB,KAAkC,SAHK;AAIrD/H,EAAAA,SAAS,EAAE2H,KAAK,CAACG,KAAN,CAAYzI,UAAZ,CAAuB0I,MAAvB,KAAkC,MAJQ;AAKrD3H,EAAAA,IAAI,EAAEuH,KAAK,CAACG,KAAN,CAAYvI,OAAZ,CAAoB0B,IAL2B;AAMrDf,EAAAA,GAAG,EAAEyH,KAAK,CAACjE,QAAN,CAAesE,mBAAf,CAAmC/G,IANa;AAOrDZ,EAAAA,MAAM,EAAEsH,KAAK,CAACtH,MAAN,CAAab,SAAb,CAAuByB,IAPsB;AAQrDd,EAAAA,UAAU,EAAEwH,KAAK,CAACjE,QAAN,CAAesE,mBAAf,CAAmCD,MAAnC,IAA6C,MARJ;AASrDzH,EAAAA,UAAU,EAAEqH,KAAK,CAACtH,MAAN,CAAaZ,aAAb,CAA2BwB;AATc,CAAjC,CAAxB;;AAeA,MAAMgH,kBAAkC,GAAG;AACvC5I,EAAAA,UADuC;AAEvCC,EAAAA,eAFuC;AAGvCI,EAAAA,WAHuC;AAIvCH,EAAAA,OAJuC;AAKvCC,EAAAA,SALuC;AAMvCC,EAAAA;AANuC,CAA3C;AASA,eAAeL,OAAO,CAACsI,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CrI,eAA7C,CAAf","sourcesContent":["import React, { ChangeEvent, FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport get from \"lodash.get\";\nimport has from \"lodash.has\";\nimport set from \"lodash.set\";\nimport axios from \"axios\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { IState } from \"../../../types\";\nimport \"./styles.scss\";\nimport Dialog from '@material-ui/core/Dialog';\nimport { DataGrid, GridSelectionModel, GridColDef, GridRowId, GridRowData } from '@material-ui/data-grid';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AddIcon from '@material-ui/icons/Add';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { PatientDTO } from \"../../../generated\";\nimport {\n    createBill,\n    createBillReset,\n    getBill,\n} from \"../../../state/bills/actions\";\nimport {\n    getPrices,\n    getPriceLists\n} from \"../../../state/prices/actions\"\nimport {\n    getMedicals,\n} from \"../../../state/medicals/actions\"\nimport {\n    IDispatchProps,\n    IStateProps,\n    TProps,\n    Item\n} from \"./types\";\nimport patientDTO from \"../../../mockServer/fixtures/patientDTO\";\nimport MedicalDrawerActivity from \"./DrawerActivity\";\nimport DrawerActivity from \"./DrawerActivity\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n    med,\n    getMedicals,\n    getMedStat,\n    bill,\n    getBill,\n    prices,\n    getPrices,\n    priceLists,\n    getPriceLists\n}) => {\n    const { t } = useTranslation();\n    type Custom = {\n        id: number,\n        description: string,\n        amount: string,\n    }\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n    useEffect(() => {\n        getMedicals();\n    }, []);\n\n    useEffect(() => {\n        getPrices();\n    }, []);\n\n    //  //  //  //  //\n    // GET PATIENT  //\n    //  //  //  //  //\n    type Patient = {\n        \"code\": number | undefined,\n        \"firstName\": string | undefined,\n        \"secondName\": string | undefined,\n        \"name\": string | undefined,\n        \"birthDate\": string | undefined,\n        \"age\": number | undefined,\n        \"agetype\": string | undefined,\n        \"sex\": string | undefined,\n        \"address\": string | undefined,\n        \"city\": string | undefined,\n        \"nextKin\": string | undefined,\n        \"telephone\": string | undefined,\n        \"note\": string | undefined,\n        \"mother_name\": string | undefined,\n        \"mother\": string | undefined,\n        \"father_name\": string | undefined,\n        \"father\": string | undefined,\n        \"bloodType\": string | undefined,\n        \"hasInsurance\": string | undefined,\n        \"parentTogether\": string | undefined,\n        \"taxCode\": string | undefined,\n        \"lock\": number | undefined,\n        \"blobPhoto\": string | undefined,\n        \"hashCode\": number | undefined,\n    }\n\n\n    const [tok, setToken] = useState('')\n    fetch(\"https://www.open-hospital.org/oh11-api/auth/login?password=admin&username=admin\", {\n        method: 'POST',\n        headers: {\n            \"Accept\": \"*/*\",\n        }\n    }).then(res => res.json()).then(data => setToken(data.token))\n    console.log(tok)\n\n    const [patient, setPatient] = useState<Patient>();\n\n    useEffect(() => {\n        const url = \"https://www.open-hospital.org/oh-api/patients?page=1&size=1\";\n        const auth = tok;\n        const acc = \"application/json\";\n\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url, { method:'GET', headers: { Accept: acc, Authorization: auth } });\n                const json = await response.json();\n                setPatient(json[0])\n                console.log(\"TTHIS\"+auth+tok)\n\n            } catch (error) {\n                console.log(\"error\", error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const patient_data = patient?.firstName + \" \" + patient?.secondName;\n\n    //  //  //\n    //  END //\n    //  //  //\n\n\n    //\n    //Gestione Dialog\n    //\n    const [open_med, setOpen_med] = React.useState(false);\n\n    const handleClickOpen_med = () => {\n        setOpen_med(true);\n    };\n\n    const handleClose_med = () => {\n        setOpen_med(false);\n    };\n\n    const [open_ope, setOpen_ope] = React.useState(false);\n\n    const handleClickOpen_ope = () => {\n        setOpen_ope(true);\n    };\n\n    const handleClose_ope = () => {\n        setOpen_ope(false);\n    };\n\n    const [open_exa, setOpen_exa] = React.useState(false);\n\n    const handleClickOpen_exa = () => {\n        setOpen_exa(true);\n    };\n\n    const handleClose_exa = () => {\n        setOpen_exa(false);\n    };\n\n    const [open_oth, setOpen_oth] = React.useState(false);\n\n    const handleClickOpen_oth = () => {\n        setOpen_oth(true);\n    };\n\n    const handleClose_oth = () => {\n        setOpen_oth(false);\n    };\n\n    const [open_cust, setOpen_cust] = React.useState(false);\n\n    const handleClickOpen_cust = () => {\n        setOpen_cust(true);\n    };\n\n    const handleClose_cust = () => {\n        setOpen_cust(false);\n    };\n    //\n    //\n\n    //\n    //test useState\n    //\n\n    const [selectionModel, setSelectionModel] = React.useState<GridSelectionModel>([]);\n\n    const [items, setItems] = React.useState<Item[]>([]);\n    const [medicals, setMedicals] = React.useState<GridSelectionModel>([]);\n    const [operations, setOperations] = React.useState<GridSelectionModel>([]);\n    const [exams, setExams] = React.useState<GridSelectionModel>([]);\n    const [others, setOthers] = React.useState<GridSelectionModel>([]);\n    const [custom, setCustom] = React.useState<Custom>();\n\n    const take_items = () => {\n\n        medicals?.forEach(function (i, j) {\n            if ((items.some(it => it.id === i)) === true) {\n                items?.forEach(function (x) {\n                    if (x.id === i)\n                        console.log('ciao');\n                })\n            }\n            else {\n                //item.push({ id: prices?.find(p => p.id == i)?.id, description: prices?.find(p => p.id == i)?.description, amount: prices?.find(p => p.id == i)?.price, item_quant: 1 });\n                setItems(pre =>\n                    [...pre,\n                    {\n                        \"hashCode\": prices?.find(p => p.id == i)?.id,\n                        \"id\": 1,\n                        \"price\": true,\n                        \"billId\": 1,\n                        \"priceId\": prices?.find(p => p.id == i)?.id,\n                        \"itemDescription\": prices?.find(p => p.id == i)?.list?.description,\n                        \"itemAmount\": 1,\n                        \"itemQuantity\": 1,\n                        \"itemDisplayCode\": \"1\",\n                        \"itemId\": prices?.find(p => p.id == i)?.id,\n                    }]);\n            }\n        })\n    }\n    /*\n    const get_items_o = () => {\n        operations?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_e = () => {\n        exams?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n    const get_items_ot = () => {\n        others?.forEach(function (i, j) {\n            if (!(items.includes(i)))\n                setItems(prevItems => [...prevItems, i]);\n        })\n    }\n\n    const get_items_cust = () => {\n        const i: GridRowId = 2;\n        setItems(prevItems => [...prevItems, i]);\n    }\n\n    const delete_item = (e: GridRowId) => {\n        console.log(e);\n        setItems(items.filter(item => e !== item));\n    }\n\n\n*/\n    const get_input = (e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const a = e.target.id as string;\n        console.log(a);\n\n        //setCustom({id:1, description:'ciao'});\n    }\n\n    const get_cust = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const desc = (e.currentTarget.elements[0] as HTMLInputElement).value as string;\n        const amo = (e.currentTarget.elements[1] as HTMLInputElement).value as string;\n        setCustom({ id: 1, description: desc, amount: amo });\n        console.log(custom);\n\n    }\n\n    const test = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        console.log((e.currentTarget.elements[4] as HTMLInputElement)?.value);\n    }\n    //\n    //\n\n    //  //  //  //  //  //\n    //  gestione select //\n    //  //  //  //  //  //\n    const [quantity, setQuantity] = React.useState('1');\n    const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\n        setQuantity(event.target.value as string);\n    };\n\n\n    //  //  //  //  //  //\n    // Gestione Grid MED//\n    //  //  //  //  //  //\n    const columns_med = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    type row = [{\n        id: number | undefined,\n        group: string,\n        description: string | undefined\n    }];\n\n    let rows_med: row = [{ id: 0, group: '', description: '' }];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"MED\")\n            rows_med.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_med?.shift();\n\n    //  //  //  //  //  //\n    //  GESTIONE ROWS   //\n    //  //  //  //  //  //\n    const [row, setRow] = useState('');\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OPE//\n    //  //  //  //  //  //\n    const columns_ope: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_ope = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OPE\")\n            rows_ope.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_ope.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid EXA//\n    //  //  //  //  //  //\n    const columns_exa: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_exa = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"EXA\")\n            rows_exa.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_exa.shift();\n    //\n    //\n\n    //  //  //  //  //  //\n    // Gestione Grid OTH//\n    //  //  //  //  //  //\n    const columns_oth: GridColDef[] = [\n        { field: 'id', headerName: 'ID', width: 90 },\n        {\n            field: 'group',\n            headerName: 'Group',\n            width: 125,\n            editable: true,\n        },\n        {\n            field: 'description',\n            headerName: 'Description',\n            width: 170,\n            editable: true,\n        },\n    ];\n\n    const rows_oth = [{}];\n\n    prices?.forEach(function (m, i) {\n        if (m.group === \"OTH\")\n            rows_oth.push({ id: m.id, group: m.group, description: m.list?.description })\n    })\n    rows_oth.shift();\n    //\n    //\n\n\n\n    //fetch('https://www.open-hospital.org/oh11-api/pricelists/prices').then(res => res.json()).then(data => console.log(data)).catch(error => console.log('male'));\n    /*const getPat = () => {\n        fetch(\"https://www.open-hospital.org/oh-api/patients?page=1&size=1\", {\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Authorization\": \"Bearer eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhZG1pbiIsImF1dGgiOiJhZG1pbiIsImV4cCI6MTYyOTc1Mzg1Mn0.lvhqMqq1a9fNtHM_s4pJhU9hH9sTyPKvVNvzPhSIOGfi3oLD4jCJjCNh1e66ZmaIDzA5qVAYEZbc4vFcnG-Egw\",\n            }\n        }).then(res => res.json()).then(data => setPatient(data));\n    }\n        /*const getPat = () => {\n            //get a patient\n        }*/\n\n        return (\n            <div className=\"new_Bill\">\n                <AppHeader\n                    userCredentials={userCredentials}\n                    breadcrumbMap={breadcrumbMap}\n                />\n                <div className=\"newBill__background\">\n                    <div className=\"newBill__content\">\n                        <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                        <div className=\"newBill__panel\">\n                            <form onSubmit={e => test(e)}>\n                                <div className=\"newBill_Head\">\n                                    <div className=\"newBill_Date_Pat\">\n                                        <TextData\n                                            className='bill_Date'\n                                            id=\"date\"\n                                            label=\"Data\"\n                                            type=\"date\"\n                                            defaultValue=\"\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                        />\n                                        <Button type=\"submit\" className='bill_SelectPat' variant=\"outlined\">find Patient</Button>\n                                    </div>\n                                    <div className=\"newBill_InputPat\"><label>Patient</label><span></span><input className=\"patient_input\" value={patient_data} disabled ></input></div>\n                                </div>\n                                <div className=\"newBill_Rows\">\n                                    <TableContainer component={Paper}>\n                                        <Table size=\"small\" aria-label=\"a dense table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Description</TableCell>\n                                                    <TableCell>Amount</TableCell>\n                                                    <TableCell>Qty</TableCell>\n                                                    <TableCell>Delete</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {items?.map((x, y) => {\n                                                    return (\n                                                        <TableRow>\n                                                            <TableCell>{x.itemDescription}</TableCell>\n                                                            <TableCell>{x.price}</TableCell>\n                                                            <TableCell>{x.itemQuantity}</TableCell>\n                                                        </TableRow>\n                                                    )\n                                                }\n                                                )}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </div>\n                            </form>\n                            <div className=\"newBill_Drawer\">\n                                <DrawerActivity prices={prices} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n\n\n    const mapStateToProps = (state: IState): IStateProps => ({\n        userCredentials: state.main.authentication.data,\n        isLoading: state.bills.createBill.status === \"LOADING\",\n        hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n        hasFailed: state.bills.createBill.status === \"FAIL\",\n        bill: state.bills.getBill.data,\n        med: state.medicals.medicalsOrderByName.data,\n        prices: state.prices.getPrices.data,\n        getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n        priceLists: state.prices.getPriceLists.data\n    });\n\n\n\n\n    const mapDispatchToProps: IDispatchProps = {\n        createBill,\n        createBillReset,\n        getMedicals,\n        getBill,\n        getPrices,\n        getPriceLists\n    };\n\n    export default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}