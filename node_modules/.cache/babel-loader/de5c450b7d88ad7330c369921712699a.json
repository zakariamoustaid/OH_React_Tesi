{"ast":null,"code":"import produce from \"immer\";\nimport { CREATE_EXAMINATION_FAIL, CREATE_EXAMINATION_LOADING, CREATE_EXAMINATION_RESET, CREATE_EXAMINATION_SUCCESS, SEARCH_EXAMINATION_FAIL, SEARCH_EXAMINATION_LOADING, SEARCH_EXAMINATION_SUCCESS, SEARCH_EXAMINATION_SUCCESS_EMPTY } from \"./consts\";\nimport { initial } from \"./initial\";\nexport default produce((draft, action) => {\n  switch (action.type) {\n    /**\n     * CREATE_EXAMINATION\n     */\n    case CREATE_EXAMINATION_LOADING:\n      {\n        draft.createExamination.status = \"LOADING\";\n        break;\n      }\n\n    case CREATE_EXAMINATION_SUCCESS:\n      {\n        draft.createExamination.status = \"SUCCESS\";\n        delete draft.createExamination.error;\n        break;\n      }\n\n    case CREATE_EXAMINATION_FAIL:\n      {\n        draft.createExamination.status = \"FAIL\";\n        draft.createExamination.error = action.error;\n        break;\n      }\n\n    case CREATE_EXAMINATION_RESET:\n      {\n        draft.createExamination.status = \"IDLE\";\n        delete draft.createExamination.error;\n        break;\n      }\n\n    /**\n     * SEARCH_EXAMINATION\n     */\n\n    case SEARCH_EXAMINATION_LOADING:\n      {\n        draft.examinationsByPatientId.status = \"LOADING\";\n        break;\n      }\n\n    case SEARCH_EXAMINATION_SUCCESS:\n      {\n        draft.examinationsByPatientId.status = \"SUCCESS\";\n        draft.examinationsByPatientId.data = action.payload;\n        delete draft.examinationsByPatientId.error;\n        break;\n      }\n\n    case SEARCH_EXAMINATION_SUCCESS_EMPTY:\n      {\n        draft.examinationsByPatientId.status = \"SUCCESS_EMPTY\";\n        draft.examinationsByPatientId.data = [];\n        delete draft.examinationsByPatientId.error;\n        break;\n      }\n\n    case SEARCH_EXAMINATION_FAIL:\n      {\n        draft.examinationsByPatientId.status = \"FAIL\";\n        draft.examinationsByPatientId.error = action.error;\n        break;\n      }\n  }\n}, initial);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/state/examinations/reducer.ts"],"names":["produce","CREATE_EXAMINATION_FAIL","CREATE_EXAMINATION_LOADING","CREATE_EXAMINATION_RESET","CREATE_EXAMINATION_SUCCESS","SEARCH_EXAMINATION_FAIL","SEARCH_EXAMINATION_LOADING","SEARCH_EXAMINATION_SUCCESS","SEARCH_EXAMINATION_SUCCESS_EMPTY","initial","draft","action","type","createExamination","status","error","examinationsByPatientId","data","payload"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,SACEC,uBADF,EAEEC,0BAFF,EAGEC,wBAHF,EAIEC,0BAJF,EAKEC,uBALF,EAMEC,0BANF,EAOEC,0BAPF,EAQEC,gCARF,QASO,UATP;AAUA,SAASC,OAAT,QAAwB,WAAxB;AAGA,eAAeT,OAAO,CACpB,CAACU,KAAD,EAA4BC,MAA5B,KAA0D;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE;AACN;AACA;AACM,SAAKV,0BAAL;AAAiC;AAC/BQ,QAAAA,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,GAAiC,SAAjC;AACA;AACD;;AAED,SAAKV,0BAAL;AAAiC;AAC/BM,QAAAA,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,GAAiC,SAAjC;AACA,eAAOJ,KAAK,CAACG,iBAAN,CAAwBE,KAA/B;AACA;AACD;;AAED,SAAKd,uBAAL;AAA8B;AAC5BS,QAAAA,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,GAAiC,MAAjC;AACAJ,QAAAA,KAAK,CAACG,iBAAN,CAAwBE,KAAxB,GAAgCJ,MAAM,CAACI,KAAvC;AACA;AACD;;AAED,SAAKZ,wBAAL;AAA+B;AAC7BO,QAAAA,KAAK,CAACG,iBAAN,CAAwBC,MAAxB,GAAiC,MAAjC;AACA,eAAOJ,KAAK,CAACG,iBAAN,CAAwBE,KAA/B;AACA;AACD;;AAED;AACN;AACA;;AACM,SAAKT,0BAAL;AAAiC;AAC/BI,QAAAA,KAAK,CAACM,uBAAN,CAA8BF,MAA9B,GAAuC,SAAvC;AACA;AACD;;AAED,SAAKP,0BAAL;AAAiC;AAC/BG,QAAAA,KAAK,CAACM,uBAAN,CAA8BF,MAA9B,GAAuC,SAAvC;AACAJ,QAAAA,KAAK,CAACM,uBAAN,CAA8BC,IAA9B,GAAqCN,MAAM,CAACO,OAA5C;AACA,eAAOR,KAAK,CAACM,uBAAN,CAA8BD,KAArC;AACA;AACD;;AACD,SAAKP,gCAAL;AAAuC;AACrCE,QAAAA,KAAK,CAACM,uBAAN,CAA8BF,MAA9B,GAAuC,eAAvC;AACAJ,QAAAA,KAAK,CAACM,uBAAN,CAA8BC,IAA9B,GAAqC,EAArC;AACA,eAAOP,KAAK,CAACM,uBAAN,CAA8BD,KAArC;AACA;AACD;;AACD,SAAKV,uBAAL;AAA8B;AAC5BK,QAAAA,KAAK,CAACM,uBAAN,CAA8BF,MAA9B,GAAuC,MAAvC;AACAJ,QAAAA,KAAK,CAACM,uBAAN,CAA8BD,KAA9B,GAAsCJ,MAAM,CAACI,KAA7C;AACA;AACD;AAnDH;AAqDD,CAvDmB,EAwDpBN,OAxDoB,CAAtB","sourcesContent":["import produce from \"immer\";\nimport { IAction } from \"../types\";\nimport {\n  CREATE_EXAMINATION_FAIL,\n  CREATE_EXAMINATION_LOADING,\n  CREATE_EXAMINATION_RESET,\n  CREATE_EXAMINATION_SUCCESS,\n  SEARCH_EXAMINATION_FAIL,\n  SEARCH_EXAMINATION_LOADING,\n  SEARCH_EXAMINATION_SUCCESS,\n  SEARCH_EXAMINATION_SUCCESS_EMPTY,\n} from \"./consts\";\nimport { initial } from \"./initial\";\nimport { IExaminationsState } from \"./types\";\n\nexport default produce(\n  (draft: IExaminationsState, action: IAction<any, any>) => {\n    switch (action.type) {\n      /**\n       * CREATE_EXAMINATION\n       */\n      case CREATE_EXAMINATION_LOADING: {\n        draft.createExamination.status = \"LOADING\";\n        break;\n      }\n\n      case CREATE_EXAMINATION_SUCCESS: {\n        draft.createExamination.status = \"SUCCESS\";\n        delete draft.createExamination.error;\n        break;\n      }\n\n      case CREATE_EXAMINATION_FAIL: {\n        draft.createExamination.status = \"FAIL\";\n        draft.createExamination.error = action.error;\n        break;\n      }\n\n      case CREATE_EXAMINATION_RESET: {\n        draft.createExamination.status = \"IDLE\";\n        delete draft.createExamination.error;\n        break;\n      }\n\n      /**\n       * SEARCH_EXAMINATION\n       */\n      case SEARCH_EXAMINATION_LOADING: {\n        draft.examinationsByPatientId.status = \"LOADING\";\n        break;\n      }\n\n      case SEARCH_EXAMINATION_SUCCESS: {\n        draft.examinationsByPatientId.status = \"SUCCESS\";\n        draft.examinationsByPatientId.data = action.payload;\n        delete draft.examinationsByPatientId.error;\n        break;\n      }\n      case SEARCH_EXAMINATION_SUCCESS_EMPTY: {\n        draft.examinationsByPatientId.status = \"SUCCESS_EMPTY\";\n        draft.examinationsByPatientId.data = [];\n        delete draft.examinationsByPatientId.error;\n        break;\n      }\n      case SEARCH_EXAMINATION_FAIL: {\n        draft.examinationsByPatientId.status = \"FAIL\";\n        draft.examinationsByPatientId.error = action.error;\n        break;\n      }\n    }\n  },\n  initial\n);\n"]},"metadata":{},"sourceType":"module"}