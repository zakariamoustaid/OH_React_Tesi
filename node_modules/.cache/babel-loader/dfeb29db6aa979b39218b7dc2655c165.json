{"ast":null,"code":"var _jsxFileName = \"/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/appHeader/AppHeader.tsx\";\nimport { Tooltip, Typography } from \"@material-ui/core\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport { Trans } from \"react-i18next\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LangSwitcher from \"../langSwitcher/LangSwitcher\";\nimport NavigateBefore from \"@material-ui/icons/NavigateBefore\";\nimport classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../../assets/logo-color.svg\";\nimport \"./styles.scss\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { connect, useSelector } from \"react-redux\";\nimport { setLogoutThunk } from \"../../../state/main/actions\";\nimport ConfirmationDialog from \"../confirmationDialog/ConfirmationDialog\";\nimport warningIcon from \"../../../assets/warning-icon.png\";\n\nconst AppHeader = ({\n  breadcrumbMap,\n  setLogoutThunk\n}) => {\n  const keys = Object.keys(breadcrumbMap);\n  const trailEdgeKey = keys.pop();\n  const {\n    t\n  } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const username = useSelector(state => {\n    var _state$main$authentic;\n\n    return (_state$main$authentic = state.main.authentication.data) === null || _state$main$authentic === void 0 ? void 0 : _state$main$authentic.displayName;\n  });\n\n  const openMenu = isOpen => {\n    isOpen ? document.body.classList.add(\"disable-scroll\") : document.body.classList.remove(\"disable-scroll\");\n    setIsOpen(isOpen);\n  };\n\n  const [openLogoutConfirmation, setOpenLogoutConfirmation] = useState(false);\n\n  const handleLogout = () => {\n    setOpenLogoutConfirmation(false);\n    setLogoutThunk();\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"appHeader\", {\n      open_menu: isOpen\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__nav_lang_switcher\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LangSwitcher, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 56\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userInfo__toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Trans, {\n    i18nKey: \"dashboard.welcomename\",\n    values: {\n      name: username\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: t(\"login.signout\"),\n    \"aria-label\": \"sign out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ExitToAppIcon, {\n    className: \"userInfo__toolbar_icon\",\n    id: \"signout_icon\",\n    onClick: () => setOpenLogoutConfirmation(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__identifier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__identifier__logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Open Hospital\",\n    height: \"45px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => history.push(breadcrumbMap[keys.pop() || \"/\"]),\n    className: classNames(\"appHeader__navigate_before\", {\n      hidden: trailEdgeKey === \"Dashboard\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavigateBefore, {\n    fontSize: \"large\",\n    style: {\n      color: \"#fc1812\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__identified__main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__identified__main__headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Princeton-Plainsboro Teaching Hospital\"), /*#__PURE__*/React.createElement(Breadcrumbs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__home_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(HomeIcon, {\n    fontSize: \"small\",\n    style: {\n      color: \"#fff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  })), keys.map((key, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    to: breadcrumbMap[key],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, key))), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, trailEdgeKey))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__identified__trigger\",\n    onClick: () => openMenu(!isOpen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trigger_x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trigger_y\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trigger_z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__nav_items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__nav__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, t(\"nav.pharmacy\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__nav__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, t(\"nav.ward\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appHeader__nav__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, t(\"nav.billing\")))))), /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    isOpen: openLogoutConfirmation,\n    title: t(\"login.signout\"),\n    info: `Are you sure you want to ${t(\"login.signout\")}?`,\n    icon: warningIcon,\n    primaryButtonLabel: t(\"login.signout\"),\n    secondaryButtonLabel: \"Dismiss\",\n    handlePrimaryButtonClick: handleLogout,\n    handleSecondaryButtonClick: () => setOpenLogoutConfirmation(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  status: state.main.logout.status || \"IDLE\"\n});\n\nconst mapDispatchToProps = {\n  setLogoutThunk\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AppHeader);","map":{"version":3,"sources":["/home/zak/projects/OH_R/openhospital-ui/src/components/accessories/appHeader/AppHeader.tsx"],"names":["Tooltip","Typography","Breadcrumbs","Trans","HomeIcon","LangSwitcher","NavigateBefore","classNames","React","useState","useTranslation","Link","useHistory","ExitToAppIcon","connect","useSelector","setLogoutThunk","ConfirmationDialog","warningIcon","AppHeader","breadcrumbMap","keys","Object","trailEdgeKey","pop","t","isOpen","setIsOpen","username","state","main","authentication","data","displayName","openMenu","document","body","classList","add","remove","openLogoutConfirmation","setOpenLogoutConfirmation","handleLogout","history","open_menu","name","logo","push","hidden","color","map","key","index","mapStateToProps","status","logout","mapDispatchToProps"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,UAAlB,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAEA,OAAO,eAAP;AAEA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,WAAP,MAAwB,kCAAxB;;AAEA,MAAMC,SAAoC,GAAG,CAAC;AAC5CC,EAAAA,aAD4C;AAE5CJ,EAAAA;AAF4C,CAAD,KAGvC;AACJ,QAAMK,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,aAAZ,CAAb;AACA,QAAMG,YAAY,GAAGF,IAAI,CAACG,GAAL,EAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAQf,cAAc,EAA5B;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAMmB,QAAQ,GAAGb,WAAW,CACzBc,KAAD;AAAA;;AAAA,oCAAmBA,KAAK,CAACC,IAAN,CAAWC,cAAX,CAA0BC,IAA7C,0DAAmB,sBAAgCC,WAAnD;AAAA,GAD0B,CAA5B;;AAGA,QAAMC,QAAQ,GAAIR,MAAD,IAAqB;AACpCA,IAAAA,MAAM,GACFS,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,gBAA5B,CADE,GAEFH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,gBAA/B,CAFJ;AAGAZ,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GALD;;AAMA,QAAM,CAACc,sBAAD,EAAyBC,yBAAzB,IAAsDhC,QAAQ,CAAC,KAAD,CAApE;;AAEA,QAAMiC,YAAY,GAAG,MAAM;AACzBD,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAzB,IAAAA,cAAc;AACf,GAHD;;AAIA,QAAM2B,OAAO,GAAG/B,UAAU,EAA1B;AACA,sBACE;AAAK,IAAA,SAAS,EAAEL,UAAU,CAAC,WAAD,EAAc;AAAEqC,MAAAA,SAAS,EAAElB;AAAb,KAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+C,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/C,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAC,uBADV;AAEE,IAAA,MAAM,EAAE;AAAEmB,MAAAA,IAAI,EAAEjB;AAAR,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAOE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEH,CAAC,CAAC,eAAD,CAAjB;AAAqC,kBAAW,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,OAAO,EAAE,MAAMgB,yBAAyB,CAAC,IAAD,CAH1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CAFF,CADF,eAmBE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEK,IAAV;AAAgB,IAAA,GAAG,EAAC,eAApB;AAAoC,IAAA,MAAM,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AACE,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACI,IAAR,CAAa3B,aAAa,CAACC,IAAI,CAACG,GAAL,MAAc,GAAf,CAA1B,CADjB;AAEE,IAAA,SAAS,EAAEjB,UAAU,CAAC,4BAAD,EAA+B;AAClDyC,MAAAA,MAAM,EAAEzB,YAAY,KAAK;AADyB,KAA/B,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAC,OAAzB;AAAiC,IAAA,KAAK,EAAE;AAAE0B,MAAAA,KAAK,EAAE;AAAT,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAJF,eAYE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,eAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIG5B,IAAI,CAAC6B,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACR,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,EAAE,EAAEhC,aAAa,CAAC+B,GAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,GAAjC,CADF,CADD,CAJH,eASE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiC5B,YAAjC,CATF,CAJF,CAZF,eA4BE;AACE,IAAA,SAAS,EAAC,gCADZ;AAEE,IAAA,OAAO,EAAE,MAAMW,QAAQ,CAAC,CAACR,MAAF,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAME;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CA5BF,CADF,eAsCE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCD,CAAC,CAAC,cAAD,CAAxC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,CAAC,CAAC,UAAD,CAAxC,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCA,CAAC,CAAC,aAAD,CAAxC,CAHF,CADF,CAtCF,CADF,CAnBF,eAmEE,oBAAC,kBAAD;AACE,IAAA,MAAM,EAAEe,sBADV;AAEE,IAAA,KAAK,EAAEf,CAAC,CAAC,eAAD,CAFV;AAGE,IAAA,IAAI,EAAG,4BAA2BA,CAAC,CAAC,eAAD,CAAkB,GAHvD;AAIE,IAAA,IAAI,EAAEP,WAJR;AAKE,IAAA,kBAAkB,EAAEO,CAAC,CAAC,eAAD,CALvB;AAME,IAAA,oBAAoB,EAAC,SANvB;AAOE,IAAA,wBAAwB,EAAEiB,YAP5B;AAQE,IAAA,0BAA0B,EAAE,MAAMD,yBAAyB,CAAC,KAAD,CAR7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnEF,CADF;AAgFD,CAzGD;;AA2GA,MAAMY,eAAe,GAAIxB,KAAD,KAAiC;AACvDyB,EAAAA,MAAM,EAAEzB,KAAK,CAACC,IAAN,CAAWyB,MAAX,CAAkBD,MAAlB,IAA4B;AADmB,CAAjC,CAAxB;;AAIA,MAAME,kBAAkC,GAAG;AACzCxC,EAAAA;AADyC,CAA3C;AAIA,eAAeF,OAAO,CAACuC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrC,SAA7C,CAAf","sourcesContent":["import { Tooltip, Typography } from \"@material-ui/core\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport { Trans } from \"react-i18next\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LangSwitcher from \"../langSwitcher/LangSwitcher\";\nimport NavigateBefore from \"@material-ui/icons/NavigateBefore\";\nimport classNames from \"classnames\";\nimport React, { FunctionComponent, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../../assets/logo-color.svg\";\nimport \"./styles.scss\";\nimport { IDispatchProps, IStateProps, TProps } from \"./types\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { IState } from \"../../../types\";\nimport { connect, useSelector } from \"react-redux\";\nimport { setLogoutThunk } from \"../../../state/main/actions\";\nimport ConfirmationDialog from \"../confirmationDialog/ConfirmationDialog\";\nimport warningIcon from \"../../../assets/warning-icon.png\";\n\nconst AppHeader: FunctionComponent<TProps> = ({\n  breadcrumbMap,\n  setLogoutThunk,\n}) => {\n  const keys = Object.keys(breadcrumbMap);\n  const trailEdgeKey = keys.pop();\n\n  const { t } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  const username = useSelector(\n    (state: IState) => state.main.authentication.data?.displayName\n  );\n  const openMenu = (isOpen: boolean) => {\n    isOpen\n      ? document.body.classList.add(\"disable-scroll\")\n      : document.body.classList.remove(\"disable-scroll\");\n    setIsOpen(isOpen);\n  };\n  const [openLogoutConfirmation, setOpenLogoutConfirmation] = useState(false);\n\n  const handleLogout = () => {\n    setOpenLogoutConfirmation(false);\n    setLogoutThunk();\n  };\n  const history = useHistory();\n  return (\n    <div className={classNames(\"appHeader\", { open_menu: isOpen })}>\n      <div className=\"appHeader__top\">\n        <div className=\"appHeader__nav_lang_switcher\">{<LangSwitcher />}</div>\n        <div className=\"userInfo__toolbar\">\n          <span>\n            <Trans\n              i18nKey=\"dashboard.welcomename\"\n              values={{ name: username }}\n            />\n          </span>\n          <Tooltip title={t(\"login.signout\")!} aria-label=\"sign out\">\n            <ExitToAppIcon\n              className=\"userInfo__toolbar_icon\"\n              id=\"signout_icon\"\n              onClick={() => setOpenLogoutConfirmation(true)}\n            />\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"appHeader__bottom\">\n        <div className=\"appHeader__background\">\n          <div className=\"appHeader__identifier\">\n            <div className=\"appHeader__identifier__logo\">\n              <img src={logo} alt=\"Open Hospital\" height=\"45px\" />\n            </div>\n            <div\n              onClick={() => history.push(breadcrumbMap[keys.pop() || \"/\"])}\n              className={classNames(\"appHeader__navigate_before\", {\n                hidden: trailEdgeKey === \"Dashboard\",\n              })}\n            >\n              <NavigateBefore fontSize=\"large\" style={{ color: \"#fc1812\" }} />\n            </div>\n            <div className=\"appHeader__identified__main\">\n              <div className=\"appHeader__identified__main__headline\">\n                Princeton-Plainsboro Teaching Hospital\n              </div>\n              <Breadcrumbs>\n                <div className=\"appHeader__home_icon\">\n                  <HomeIcon fontSize=\"small\" style={{ color: \"#fff\" }} />\n                </div>\n                {keys.map((key, index) => (\n                  <Link key={index} to={breadcrumbMap[key]}>\n                    <Typography color=\"textPrimary\">{key}</Typography>\n                  </Link>\n                ))}\n                <Typography color=\"textPrimary\">{trailEdgeKey}</Typography>\n              </Breadcrumbs>\n            </div>\n            <div\n              className=\"appHeader__identified__trigger\"\n              onClick={() => openMenu(!isOpen)}\n            >\n              <div className=\"trigger_x\"></div>\n              <div className=\"trigger_y\"></div>\n              <div className=\"trigger_z\"></div>\n            </div>\n          </div>\n          <div className=\"appHeader__nav\">\n            <div className=\"appHeader__nav_items\">\n              <div className=\"appHeader__nav__item\">{t(\"nav.pharmacy\")}</div>\n              <div className=\"appHeader__nav__item\">{t(\"nav.ward\")}</div>\n              <div className=\"appHeader__nav__item\">{t(\"nav.billing\")}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ConfirmationDialog\n        isOpen={openLogoutConfirmation}\n        title={t(\"login.signout\")}\n        info={`Are you sure you want to ${t(\"login.signout\")}?`}\n        icon={warningIcon}\n        primaryButtonLabel={t(\"login.signout\")}\n        secondaryButtonLabel=\"Dismiss\"\n        handlePrimaryButtonClick={handleLogout}\n        handleSecondaryButtonClick={() => setOpenLogoutConfirmation(false)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n  status: state.main.logout.status || \"IDLE\",\n});\n\nconst mapDispatchToProps: IDispatchProps = {\n  setLogoutThunk,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppHeader);\n"]},"metadata":{},"sourceType":"module"}