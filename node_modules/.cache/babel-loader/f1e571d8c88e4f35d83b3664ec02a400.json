{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { TextField } from '@material-ui/core';\nimport { scrollToElement } from \"../../../libraries/uiUtils/scrollToElement\";\nimport \"./styles.scss\";\nimport { createBill, createBillReset } from \"../../../state/bills/actions\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  isLoading,\n  hasSucceeded,\n  createBill,\n  createBillReset,\n  hasFailed,\n  billHomeRoute\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  };\n\n  const onSubmit = bill => {\n    createBill(bill);\n  };\n\n  const [activityTransitionState, setActivityTransitionState] = useState(\"IDLE\");\n  useEffect(() => {\n    if (activityTransitionState === \"TO_NEW_BILL_RESET\" || activityTransitionState === \"TO_BILL_HOME\") {\n      createBillReset();\n      setShouldResetForm(true);\n    }\n  }, [activityTransitionState, createBillReset]);\n  const infoBoxRef = useRef(null);\n  useEffect(() => {\n    if (hasFailed) {\n      scrollToElement(infoBoxRef.current);\n    }\n  }, [hasFailed]);\n  const [shouldResetForm, setShouldResetForm] = useState(false);\n\n  const resetFormCallback = () => {\n    setShouldResetForm(false);\n    setActivityTransitionState(\"IDLE\");\n    scrollToElement(null);\n  };\n\n  switch (activityTransitionState) {\n    case \"TO_BILL_HOME\":\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: billHomeRoute,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }\n      });\n\n    default:\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"new_Bill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AppHeader, {\n        userCredentials: userCredentials,\n        breadcrumbMap: breadcrumbMap,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__background\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }\n      }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"newBill__panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, \"inserimento bill\"), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => setActivityTransitionState(\"TO_BILL_HOME\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      }, \"indietro\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"patientDataForm__form\",\n        onSubmit: formik.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row start-sm center-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"firstName\"),\n        theme: \"regular\",\n        label: t(\"patient.firstname\"),\n        isValid: isValid(\"firstName\"),\n        errorText: getErrorText(\"firstName\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"secondName\"),\n        theme: \"regular\",\n        label: t(\"patient.secondname\"),\n        isValid: isValid(\"secondName\"),\n        errorText: getErrorText(\"secondName\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"taxCode\"),\n        theme: \"regular\",\n        label: t(\"patient.taxcode\"),\n        isValid: isValid(\"taxCode\"),\n        errorText: getErrorText(\"taxCode\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row start-sm center-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(SelectField, {\n        fieldName: \"sex\",\n        fieldValue: formik.values.sex,\n        label: t(\"patient.sex\"),\n        isValid: isValid(\"sex\"),\n        errorText: getErrorText(\"sex\"),\n        onBlur: onBlurCallback(\"sex\"),\n        options: options.sex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(DateField, {\n        fieldName: \"birthDate\",\n        fieldValue: formik.values.birthDate,\n        disableFuture: true,\n        theme: \"regular\",\n        format: \"dd/MM/yyyy\",\n        isValid: isValid(\"birthDate\"),\n        errorText: getErrorText(\"birthDate\"),\n        label: t(\"patient.birthdate\"),\n        onChange: dateFieldHandleOnChange(\"birthDate\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(SelectField, {\n        fieldName: \"bloodType\",\n        fieldValue: formik.values.bloodType,\n        label: t(\"patient.bloodtype\"),\n        isValid: isValid(\"bloodType\"),\n        errorText: getErrorText(\"bloodType\"),\n        onBlur: onBlurCallback(\"bloodType\"),\n        options: options.bloodType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row start-sm center-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"mother_name\"),\n        theme: \"regular\",\n        label: t(\"patient.mothername\"),\n        isValid: isValid(\"mother_name\"),\n        errorText: getErrorText(\"mother_name\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"father_name\"),\n        theme: \"regular\",\n        label: t(\"patient.fathername\"),\n        isValid: isValid(\"father_name\"),\n        errorText: getErrorText(\"father_name\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(SelectField, {\n        fieldName: \"parentTogether\",\n        fieldValue: formik.values.parentTogether,\n        label: t(\"patient.parentslivetoghether\"),\n        isValid: isValid(\"parentTogether\"),\n        errorText: getErrorText(\"parentTogether\"),\n        onBlur: onBlurCallback(\"parentTogether\"),\n        options: options.parentTogether,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row start-sm center-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"address\"),\n        theme: \"regular\",\n        label: t(\"patient.address\"),\n        isValid: isValid(\"address\"),\n        errorText: getErrorText(\"address\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"city\"),\n        theme: \"regular\",\n        label: t(\"patient.city\"),\n        isValid: isValid(\"city\"),\n        errorText: getErrorText(\"city\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 45\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"telephone\"),\n        theme: \"regular\",\n        label: t(\"patient.telephone\"),\n        isValid: isValid(\"telephone\"),\n        errorText: getErrorText(\"telephone\"),\n        onBlur: formik.handleBlur,\n        type: \"tel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row start-sm center-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(SelectField, {\n        fieldName: \"hasInsurance\",\n        fieldValue: formik.values.hasInsurance,\n        label: t(\"patient.hasinsurance\"),\n        isValid: isValid(\"hasInsurance\"),\n        errorText: getErrorText(\"hasInsurance\"),\n        onBlur: onBlurCallback(\"hasInsurance\"),\n        options: options.hasInsurance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row start-sm center-xs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__item fullWidth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextField, {\n        field: formik.getFieldProps(\"note\"),\n        theme: \"regular\",\n        multiline: true,\n        label: t(\"patient.note\"),\n        isValid: isValid(\"note\"),\n        errorText: getErrorText(\"note\"),\n        onBlur: formik.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 45\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"patientDataForm__buttonSet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"submit_button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(SmallButton, {\n        type: \"submit\",\n        disabled: isLoading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 45\n        }\n      }, submitButtonLabel)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reset_button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(TextButton, {\n        onClick: () => setOpenResetConfirmation(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 45\n        }\n      }, resetButtonLabel))))))), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }\n      }));\n  }\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  isLoading: state.bills.createBill.status === \"LOADING\",\n  hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n  hasFailed: state.bills.createBill.status === \"FAIL\"\n});\n\nconst mapDispatchToProps = {\n  createBill,\n  createBillReset\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useRef","useState","AppHeader","Footer","Button","useTranslation","connect","Redirect","TextField","scrollToElement","createBill","createBillReset","NewBillActivity","userCredentials","isLoading","hasSucceeded","hasFailed","billHomeRoute","t","breadcrumbMap","onSubmit","bill","activityTransitionState","setActivityTransitionState","setShouldResetForm","infoBoxRef","current","shouldResetForm","resetFormCallback","formik","handleSubmit","getFieldProps","isValid","getErrorText","handleBlur","values","sex","onBlurCallback","options","birthDate","dateFieldHandleOnChange","bloodType","parentTogether","hasInsurance","submitButtonLabel","setOpenResetConfirmation","resetButtonLabel","mapStateToProps","state","main","authentication","data","bills","status","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { IState } from \"../../../types\";\nimport { useFormik } from \"formik\";\nimport { Divider, TextField } from '@material-ui/core';\nimport { BillDTO } from \"../../../generated\";\nimport { FullBillDTO } from \"../../../generated\";\nimport { scrollToElement } from \"../../../libraries/uiUtils/scrollToElement\";\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport \"./styles.scss\";\nimport {\n    createBill,\n    createBillReset,\n} from \"../../../state/bills/actions\";\nimport {\n    IDispatchProps,\n    IStateProps,\n    TActivityTransitionState,\n    TProps,\n} from \"./types\";\n\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    isLoading,\n    hasSucceeded,\n    createBill,\n    createBillReset,\n    hasFailed,\n    billHomeRoute,\n}) => {\n    const { t } = useTranslation();\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n\n    const onSubmit = (bill: FullBillDTO) => {\n        createBill(bill);\n    };\n\n    const [activityTransitionState, setActivityTransitionState] =\n        useState<TActivityTransitionState>(\"IDLE\");\n\n    useEffect(() => {\n        if (\n            activityTransitionState === \"TO_NEW_BILL_RESET\" ||\n            activityTransitionState === \"TO_BILL_HOME\"\n        ) {\n            createBillReset();\n            setShouldResetForm(true);\n        }\n    }, [activityTransitionState, createBillReset]);\n\n\n    const infoBoxRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (hasFailed) {\n            scrollToElement(infoBoxRef.current);\n        }\n    }, [hasFailed]);\n\n    const [shouldResetForm, setShouldResetForm] = useState(false);\n\n    const resetFormCallback = () => {\n        setShouldResetForm(false);\n        setActivityTransitionState(\"IDLE\");\n        scrollToElement(null);\n    };\n\n    switch (activityTransitionState) {\n        case \"TO_BILL_HOME\":\n            return <Redirect to={billHomeRoute} />;\n        default:\n            return (\n                <div className=\"new_Bill\">\n                    <AppHeader\n                        userCredentials={userCredentials}\n                        breadcrumbMap={breadcrumbMap}\n                    />\n                    <div className=\"newBill__background\">\n                        <div className=\"newBill__content\">\n                            <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                            <div className=\"newBill__panel\">\n                                <h3>inserimento bill</h3>\n                                <Button onClick={() => setActivityTransitionState(\"TO_BILL_HOME\")}>\n                                    indietro\n                                </Button>\n                                <form className=\"patientDataForm__form\" onSubmit={formik.handleSubmit}>\n                                    <div className=\"row start-sm center-xs\">\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"firstName\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.firstname\")}\n                                                isValid={isValid(\"firstName\")}\n                                                errorText={getErrorText(\"firstName\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"secondName\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.secondname\")}\n                                                isValid={isValid(\"secondName\")}\n                                                errorText={getErrorText(\"secondName\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"taxCode\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.taxcode\")}\n                                                isValid={isValid(\"taxCode\")}\n                                                errorText={getErrorText(\"taxCode\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row start-sm center-xs\">\n                                        <div className=\"patientDataForm__item\">\n                                            <SelectField\n                                                fieldName=\"sex\"\n                                                fieldValue={formik.values.sex}\n                                                label={t(\"patient.sex\")}\n                                                isValid={isValid(\"sex\")}\n                                                errorText={getErrorText(\"sex\")}\n                                                onBlur={onBlurCallback(\"sex\")}\n                                                options={options.sex}\n                                            />\n                                        </div>\n\n                                        <div className=\"patientDataForm__item\">\n                                            <DateField\n                                                fieldName=\"birthDate\"\n                                                fieldValue={formik.values.birthDate}\n                                                disableFuture={true}\n                                                theme=\"regular\"\n                                                format=\"dd/MM/yyyy\"\n                                                isValid={isValid(\"birthDate\")}\n                                                errorText={getErrorText(\"birthDate\")}\n                                                label={t(\"patient.birthdate\")}\n                                                onChange={dateFieldHandleOnChange(\"birthDate\")}\n                                            />\n                                        </div>\n\n                                        <div className=\"patientDataForm__item\">\n                                            <SelectField\n                                                fieldName=\"bloodType\"\n                                                fieldValue={formik.values.bloodType}\n                                                label={t(\"patient.bloodtype\")}\n                                                isValid={isValid(\"bloodType\")}\n                                                errorText={getErrorText(\"bloodType\")}\n                                                onBlur={onBlurCallback(\"bloodType\")}\n                                                options={options.bloodType}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row start-sm center-xs\">\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"mother_name\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.mothername\")}\n                                                isValid={isValid(\"mother_name\")}\n                                                errorText={getErrorText(\"mother_name\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"father_name\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.fathername\")}\n                                                isValid={isValid(\"father_name\")}\n                                                errorText={getErrorText(\"father_name\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n\n                                        <div className=\"patientDataForm__item\">\n                                            <SelectField\n                                                fieldName=\"parentTogether\"\n                                                fieldValue={formik.values.parentTogether}\n                                                label={t(\"patient.parentslivetoghether\")}\n                                                isValid={isValid(\"parentTogether\")}\n                                                errorText={getErrorText(\"parentTogether\")}\n                                                onBlur={onBlurCallback(\"parentTogether\")}\n                                                options={options.parentTogether}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row start-sm center-xs\">\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"address\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.address\")}\n                                                isValid={isValid(\"address\")}\n                                                errorText={getErrorText(\"address\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"city\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.city\")}\n                                                isValid={isValid(\"city\")}\n                                                errorText={getErrorText(\"city\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n\n                                        <div className=\"patientDataForm__item\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"telephone\")}\n                                                theme=\"regular\"\n                                                label={t(\"patient.telephone\")}\n                                                isValid={isValid(\"telephone\")}\n                                                errorText={getErrorText(\"telephone\")}\n                                                onBlur={formik.handleBlur}\n                                                type=\"tel\"\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row start-sm center-xs\">\n                                        <div className=\"patientDataForm__item\">\n                                            <SelectField\n                                                fieldName=\"hasInsurance\"\n                                                fieldValue={formik.values.hasInsurance}\n                                                label={t(\"patient.hasinsurance\")}\n                                                isValid={isValid(\"hasInsurance\")}\n                                                errorText={getErrorText(\"hasInsurance\")}\n                                                onBlur={onBlurCallback(\"hasInsurance\")}\n                                                options={options.hasInsurance}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row start-sm center-xs\">\n                                        <div className=\"patientDataForm__item fullWidth\">\n                                            <TextField\n                                                field={formik.getFieldProps(\"note\")}\n                                                theme=\"regular\"\n                                                multiline={true}\n                                                label={t(\"patient.note\")}\n                                                isValid={isValid(\"note\")}\n                                                errorText={getErrorText(\"note\")}\n                                                onBlur={formik.handleBlur}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"patientDataForm__buttonSet\">\n                                        <div className=\"submit_button\">\n                                            <SmallButton type=\"submit\" disabled={isLoading}>\n                                                {submitButtonLabel}\n                                            </SmallButton>\n                                        </div>\n                                        <div className=\"reset_button\">\n                                            <TextButton onClick={() => setOpenResetConfirmation(true)}>\n                                                {resetButtonLabel}\n                                            </TextButton>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <Footer />\n                </div>\n            );\n    }\n}\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    isLoading: state.bills.createBill.status === \"LOADING\",\n    hasSucceeded: state.bills.createBill.status === \"SUCCESS\",\n    hasFailed: state.bills.createBill.status === \"FAIL\",\n});\n\nconst mapDispatchToProps: IDispatchProps = {\n    createBill,\n    createBillReset,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}