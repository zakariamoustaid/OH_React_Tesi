{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/accessories/patientDataForm/PatientDataForm.tsx\";\nimport { useFormik } from \"formik\";\nimport get from \"lodash.get\";\nimport has from \"lodash.has\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { object, string } from \"yup\";\nimport { formatAllFieldValues, getFromFields } from \"../../../libraries/formDataHandling/functions\";\nimport warningIcon from \"../../../assets/warning-icon.png\";\nimport ConfirmationDialog from \"../confirmationDialog/ConfirmationDialog\";\nimport DateField from \"../dateField/DateField\";\nimport { ProfilePicture } from \"../profilePicture/ProfilePicture\";\nimport SelectField from \"../selectField/SelectField\";\nimport SmallButton from \"../smallButton/SmallButton\";\nimport TextButton from \"../textButton/TextButton\";\nimport TextField from \"../textField/TextField\";\nimport \"./styles.scss\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PatientDataForm = ({\n  fields,\n  profilePicture,\n  onSubmit,\n  submitButtonLabel,\n  resetButtonLabel,\n  isLoading,\n  shouldResetForm,\n  resetFormCallback\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const validationSchema = object({\n    firstName: string().required(\"This field is required\"),\n    birthDate: string().required(\"This field is required\"),\n    sex: string().required(\"This field is required\"),\n    mother: string().required(\"This field is required\")\n  });\n  const initialValues = getFromFields(fields, \"value\");\n  const options = getFromFields(fields, \"options\");\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    enableReinitialize: true,\n    onSubmit: values => {\n      const formattedValues = formatAllFieldValues(fields, values);\n      onSubmit(formattedValues);\n    }\n  });\n  const {\n    setFieldValue,\n    resetForm,\n    handleBlur\n  } = formik;\n\n  const isValid = fieldName => {\n    return has(formik.touched, fieldName) && has(formik.errors, fieldName);\n  };\n\n  const getErrorText = fieldName => {\n    return has(formik.touched, fieldName) ? get(formik.errors, fieldName) : \"\";\n  };\n\n  const onProfilePictureChange = useCallback(picture => {\n    setFieldValue(\"blobPhoto\", picture);\n  }, [setFieldValue]);\n  useEffect(() => {\n    if (shouldResetForm) {\n      resetForm();\n    }\n  }, [shouldResetForm, resetForm]);\n  const dateFieldHandleOnChange = useCallback(fieldName => value => {\n    setFieldValue(fieldName, value);\n  }, [setFieldValue]);\n  const onBlurCallback = useCallback(fieldName => (e, value) => {\n    handleBlur(e);\n    setFieldValue(fieldName, value);\n  }, [setFieldValue, handleBlur]);\n  const [openResetConfirmation, setOpenResetConfirmation] = useState(false);\n\n  const handleResetConfirmation = () => {\n    setOpenResetConfirmation(false);\n    formik.resetForm();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__profilePictureContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProfilePicture, {\n    isEditable: true,\n    preLoadedPicture: profilePicture,\n    onChange: onProfilePictureChange,\n    shouldReset: shouldResetForm,\n    resetCallback: resetFormCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"patientDataForm__form\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row start-sm center-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"firstName\"),\n    theme: \"regular\",\n    label: t(\"patient.firstname\"),\n    isValid: isValid(\"firstName\"),\n    errorText: getErrorText(\"firstName\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"secondName\"),\n    theme: \"regular\",\n    label: t(\"patient.secondname\"),\n    isValid: isValid(\"secondName\"),\n    errorText: getErrorText(\"secondName\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"taxCode\"),\n    theme: \"regular\",\n    label: t(\"patient.taxcode\"),\n    isValid: isValid(\"taxCode\"),\n    errorText: getErrorText(\"taxCode\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row start-sm center-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SelectField, {\n    fieldName: \"sex\",\n    fieldValue: formik.values.sex,\n    label: t(\"patient.sex\"),\n    isValid: isValid(\"sex\"),\n    errorText: getErrorText(\"sex\"),\n    onBlur: onBlurCallback(\"sex\"),\n    options: options.sex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DateField, {\n    fieldName: \"birthDate\",\n    fieldValue: formik.values.birthDate,\n    disableFuture: true,\n    theme: \"regular\",\n    format: \"dd/MM/yyyy\",\n    isValid: isValid(\"birthDate\"),\n    errorText: getErrorText(\"birthDate\"),\n    label: t(\"patient.birthdate\"),\n    onChange: dateFieldHandleOnChange(\"birthDate\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SelectField, {\n    fieldName: \"bloodType\",\n    fieldValue: formik.values.bloodType,\n    label: t(\"patient.bloodtype\"),\n    isValid: isValid(\"bloodType\"),\n    errorText: getErrorText(\"bloodType\"),\n    onBlur: onBlurCallback(\"bloodType\"),\n    options: options.bloodType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row start-sm center-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"mother_name\"),\n    theme: \"regular\",\n    label: t(\"patient.mothername\"),\n    isValid: isValid(\"mother_name\"),\n    errorText: getErrorText(\"mother_name\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"father_name\"),\n    theme: \"regular\",\n    label: t(\"patient.fathername\"),\n    isValid: isValid(\"father_name\"),\n    errorText: getErrorText(\"father_name\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SelectField, {\n    fieldName: \"parentTogether\",\n    fieldValue: formik.values.parentTogether,\n    label: t(\"patient.parentslivetoghether\"),\n    isValid: isValid(\"parentTogether\"),\n    errorText: getErrorText(\"parentTogether\"),\n    onBlur: onBlurCallback(\"parentTogether\"),\n    options: options.parentTogether,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row start-sm center-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"address\"),\n    theme: \"regular\",\n    label: t(\"patient.address\"),\n    isValid: isValid(\"address\"),\n    errorText: getErrorText(\"address\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"city\"),\n    theme: \"regular\",\n    label: t(\"patient.city\"),\n    isValid: isValid(\"city\"),\n    errorText: getErrorText(\"city\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"telephone\"),\n    theme: \"regular\",\n    label: t(\"patient.telephone\"),\n    isValid: isValid(\"telephone\"),\n    errorText: getErrorText(\"telephone\"),\n    onBlur: formik.handleBlur,\n    type: \"tel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row start-sm center-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SelectField, {\n    fieldName: \"hasInsurance\",\n    fieldValue: formik.values.hasInsurance,\n    label: t(\"patient.hasinsurance\"),\n    isValid: isValid(\"hasInsurance\"),\n    errorText: getErrorText(\"hasInsurance\"),\n    onBlur: onBlurCallback(\"hasInsurance\"),\n    options: options.hasInsurance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row start-sm center-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__item fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    field: formik.getFieldProps(\"note\"),\n    theme: \"regular\",\n    multiline: true,\n    label: t(\"patient.note\"),\n    isValid: isValid(\"note\"),\n    errorText: getErrorText(\"note\"),\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"patientDataForm__buttonSet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"submit_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SmallButton, {\n    type: \"submit\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, submitButtonLabel)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"reset_button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextButton, {\n    onClick: () => setOpenResetConfirmation(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, resetButtonLabel))), /*#__PURE__*/React.createElement(ConfirmationDialog, {\n    isOpen: openResetConfirmation,\n    title: resetButtonLabel.toUpperCase(),\n    info: `Are you sure to ${resetButtonLabel} the Form?`,\n    icon: warningIcon,\n    primaryButtonLabel: resetButtonLabel,\n    secondaryButtonLabel: \"Dismiss\",\n    handlePrimaryButtonClick: handleResetConfirmation,\n    handleSecondaryButtonClick: () => setOpenResetConfirmation(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PatientDataForm;","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/accessories/patientDataForm/PatientDataForm.tsx"],"names":["useFormik","get","has","React","useCallback","useEffect","useState","object","string","formatAllFieldValues","getFromFields","warningIcon","ConfirmationDialog","DateField","ProfilePicture","SelectField","SmallButton","TextButton","TextField","useTranslation","PatientDataForm","fields","profilePicture","onSubmit","submitButtonLabel","resetButtonLabel","isLoading","shouldResetForm","resetFormCallback","t","validationSchema","firstName","required","birthDate","sex","mother","initialValues","options","formik","enableReinitialize","values","formattedValues","setFieldValue","resetForm","handleBlur","isValid","fieldName","touched","errors","getErrorText","onProfilePictureChange","picture","dateFieldHandleOnChange","value","onBlurCallback","e","openResetConfirmation","setOpenResetConfirmation","handleResetConfirmation","handleSubmit","getFieldProps","bloodType","parentTogether","hasInsurance","toUpperCase"],"mappings":"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","sourcesContent":["import { useFormik } from \"formik\";\nimport get from \"lodash.get\";\nimport has from \"lodash.has\";\nimport React, {\n  FunctionComponent,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { object, string } from \"yup\";\nimport {\n  formatAllFieldValues,\n  getFromFields,\n} from \"../../../libraries/formDataHandling/functions\";\nimport warningIcon from \"../../../assets/warning-icon.png\";\nimport ConfirmationDialog from \"../confirmationDialog/ConfirmationDialog\";\nimport DateField from \"../dateField/DateField\";\nimport { ProfilePicture } from \"../profilePicture/ProfilePicture\";\nimport SelectField from \"../selectField/SelectField\";\nimport SmallButton from \"../smallButton/SmallButton\";\nimport TextButton from \"../textButton/TextButton\";\nimport TextField from \"../textField/TextField\";\nimport \"./styles.scss\";\nimport { TProps } from \"./types\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PatientDataForm: FunctionComponent<TProps> = ({\n  fields,\n  profilePicture,\n  onSubmit,\n  submitButtonLabel,\n  resetButtonLabel,\n  isLoading,\n  shouldResetForm,\n  resetFormCallback,\n}) => {\n  const { t } = useTranslation();\n\n  const validationSchema = object({\n    firstName: string().required(\"This field is required\"),\n    \n    birthDate: string().required(\"This field is required\"),\n    sex: string().required(\"This field is required\"),\n    mother: string().required(\"This field is required\"),\n  });\n\n  const initialValues = getFromFields(fields, \"value\");\n\n  const options = getFromFields(fields, \"options\");\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    enableReinitialize: true,\n    onSubmit: (values) => {\n      const formattedValues = formatAllFieldValues(fields, values);\n      onSubmit(formattedValues);\n    },\n  });\n\n  const { setFieldValue, resetForm, handleBlur } = formik;\n\n  const isValid = (fieldName: string): boolean => {\n    return has(formik.touched, fieldName) && has(formik.errors, fieldName);\n  };\n\n  const getErrorText = (fieldName: string): string => {\n    return has(formik.touched, fieldName)\n      ? (get(formik.errors, fieldName) as string)\n      : \"\";\n  };\n\n  const onProfilePictureChange = useCallback(\n    (picture: string) => {\n      setFieldValue(\"blobPhoto\", picture);\n    },\n    [setFieldValue]\n  );\n\n  useEffect(() => {\n    if (shouldResetForm) {\n      resetForm();\n    }\n  }, [shouldResetForm, resetForm]);\n\n  const dateFieldHandleOnChange = useCallback(\n    (fieldName: string) => (value: any) => {\n      setFieldValue(fieldName, value);\n    },\n    [setFieldValue]\n  );\n\n  const onBlurCallback = useCallback(\n    (fieldName: string) =>\n      (\n        e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>,\n        value: string\n      ) => {\n        handleBlur(e);\n        setFieldValue(fieldName, value);\n      },\n    [setFieldValue, handleBlur]\n  );\n\n  const [openResetConfirmation, setOpenResetConfirmation] = useState(false);\n\n  const handleResetConfirmation = () => {\n    setOpenResetConfirmation(false);\n    formik.resetForm();\n  };\n  return (\n    <div className=\"patientDataForm\">\n      <div className=\"patientDataForm__profilePictureContainer\">\n        <ProfilePicture\n          isEditable\n          preLoadedPicture={profilePicture}\n          onChange={onProfilePictureChange}\n          shouldReset={shouldResetForm}\n          resetCallback={resetFormCallback}\n        />\n      </div>\n      <form className=\"patientDataForm__form\" onSubmit={formik.handleSubmit}>\n        <div className=\"row start-sm center-xs\">\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"firstName\")}\n              theme=\"regular\"\n              label={t(\"patient.firstname\")}\n              isValid={isValid(\"firstName\")}\n              errorText={getErrorText(\"firstName\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"secondName\")}\n              theme=\"regular\"\n              label={t(\"patient.secondname\")}\n              isValid={isValid(\"secondName\")}\n              errorText={getErrorText(\"secondName\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"taxCode\")}\n              theme=\"regular\"\n              label={t(\"patient.taxcode\")}\n              isValid={isValid(\"taxCode\")}\n              errorText={getErrorText(\"taxCode\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n        </div>\n\n        <div className=\"row start-sm center-xs\">\n          <div className=\"patientDataForm__item\">\n            <SelectField\n              fieldName=\"sex\"\n              fieldValue={formik.values.sex}\n              label={t(\"patient.sex\")}\n              isValid={isValid(\"sex\")}\n              errorText={getErrorText(\"sex\")}\n              onBlur={onBlurCallback(\"sex\")}\n              options={options.sex}\n            />\n          </div>\n\n          <div className=\"patientDataForm__item\">\n            <DateField\n              fieldName=\"birthDate\"\n              fieldValue={formik.values.birthDate}\n              disableFuture={true}\n              theme=\"regular\"\n              format=\"dd/MM/yyyy\"\n              isValid={isValid(\"birthDate\")}\n              errorText={getErrorText(\"birthDate\")}\n              label={t(\"patient.birthdate\")}\n              onChange={dateFieldHandleOnChange(\"birthDate\")}\n            />\n          </div>\n\n          <div className=\"patientDataForm__item\">\n            <SelectField\n              fieldName=\"bloodType\"\n              fieldValue={formik.values.bloodType}\n              label={t(\"patient.bloodtype\")}\n              isValid={isValid(\"bloodType\")}\n              errorText={getErrorText(\"bloodType\")}\n              onBlur={onBlurCallback(\"bloodType\")}\n              options={options.bloodType}\n            />\n          </div>\n        </div>\n\n        <div className=\"row start-sm center-xs\">\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"mother_name\")}\n              theme=\"regular\"\n              label={t(\"patient.mothername\")}\n              isValid={isValid(\"mother_name\")}\n              errorText={getErrorText(\"mother_name\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"father_name\")}\n              theme=\"regular\"\n              label={t(\"patient.fathername\")}\n              isValid={isValid(\"father_name\")}\n              errorText={getErrorText(\"father_name\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n\n          <div className=\"patientDataForm__item\">\n            <SelectField\n              fieldName=\"parentTogether\"\n              fieldValue={formik.values.parentTogether}\n              label={t(\"patient.parentslivetoghether\")}\n              isValid={isValid(\"parentTogether\")}\n              errorText={getErrorText(\"parentTogether\")}\n              onBlur={onBlurCallback(\"parentTogether\")}\n              options={options.parentTogether}\n            />\n          </div>\n        </div>\n\n        <div className=\"row start-sm center-xs\">\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"address\")}\n              theme=\"regular\"\n              label={t(\"patient.address\")}\n              isValid={isValid(\"address\")}\n              errorText={getErrorText(\"address\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"city\")}\n              theme=\"regular\"\n              label={t(\"patient.city\")}\n              isValid={isValid(\"city\")}\n              errorText={getErrorText(\"city\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n\n          <div className=\"patientDataForm__item\">\n            <TextField\n              field={formik.getFieldProps(\"telephone\")}\n              theme=\"regular\"\n              label={t(\"patient.telephone\")}\n              isValid={isValid(\"telephone\")}\n              errorText={getErrorText(\"telephone\")}\n              onBlur={formik.handleBlur}\n              type=\"tel\"\n            />\n          </div>\n        </div>\n\n        <div className=\"row start-sm center-xs\">\n          <div className=\"patientDataForm__item\">\n            <SelectField\n              fieldName=\"hasInsurance\"\n              fieldValue={formik.values.hasInsurance}\n              label={t(\"patient.hasinsurance\")}\n              isValid={isValid(\"hasInsurance\")}\n              errorText={getErrorText(\"hasInsurance\")}\n              onBlur={onBlurCallback(\"hasInsurance\")}\n              options={options.hasInsurance}\n            />\n          </div>\n        </div>\n\n        <div className=\"row start-sm center-xs\">\n          <div className=\"patientDataForm__item fullWidth\">\n            <TextField\n              field={formik.getFieldProps(\"note\")}\n              theme=\"regular\"\n              multiline={true}\n              label={t(\"patient.note\")}\n              isValid={isValid(\"note\")}\n              errorText={getErrorText(\"note\")}\n              onBlur={formik.handleBlur}\n            />\n          </div>\n        </div>\n\n        <div className=\"patientDataForm__buttonSet\">\n          <div className=\"submit_button\">\n            <SmallButton type=\"submit\" disabled={isLoading}>\n              {submitButtonLabel}\n            </SmallButton>\n          </div>\n          <div className=\"reset_button\">\n            <TextButton onClick={() => setOpenResetConfirmation(true)}>\n              {resetButtonLabel}\n            </TextButton>\n          </div>\n        </div>\n        <ConfirmationDialog\n          isOpen={openResetConfirmation}\n          title={resetButtonLabel.toUpperCase()}\n          info={`Are you sure to ${resetButtonLabel} the Form?`}\n          icon={warningIcon}\n          primaryButtonLabel={resetButtonLabel}\n          secondaryButtonLabel=\"Dismiss\"\n          handlePrimaryButtonClick={handleResetConfirmation}\n          handleSecondaryButtonClick={() => setOpenResetConfirmation(false)}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default PatientDataForm;\n"]},"metadata":{},"sourceType":"module"}