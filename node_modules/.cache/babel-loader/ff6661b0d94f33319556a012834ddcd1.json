{"ast":null,"code":"var _jsxFileName = \"/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport \"./styles.scss\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { newBill } from \"../../../state/bills/actions\";\nimport { getPrices, getPriceLists } from \"../../../state/prices/actions\";\nimport { getMedicals } from \"../../../state/medicals/actions\";\nimport DrawerActivity from \"./DrawerActivity\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst NewBillActivity = ({\n  userCredentials,\n  billHomeRoute,\n  med,\n  getMedicals,\n  getMedStat,\n  bill,\n  newBill,\n  prices,\n  getPrices,\n  priceLists,\n  getPriceLists\n}) => {\n  const {\n    t\n  } = useTranslation();\n  const breadcrumbMap = {\n    [t(\"nav.dashboard\")]: \"/\",\n    [t(\"nav.billing\")]: \"/billing\",\n    [t(\"nav.newbill\")]: \"/bills\"\n  }; //get prices/list\n\n  useEffect(() => {\n    getPrices();\n  }, []); //get token\n\n  const [token_auth, setToken] = useState('');\n  useEffect(() => {\n    const url = \"https://www.open-hospital.org/oh11-api/auth/login?password=admin&username=admin\";\n    const cont_t = 'application/json';\n    const acc = \"*/*\";\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-Type': cont_t,\n            'Accept': acc\n          }\n        });\n        const json = await response.json();\n        setToken(json.token);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []); //get token test\n\n  useEffect(() => {\n    console.log(token_auth);\n  });\n  const [createBill, setCreateBill] = React.useState();\n  const [date, setDate] = useState('');\n  const [openDia, setOpenDia] = useState(false);\n\n  const handleClickOpenDia = () => {\n    setCreateBill({\n      id: 0,\n      list: true,\n      listId: 0,\n      patient: pat,\n      date: date,\n      update: date,\n      listName: \"Basic\",\n      patientTrue: true,\n      patName: (pat === null || pat === void 0 ? void 0 : pat.firstName) + \" \" + (pat === null || pat === void 0 ? void 0 : pat.secondName),\n      status: \"O\",\n      amount: 1000,\n      balance: 1500,\n      user: \"admin\"\n    });\n    setFullBill({\n      bill: createBill,\n      billItems: items,\n      billPayments: [{\n        id: 0,\n        billId: 0,\n        date: \"2020-03-19T14:58:00.000Z\",\n        amount: 0,\n        user: \"admin\"\n      }]\n    });\n    console.log(fullBill === null || fullBill === void 0 ? void 0 : fullBill.bill);\n    setOpenDia(true);\n  };\n\n  const handleCloseDia = () => {\n    setOpenDia(false);\n  }; //\n  //get patient\n  //\n\n\n  const [pat, setPatient] = useState();\n  useEffect(() => {\n    const url = \"https://www.open-hospital.org/oh11-api/patients?page=1&size=1\";\n    const auth = \"Bearer \";\n    const acc = \"application/json\";\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url, {\n          method: 'GET',\n          headers: {\n            Accept: acc,\n            Authorization: auth\n          }\n        });\n        const json = await response.json();\n        setPatient(json[0]);\n        console.log(\"eccoci\" + auth);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  const patient_data = (pat === null || pat === void 0 ? void 0 : pat.firstName) + \" \" + (pat === null || pat === void 0 ? void 0 : pat.secondName); //delete an item from bill\n\n  const delete_item = e => {\n    setItems(items.filter(item => e !== item));\n  };\n\n  const [items, setItems] = React.useState([]);\n\n  const test = e => {\n    e.preventDefault();\n    console.log('hello patient');\n  }; //  //  //  //  //\n  //  CREATE BILL //\n  //  //  //  //  //\n\n\n  const [fullBill, setFullBill] = React.useState();\n\n  const saveBill = () => {\n    //const test = fullBill;\n    //console.log(JSON.stringify(test, null, 2));\n    console.log(JSON.stringify(fullBill, null, 2)); //fetch('https://www.open-hospital.org/oh11-api/bills').then(res => res.json()).then(data => console.log(data));\n\n    fetch('https://www.open-hospital.org/oh11-api/bills', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': 'Bearer '\n      },\n      body: JSON.stringify(fullBill)\n    }).then(response => response.json()).then(data => {\n      console.log(\"SUCCESS\");\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  const get_date = e => {\n    e.preventDefault();\n    setDate(e.currentTarget.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"new_Bill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    userCredentials: userCredentials,\n    breadcrumbMap: breadcrumbMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, t(\"nav.newbill\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill__panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"billPanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Date_Pat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"bill_Date\",\n    id: \"date\",\n    label: \"SELECT DATE\",\n    type: \"date\",\n    defaultValue: \"\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: e => get_date(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"bill_SelectPat\",\n    onClick: e => test(e),\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 41\n    }\n  }, \"find Patient\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_InputPat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 41\n    }\n  }, \"Patient\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 63\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"patient_input\",\n    value: patient_data,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"buttonBillSubmit\",\n    onClick: handleClickOpenDia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 41\n    }\n  }, \"SAVE\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"buttonBillSubmit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 41\n    }\n  }, \"conferma\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"newBill_Rows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: \"tableDrawer\",\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"small\",\n    \"aria-label\": \"a dense table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 53\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 53\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 53\n    }\n  }, \"Qty\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 53\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 45\n    }\n  }, items === null || items === void 0 ? void 0 : items.map((x, y) => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 61\n      }\n    }, x.hashCode), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 61\n      }\n    }, x.itemAmount), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 61\n      }\n    }, x.itemQuantity), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => delete_item(x),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(HighlightOffIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 111\n      }\n    }))));\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bill_Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DrawerActivity, {\n    prices: prices,\n    items: items,\n    setItems: setItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: openDia,\n    onClose: handleCloseDia,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, \"Confirm Message\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: saveBill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }, \"Confirm\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 30,\n      width: 250\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  userCredentials: state.main.authentication.data,\n  bill: state.bills.getBill.data,\n  med: state.medicals.medicalsOrderByName.data,\n  prices: state.prices.getPrices.data,\n  getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n  priceLists: state.prices.getPriceLists.data\n});\n\nconst mapDispatchToProps = {\n  newBill,\n  getMedicals,\n  getPrices,\n  getPriceLists\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);","map":{"version":3,"sources":["/home/zak/Tesi/OH_React_Tesi/src/components/activities/newBillActivity/NewBillActivity.tsx"],"names":["React","useEffect","useState","AppHeader","Footer","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useTranslation","connect","DialogContent","DialogTitle","Dialog","HighlightOffIcon","newBill","getPrices","getPriceLists","getMedicals","DrawerActivity","TextField","NewBillActivity","userCredentials","billHomeRoute","med","getMedStat","bill","prices","priceLists","t","breadcrumbMap","token_auth","setToken","url","cont_t","acc","fetchData","response","fetch","method","headers","json","token","error","console","log","createBill","setCreateBill","date","setDate","openDia","setOpenDia","handleClickOpenDia","id","list","listId","patient","pat","update","listName","patientTrue","patName","firstName","secondName","status","amount","balance","user","setFullBill","billItems","items","billPayments","billId","fullBill","handleCloseDia","setPatient","auth","Accept","Authorization","patient_data","delete_item","e","setItems","filter","item","test","preventDefault","saveBill","JSON","stringify","body","then","data","catch","get_date","currentTarget","value","shrink","map","x","y","hashCode","itemAmount","itemQuantity","height","width","mapStateToProps","state","main","authentication","bills","getBill","medicals","medicalsOrderByName","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, Children, FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport AppHeader from \"../../accessories/appHeader/AppHeader\";\nimport Footer from \"../../accessories/footer/Footer\";\nimport Button from \"@material-ui/core/Button\";\nimport Table from '@material-ui/core/Table';\nimport TextData from '@material-ui/core/TextField'\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useTranslation } from \"react-i18next\";\nimport { connect } from \"react-redux\";\nimport { IState } from \"../../../types\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport \"./styles.scss\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport {\n    newBill,\n    getBill,\n} from \"../../../state/bills/actions\";\nimport {\n    getPrices,\n    getPriceLists\n} from \"../../../state/prices/actions\"\nimport {\n    getMedicals,\n} from \"../../../state/medicals/actions\"\nimport {\n    IDispatchProps,\n    IStateProps,\n    TProps,\n    Item,\n} from \"./types\";\nimport DrawerActivity from \"./DrawerActivity\";\nimport { BillDTO, BillItemsDTO, FullBillDTO, PatientDTO } from \"../../../generated\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { prepareCopy } from \"immer/dist/internal\";\n\n\nconst NewBillActivity: FunctionComponent<TProps> = ({\n    userCredentials,\n    billHomeRoute,\n    med,\n    getMedicals,\n    getMedStat,\n    bill,\n    newBill,\n    prices,\n    getPrices,\n    priceLists,\n    getPriceLists,\n}) => {\n\n    const { t } = useTranslation();\n    type Custom = {\n        id: number,\n        description: string,\n        amount: string,\n    }\n\n    const breadcrumbMap = {\n        [t(\"nav.dashboard\")]: \"/\",\n        [t(\"nav.billing\")]: \"/billing\",\n        [t(\"nav.newbill\")]: \"/bills\",\n    };\n\n    //get prices/list\n    useEffect(() => {\n        getPrices();\n    }, []);\n\n    //get token\n    const [token_auth, setToken] = useState('');\n    useEffect(() => {\n        const url = \"https://www.open-hospital.org/oh11-api/auth/login?password=admin&username=admin\";\n        const cont_t = 'application/json'\n        const acc = \"*/*\";\n\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url, { method: 'POST', headers: { 'Content-Type': cont_t, 'Accept': acc} });\n                const json = await response.json();\n                setToken(json.token)\n\n            } catch (error) {\n                console.log(\"error\", error);\n            }\n        };\n        fetchData();\n\n    }, []);\n\n    //get token test\n    useEffect(() => {\n        console.log(token_auth)\n    })\n\n    const [createBill, setCreateBill] = React.useState<BillDTO>();\n    const [date, setDate] = useState('');\n\n    const [openDia, setOpenDia] = useState(false);\n\n    const handleClickOpenDia = () => {\n        setCreateBill({\n            id: 0,\n            list: true,\n            listId: 0,\n            patient: pat,\n            date: date,\n            update: date,\n            listName: \"Basic\",\n            patientTrue: true,\n            patName: pat?.firstName + \" \" + pat?.secondName,\n            status: \"O\",\n            amount: 1000,\n            balance: 1500,\n            user: \"admin\",\n        });\n        setFullBill({\n            bill: createBill,\n            billItems: items,\n            billPayments: [{\n                id: 0,\n                billId: 0,\n                date: \"2020-03-19T14:58:00.000Z\",\n                amount: 0,\n                user: \"admin\"\n            }]\n        });\n        console.log(fullBill?.bill)\n        setOpenDia(true);\n    };\n    const handleCloseDia = () => {\n        setOpenDia(false);\n    };\n\n    //\n    //get patient\n    //\n    const [pat, setPatient] = useState<PatientDTO>();\n\n\n    useEffect(() => {\n        const url = \"https://www.open-hospital.org/oh11-api/patients?page=1&size=1\";\n        const auth = \"Bearer \";\n        const acc = \"application/json\";\n\n        const fetchData = async () => {\n            try {\n                const response = await fetch(url, { method: 'GET', headers: { Accept: acc, Authorization: auth } });\n                const json = await response.json();\n                setPatient(json[0])\n                console.log(\"eccoci\"+auth);\n\n            } catch (error) {\n                console.log(\"error\", error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const patient_data = pat?.firstName + \" \" + pat?.secondName;\n\n\n\n    //delete an item from bill\n    const delete_item = (e: BillItemsDTO) => {\n        setItems(items.filter(item => e !== item));\n    }\n    const [items, setItems] = React.useState<BillItemsDTO[]>([]);\n\n    const test = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        console.log('hello patient')\n    }\n\n    //  //  //  //  //\n\n    //  CREATE BILL //\n\n    //  //  //  //  //\n\n\n\n    const [fullBill, setFullBill] = React.useState<FullBillDTO>();\n\n    const saveBill = () => {\n\n        //const test = fullBill;\n        //console.log(JSON.stringify(test, null, 2));\n        console.log(JSON.stringify(fullBill, null, 2));\n\n        //fetch('https://www.open-hospital.org/oh11-api/bills').then(res => res.json()).then(data => console.log(data));\n\n        fetch('https://www.open-hospital.org/oh11-api/bills', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ',\n            },\n            body: JSON.stringify(fullBill),\n        })\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"SUCCESS\");\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    }\n    const get_date = (e:React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        e.preventDefault();\n        setDate(e.currentTarget.value)\n    }\n\n    return (\n        <div className=\"new_Bill\">\n            <AppHeader\n                userCredentials={userCredentials}\n                breadcrumbMap={breadcrumbMap}\n            />\n            <div className=\"newBill__background\">\n                <div className=\"newBill__content\">\n                    <div className=\"newBill__title\">{t(\"nav.newbill\")}</div>\n                    <div className=\"newBill__panel\">\n                        <div className=\"billPanel\">\n                            <form>\n                                <div className=\"newBill_Head\">\n                                    <div className=\"newBill_Date_Pat\">\n                                        <TextField\n                                            className='bill_Date'\n                                            id=\"date\"\n                                            label=\"SELECT DATE\"\n                                            type=\"date\"\n                                            defaultValue=\"\"\n                                            InputLabelProps={{\n                                                shrink: true,\n                                            }}\n                                            onChange={e => get_date(e)}\n                                        />\n                                        <Button type=\"submit\" className='bill_SelectPat' onClick={e => test(e)} variant=\"outlined\">find Patient</Button>\n                                    </div>\n                                    <div className=\"newBill_InputPat\">\n                                        <label>Patient</label><span></span><input className=\"patient_input\" value={patient_data} disabled ></input>\n                                        <Button className=\"buttonBillSubmit\" onClick={handleClickOpenDia}>SAVE</Button>\n                                        <Button className=\"buttonBillSubmit\">conferma</Button>\n                                    </div>\n\n                                </div>\n                                <div className=\"newBill_Rows\">\n                                    <TableContainer className=\"tableDrawer\" component={Paper}>\n                                        <Table size=\"small\" aria-label=\"a dense table\">\n                                            <TableHead>\n                                                <TableRow>\n                                                    <TableCell>Description</TableCell>\n                                                    <TableCell>Amount</TableCell>\n                                                    <TableCell>Qty</TableCell>\n                                                    <TableCell>Delete</TableCell>\n                                                </TableRow>\n                                            </TableHead>\n                                            <TableBody>\n                                                {items?.map((x, y) => {\n                                                    return (\n                                                        <TableRow>\n                                                            <TableCell>{x.hashCode}</TableCell>\n                                                            <TableCell>{x.itemAmount}</TableCell>\n                                                            <TableCell>{x.itemQuantity}</TableCell>\n                                                            <TableCell><Button onClick={() => delete_item(x)}><HighlightOffIcon></HighlightOffIcon></Button></TableCell>\n                                                        </TableRow>\n                                                    )\n                                                }\n                                                )}\n                                            </TableBody>\n                                        </Table>\n                                    </TableContainer>\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"bill_Drawer\">\n                            <DrawerActivity prices={prices} items={items} setItems={setItems} />\n                            <Dialog open={openDia} onClose={handleCloseDia} aria-labelledby=\"form-dialog-title\">\n                                <DialogTitle id=\"form-dialog-title\">Confirm Message</DialogTitle>\n                                <Button color=\"primary\" size=\"large\" onClick={saveBill} >Confirm</Button>\n                                <DialogContent>\n                                    <div style={{ height: 30, width: 250 }}>\n                                    </div>\n                                </DialogContent>\n                            </Dialog>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\n\nconst mapStateToProps = (state: IState): IStateProps => ({\n    userCredentials: state.main.authentication.data,\n    bill: state.bills.getBill.data,\n    med: state.medicals.medicalsOrderByName.data,\n    prices: state.prices.getPrices.data,\n    getMedStat: state.medicals.medicalsOrderByName.status || \"IDLE\",\n    priceLists: state.prices.getPriceLists.data\n});\n\n\nconst mapDispatchToProps: IDispatchProps = {\n    newBill,\n    getMedicals,\n    getPrices,\n    getPriceLists\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewBillActivity);\n"]},"metadata":{},"sourceType":"module"}