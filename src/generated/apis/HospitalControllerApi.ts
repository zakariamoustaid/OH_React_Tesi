// tslint:disable
/**
 * OH 2.0 Api Documentation
 * OH 2.0 Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Observable } from 'rxjs';
import { BaseAPI, HttpHeaders, throwIfNullOrUndefined, encodeURI, OperationOpts, RawAjaxResponse } from '../runtime';
import {
    HospitalDTO,
    ResponseEntity,
} from '../models';

export interface UpdateHospitalUsingPUTRequest {
    code: string;
    hospitalDTO: HospitalDTO;
}

/**
 * no description
 */
export class HospitalControllerApi extends BaseAPI {

    /**
     * getHospitalCurrencyCode
     */
    getHospitalCurrencyCodeUsingGET(): Observable<string>
    getHospitalCurrencyCodeUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<string>>
    getHospitalCurrencyCodeUsingGET(opts?: OperationOpts): Observable<string | RawAjaxResponse<string>> {
        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication
        };

        return this.request<string>({
            url: '/hospitals/currencyCode',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * getHospital
     */
    getHospitalUsingGET(): Observable<HospitalDTO>
    getHospitalUsingGET(opts?: OperationOpts): Observable<RawAjaxResponse<HospitalDTO>>
    getHospitalUsingGET(opts?: OperationOpts): Observable<HospitalDTO | RawAjaxResponse<HospitalDTO>> {
        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication
        };

        return this.request<HospitalDTO>({
            url: '/hospitals',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     * updateHospital
     */
    updateHospitalUsingPUT({ code, hospitalDTO }: UpdateHospitalUsingPUTRequest): Observable<ResponseEntity>
    updateHospitalUsingPUT({ code, hospitalDTO }: UpdateHospitalUsingPUTRequest, opts?: OperationOpts): Observable<RawAjaxResponse<ResponseEntity>>
    updateHospitalUsingPUT({ code, hospitalDTO }: UpdateHospitalUsingPUTRequest, opts?: OperationOpts): Observable<ResponseEntity | RawAjaxResponse<ResponseEntity>> {
        throwIfNullOrUndefined(code, 'code', 'updateHospitalUsingPUT');
        throwIfNullOrUndefined(hospitalDTO, 'hospitalDTO', 'updateHospitalUsingPUT');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // JWT authentication
        };

        return this.request<ResponseEntity>({
            url: '/hospitals/{code}'.replace('{code}', encodeURI(code)),
            method: 'PUT',
            headers,
            body: hospitalDTO,
        }, opts?.responseOpts);
    };

}
